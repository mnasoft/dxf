

https://help.autodesk.com/view/OARX/2021/ENU/

* ToDo
 ;;;; http://help.autodesk.com/view/ACD/2017/RUS/

 ;;;;AcRxObject
 ;;;;  AcDbObject
 ;;;;     AcDbEntity
 ;;;;      AcDbText -
 ;;;;        AcDbAttribute
 ;;;;        AcDbAttributeDefinition
 ;;;;      AcDbBlockBegin
 ;;;;      AcDbBlockEnd
 ;;;;      AcDbSequenceEnd
 ;;;;      AcDbBlockReference
 ;;;;        AcDbMInsertBlock
 ;;;;      AcDbVertex
 ;;;;        AcDb2dVertex
 ;;;;        AcDb3dPolylineVertex
 ;;;;        AcDbPolygonMeshVertex
 ;;;;        AcDbPolyFaceMeshVertex
 ;;;;        AcDbFaceRecord
 ;;;;      AcDbCurve
 ;;;;        AcDb2dPolyline                  ./dbents.h:class AcDb2dPolyline: public AcDbCurve 
 ;;;;        AcDb3dPolyline                  ./dbents.h:class AcDb3dPolyline: public AcDbCurve 
 ;;;;        AcDbArc                +        ./dbents.h:class AcDbArc: public AcDbCurve 
 ;;;;        AcDbCircle             +        ./dbents.h:class AcDbCircle: public AcDbCurve 
 ;;;;        AcDbLine               +        ./dbents.h:class AcDbLine: public AcDbCurve 
 ;;;;        AcDbRay                -        ./dbray.h:class AcDbRay: public AcDbCurve 
 ;;;;        AcDbXline              -        ./dbxline.h:class AcDbXline: public AcDbCurve
 ;;;;        AcDbPolyline                    ./dbpl.h:class AcDbPolyline : public AcDbCurve
 ;;;;        AcDbSpline                      ./dbspline.h:class AcDbSpline: public AcDbCurve
 ;;;;        AcDbEllipse                     ./dbelipse.h:class AcDbEllipse: public  AcDbCurve
 ;;;;        AcDbLeader                      ./dblead.h:class AcDbLeader: public  AcDbCurve  
 ;;;;      AcDbPoint                +        ./dbents.h:class AcDbPoint: public AcDbEntity
 ;;;;      AcDbFace
 ;;;;      AcDbPolyFaceMesh
 ;;;;      AcDbPolygonMesh
 ;;;;      AcDbTrace
 ;;;;      AcDbSolid
 ;;;;      AcDbShape
 ;;;;      AcDbViewport

* Code
#+name: code
#+begin_src lisp
  (defun make-defclass (m-p o-i des)
    (let ((doc (first (first des)))
	  (prop (mapcar #'(lambda (el)
			    (str:concat "ac-" (str:downcase (str:header-case el))))
			(nreverse (reduce #'(lambda (x y)
					      (if (string= "" y) x (cons y x)))
					  (mapcar #'second m-p) :initial-value nil))))
	  (cl-name (str:downcase (str:header-case (first (first (last o-i))))))
	  (parent  (str:downcase (str:header-case (first (first (cdr (reverse o-i))))))))
      (format t 
	      "(defclass ~A (~A)~%  (~%~{  (~A)~%~}  )~%  (:documentation ~S))" 
	      cl-name
	      parent
	      (mapcar #'(lambda (slot)
			  (format nil "~A~28t:accessor ~A~66t:initarg :~A~104t:initform nil :documentation ~S"
				  slot slot slot slot))
		      prop)
	      doc)
      (format t "~2%(defparameter *~A-properties* '(~{~A~^ ~}))" cl-name prop)
      (format t "~2%(mapcar #'make-slot (set-difference *~A-properties* *~A-properties*))" cl-name parent)))
#+end_src

#+RESULTS: code
: MAKE-DEFCLASS

* Objects
** Application Object (ActiveX)
#+name: des-AcadApplication
| Description                             |
|-----------------------------------------|
| An instance of the AutoCAD application. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDocument
| cl-nm           |
|-----------------|
| AcadApplication |

**** Object Inheritance
#+name: o-i-AcadApplication
| Object          |
| AcadApplication |

**** Create Using
#+BEGIN_SRC VBA
    GetObject("AutoCAD.Application.24")
    CreateObject("AutoCAD.Application.24")
#+END_SRC

**** Access Via
#+BEGIN_SRC VBA
    object.Application
#+END_SRC

*** Members

These members are part of this object:
#+name: m-p-AcadApplication
| Methods            | Properties     | Events               |
|--------------------+----------------+----------------------|
| Eval               | ActiveDocument | AppActivate          |
| GetAcadState       | Application    | AppDeactivate        |
| GetInterfaceObject | Caption        | ARXLoaded            |
| ListARX            | Documents      | ARXUnloaded          |
| LoadARX            | FullName       | BeginCommand         |
| LoadDVB            | Height         | BeginFileDrop        |
| Quit               | HWND           | BeginLisp            |
| RunMacro           | LocaleID       | BeginModal           |
| UnloadARX          | MenuBar        | BeginOpen            |
| UnloadDVB          | MenuGroups     | BeginPlot            |
| Update             | Name           | BeginQuit            |
| ZoomAll            | Path           | BeginSave            |
| ZoomCenter         | Preferences    | EndCommand           |
| ZoomExtents        | StatusID       | EndLisp              |
| ZoomPickWindow     | VBE            | EndModal             |
| ZoomPrevious       | Version        | EndOpen              |
| ZoomScaled         | Visible        | EndPlot              |
| ZoomWindow         | Width          | EndSave              |
|                    | WindowLeft     | LispCancelled        |
|                    | WindowState    | NewDrawing           |
|                    | WindowTop      | SysVarChanged        |
|                    |                | WindowChanged        |
|                    |                | WindowMovedOrResized |

*** Remarks

The properties that are associated with the Application object reflect the properties of the main application window. The methods control the loading or listing of the currently loaded external applications and interface objects.

The active document (AutoCAD drawing) can be accessed with the ActiveDocument property.

To access the Application object from VBA, use ThisDrawing.Application. To access the Application object from VB, use the Visual Basic 7 functions GetObject or CreateObject.

If AutoCAD is running, the GetObject function will retrieve the current AutoCAD Application object. When running multiple sessions of AutoCAD, the GetObject function will return the first instance of AutoCAD in the Windows Running Object Table. See the Microsoft Visual Basic 7 documentation for the Running Object Table (ROT) and the GetObject function (for more information about verifying the session returned by GetObject).

Use version-dependent ProgIDs. If a CreateObject or GetObject function uses a version-independent ProgID, change the function to use a version-dependent ProgID. For example, you would change CreateObject("AutoCAD.Application") to CreateObject("AutoCAD.Application.24").

The application object is also the Global object for the ActiveX interface. This means that all the methods and properties for the Application object are available in the global name space.

Use the Quit method to end the AutoCAD session.

*** Code
#+name: AcadApplication
#+header: :var m-p=m-p-AcadApplication
#+header: :var o-i=o-i-AcadApplication
#+header: :var des=des-AcadApplication
#+header: :var code=code
#+header: :results output file
#+header: :file AcadApplication.lisp
#+begin_src lisp 
  (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadApplication
[[file:AcadApplication.lisp]]

** Documents Collection (ActiveX)
#+name: des-AcadDocuments
| Description                                                                  |
|------------------------------------------------------------------------------|
| The collection of all AutoCAD drawings that are open in the current session. |

Supported Platforms: Windows only
*** Class Information

**** Class Name
#+name: cl-AcadDocuments
| cl-nm         |
|---------------|
| AcadDocuments |

**** Object Inheritance
#+name: o-i-AcadDocuments
| Object        |
| AcadObject    |
| AcadDocuments |

**** Create Using
#+BEGIN_SRC VBA
  Not applicable
#+END_SRC

**** Access Via
#+BEGIN_SRC VBA
  Application.Documents
#+END_SRC
    
*** Members

These members are part of this object:
#+name: m-p-AcadDocuments
| Methods | Properties  | Events |
|---------+-------------+--------|
| Add     | Application |        |
| Close   | Count       |        |
| Item    |             |        |
| Open    |             |        |
*** Remarks

To add a new member to the collection, use the Add or Open methods. To select a specific document, use the Item method. To close a specific document, use the Close method found on the Document object. To close all documents, use the Close method found on this collection.

There is no limit to the number of documents that you can create in your drawing. However, there can be only one instance of the Documents collection. The Documents collection is predefined for each application. You can make multiple references to it by using the Documents property. Once done with an object, the reference is automatically released.
*** Code
#+name: AcadDocuments
#+header: :var m-p=m-p-AcadDocuments
#+header: :var o-i=o-i-AcadDocuments
#+header: :var des=des-AcadDocuments
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDocuments.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDocuments
[[file:AcadDocuments.lisp]]

** Database Object (ActiveX)
#+name: des-AcadDatabase
| Description                    |
|--------------------------------|
| The contents of an XRef block. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
| cl-nm        |
|--------------|
| AcadDatabase |
**** Object Inheritance
| Object       |
| AcadDatabase |

**** Create Using
#+BEGIN_SRC VBA
  Not applicable
#+END_SRC
    
**** Access Via
#+BEGIN_SRC VBA
    Block.XRefDatabase
#+END_SRC
    
*** Members

These members are part of this object:
#+name: m-p-AcadDatabase
| Methods          | Properties             | Events |
|------------------+------------------------+--------|
| CopyObjects      | Blocks                 |        |
| HandleToObject   | Dictionaries           |        |
| ObjectIdToObject | DimStyles              |        |
|                  | ElevationModelSpace    |        |
|                  | ElevationPaperSpace    |        |
|                  | Groups                 |        |
|                  | Layers                 |        |
|                  | Layouts                |        |
|                  | Limits                 |        |
|                  | Linetypes              |        |
|                  | Material               |        |
|                  | ModelSpace             |        |
|                  | PaperSpace             |        |
|                  | PlotConfigurations     |        |
|                  | Preferences            |        |
|                  | RegisteredApplications |        |
|                  | SectionManager         |        |
|                  | SummaryInfo            |        |
|                  | TextStyles             |        |
|                  | UserCoordinateSystems  |        |
|                  | Viewports              |        |
|                  | Views                  |        |
Remarks

This object provides access to the contents of an external reference block. It is only available on blocks whose IsXRef property is equal to True.
Release Information

Releases: AutoCAD 2000 and later

    The FileDependencies property was removed in AutoCAD 2018 and AutoCAD 2018-based products.


*** Code
#+name: AcadDatabase
#+header: :var m-p=m-p-AcadDatabase
#+header: :var o-i=o-i-AcadDatabase
#+header: :var des=des-AcadDatabase
#+header: :var code=code
#+header: :results output file file
#+header: :file AcadDatabase.lisp
#+begin_src lisp 
  (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDatabase
[[file:AcadDatabase.lisp]]

** Document Object (ActiveX)
#+name: des-AcadDocument
| Description         |
|---------------------|
| An AutoCAD drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDocument
| cl-nm        |
|--------------|
| AcadDocument |
**** Object Inheritance
#+name: o-i-AcadDocument
| Object       |
| AcadDatabase |
| AcadDocument |
**** Create Using
#+BEGIN_SRC VBA
    Documents.Add
    Documents.Open
    Document.New
#+END_SRC

**** Access Via
#+BEGIN_SRC VBA
    Documents.Item
    Application.ActiveDocument
#+END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDocument
| Methods          | Properties             | Events                   |
|------------------+------------------------+--------------------------|
| Activate         | Active                 | Activate                 |
| AuditInfo        | ActiveDimStyle         | BeginClose               |
| Close            | ActiveLayer            | BeginCommand             |
| CopyObjects      | ActiveLayout           | BeginDocClose            |
| EndUndoMark      | ActiveLinetype         | BeginDoubleClick         |
| Export           | ActiveMaterial         | BeginLISP                |
| GetVariable      | ActivePViewport        | BeginPlot                |
| HandleToObject   | ActiveSelectionSet     | BeginRightClick          |
| Import           | ActiveSpace            | BeginSave                |
| LoadShapeFile    | ActiveTextStyle        | BeginShortcutMenuCommand |
| New              | ActiveUCS              | BeginShortcutMenuDefault |
| ObjectIDToObject | ActiveViewport         | BeginShortcutMenuEdit    |
| Open             | Application            | BeginShortcutMenuGrip    |
| PostCommand      | Blocks                 | BeginShortcutMenuOSnap   |
| PurgeAll         | Database               | Deactivate               |
| Regen            | Dictionaries           | EndCommand               |
| Save             | DimStyles              | EndLISP                  |
| SaveAs           | ElevationModelSpace    | EndPlot                  |
| SendCommand      | ElevationPaperSpace    | EndSave                  |
| SetVariable      | FullName               | EndShortcutMenu          |
| StartUndoMark    | Groups                 | LayoutSwitched           |
| WBlock           | Height                 | LISPCancelled            |
|                  | HWND                   | ObjectAdded              |
|                  | Layers                 | ObjectErased             |
|                  | Layouts                | ObjectModified           |
|                  | Limits                 | SelectionChanged         |
|                  | Linetypes              | WindowChanged            |
|                  | Materials              | WindowMovedOrResized     |
|                  | ModelSpace             |                          |
|                  | MSpace                 |                          |
|                  | Name                   |                          |
|                  | ObjectSnapMode         |                          |
|                  | PaperSpace             |                          |
|                  | Path                   |                          |
|                  | PickfirstSelectionSet  |                          |
|                  | Plot                   |                          |
|                  | PlotConfigurations     |                          |
|                  | Preferences            |                          |
|                  | ReadOnly               |                          |
|                  | RegisteredApplications |                          |
|                  | Saved                  |                          |
|                  | SectionManager         |                          |
|                  | SelectionSets          |                          |
|                  | SummaryInfo            |                          |
|                  | TextStyles             |                          |
|                  | UserCoordinateSystems  |                          |
|                  | Utility                |                          |
|                  | Viewports              |                          |
|                  | Views                  |                          |
|                  | Width                  |                          |
|                  | WindowState            |                          |
|                  | WindowTitle            |                          |
*** Remarks

The active document (AutoCAD drawing) can be accessed using ThisDrawing in VBA, or through the ActiveDocument property in VB. Because AutoCAD works with only one document at a time, and that document represents one database, the active document can be thought of as the current database as well as the current document.

Certain objects in the drawing establish the format, location, or style that new objects being added to the drawing will adopt. These objects include the DimensionStyle, TextStyle, Linetype, Viewport, and Layer objects. A drawing may contain many of these types of objects, but only one may be active at a time. For example, there may be several linetypes available in a drawing, but only one, designated as the active one, will be used when creating a new entity. The Document object contains the references to these active objects. To set an existing object as the active object, use the properties listed below.

The Document object also contains a property (or link) for all the collections. From these collections, you can iterate through every object in the drawing.

To access drawing properties such as Title , Subject, Author, and Keywords , the AcadSummaryInfo interface, accessible as a property of the Document object, must be used.

To create or open a Document object, use the Open method.

Using Paper Space and Model Space
    From the Document object, you control the model space and paper space settings. By default, a drawing is opened in the model space, with the tiled viewport setting. Use the ActiveSpace property, MSpace property, and the Display method to control the model space and paper space settings. See the PViewport object for more information about using these properties and methods. 
Resetting Active Objects
    Changes to most active objects, such as the active layer and active linetype, are displayed immediately. However, several objects must be reset for changes to appear. These objects are the active text style, active UCS, and the active viewport. To reset the objects, simply call the ActiveTextStyle, ActiveUCS, or ActiveViewport property, using the updated object. 

Release Information

Releases: AutoCAD 2000 and later

    The FileDependencies property was removed in AutoCAD 2018 and AutoCAD 2018-based products.
*** Code
#+name: AcadDocument
#+header: :var m-p=m-p-AcadDocument
#+header: :var o-i=o-i-AcadDocument
#+header: :var des=des-AcadDocument
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDocument.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDocument
[[file:AcadDocument.lisp]]

** Blocks Collection (ActiveX)
#+name: des-AcadBlocks
| Description                                  |
|----------------------------------------------|
| The collection of all blocks in the drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadBlocks
| cl-nm      |
|------------|
| AcadBlocks |
**** Object Inheritance
#+name: o-i-AcadBlocks
| Object     |
| AcadObject |
| AcadBlocks |

**** Create Using
#+BEGIN_SRC #+BEGIN_SRC VBA
    Not applicable
#+END_SRC

**** Access Via
#+BEGIN_SRC #+BEGIN_SRC VBA
    Document.Blocks
#+END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadBlocks
| Methods                | Properties             | Events |
|------------------------+------------------------+--------|
| Add                    | Application            |        |
| GetExtensionDictionary | Count                  |        |
| GetXData               | Document               |        |
| Item                   | Handle                 |        |
| SetXData               | HasExtensionDictionary |        |
|                        | ObjectID               |        |
|                        | ObjectName             |        |
|                        | OwnerID                |        |

*** Remarks

To add a new member to the collection, use the Add method. To select a specific block, use the Item method.

There are two special blocks in the collection. One contains the collection of all model space entities, the ModelSpace collection; the other contains all paper space entities, the PaperSpace collection.

Although the Blocks collection inherits a Delete method, you cannot actually delete the collection. Attempting to delete the Blocks collection will result in an error, therefore the Delete method has been removed from the documentation for this collection.

There is no limit to the number of blocks you can create in your drawing. However, there can be only one instance of the Blocks collection. The Blocks collection is predefined for each drawing. You can make multiple references to it by using the Blocks property. Once done with an object, the reference is automatically released.
*** Code
#+name:AcadBlocks
#+header: :var m-p=m-p-AcadBlocks
#+header: :var o-i=o-i-AcadBlocks
#+header: :var des=des-AcadBlocks
#+header: :var code=code
#+header: :results output file
#+header: :file AcadBlocks.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadBlocks
[[file:AcadBlocks.lisp]]

** Dictionaries Collection (ActiveX)
#+name: des-AcadDictionaries
| Description                                        |
|----------------------------------------------------|
| The collection of all dictionaries in the drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDictionaries
| cl-nm            |
|------------------|
| AcadDictionaries |
**** Object Inheritance
#+name: o-i-AcadDictionaries
| Object           |
| AcadObject       |
| AcadDictionaries |

**** Create Using
#+BEGIN_SRC VBA
    Not applicable
#+END_SRC

**** Access Via

    VBA

    Document.Dictionaries

*** Members

These members are part of this object:

#+name: m-p-AcadDictionaries
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Add                    | Application            | Modified |
| GetExtensionDictionary | Count                  |          |
| GetXData               | Document               |          |
| Item                   | Handle                 |          |
| SetXData               | HasExtensionDictionary |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

To add a new member to the collection, use the Add method. To select a specific dictionary, use the Item method.

Although the Dictionaries collection inherits a Delete method, you cannot actually delete the collection. Attempting to delete the Dictionaries collection will result in an error. The Delete method has been removed from the documentation for this collection.

There is no limit to the number of dictionaries that you can create in your drawing. However, there can be only one instance of the Dictionaries collection. The Dictionaries collection is predefined for each drawing. You can make multiple references to it by using the Dictionaries property. Once done with an object, the reference is automatically released.
*** Code
#+name:AcadDictionaries
#+header: :var m-p=m-p-AcadDictionaries
#+header: :var o-i=o-i-AcadDictionaries
#+header: :var des=des-AcadDictionaries
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDictionaries.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDictionaries
[[file:AcadDictionaries.lisp]]

** DimStyles Collection (ActiveX)
#+name: des-AcadDimStyles
| Description                                            |
|--------------------------------------------------------|
| The collection of all dimension styles in the drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDimStyles
| cl-nm         |
|---------------|
| AcadDimStyles |
**** Object Inheritance
#+name: o-i-AcadDimStyles
| Object        |
| AcadObject    |
| AcadDimStyles |

**** Create Using
#+BEGIN_SRC VBA
    Not applicable
#+END_SRC

**** Access Via
#+BEGIN_SRC VBA
Document.DimStyles
#+END_SRC

*** Members

These members are part of this object:

#+name: m-p-AcadDimStyles
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Add                    | Application            | Modified |
| GetExtensionDictionary | Count                  |          |
| GetXData               | Document               |          |
| Item                   | Handle                 |          |
| SetXData               | HasExtensionDictionary |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

To add a new member to the collection, use the Add method. To select a specific dimension style, use the Item method.

Although the DimStyles collection inherits a Delete method, you cannot actually delete the collection. Attempting to delete the DimStyles collection will result in an error. The Delete method has been removed from the documentation for this collection.

There is no limit to the number of dimension styles that you can create in your drawing. However, there can be only one instance of the DimStyles collection. The DimStyles collection is predefined for each drawing. You can make multiple references to it by using the DimStyles property. Once done with an object, the reference is automatically released.
*** Code
#+name:AcadDimStyles
#+header: :var m-p=m-p-AcadDimStyles
#+header: :var o-i=o-i-AcadDimStyles
#+header: :var des=des-AcadDimStyles
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDimStyles.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDimStyles
[[file:AcadDimStyles.lisp]]

** Groups Collection (ActiveX)
#+name: des-AcadGroups
| Description                                  |
|----------------------------------------------|
| The collection of all groups in the drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadGroups
| cl-nm      |
|------------|
| AcadGroups |
**** Object Inheritance
#+name: o-i-AcadGroups
| Object     |
| AcadObject |
| AcadGroups |

**** Create Using
#+BEGIN_SRC VBA
#+END_SRC
    Not applicable
#+END_SRC

**** Access Via

    VBA

    Document.Groups

*** Members

These members are part of this object:

#+name: m-p-AcadGroups
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Add                    | Application            | Modified |
| GetExtensionDictionary | Count                  |          |
| GetXData               | Document               |          |
| Item                   | Handle                 |          |
| SetXData               | HasExtensionDictionary |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

To add a new member to the collection, use the Add method. To select a specific group, use the Item method.

Although the Groups collection inherits a Delete method, you cannot actually delete the collection. Attempting to delete the Groups collection will result in an error, therefore the Delete method has been removed from the documentation for this collection.

There is no limit to the number of groups you can create in your drawing. However, there can be only one instance of the Groups collection. The Groups collection is predefined for each drawing. You can make multiple references to it by using the Groups property. Once done with an object, the reference is automatically released.
*** Code
#+name:AcadGroups
#+header: :var m-p=m-p-AcadGroups
#+header: :var o-i=o-i-AcadGroups
#+header: :var des=des-AcadGroups
#+header: :var code=code
#+header: :results output file
#+header: :file AcadGroups.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadGroups
[[file:AcadGroups.lisp]]

** Layers Collection (ActiveX)
#+name: des-AcadLayers
| Description                                  |
|----------------------------------------------|
| The collection of all layers in the drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadLayers
| cl-nm      |
|------------|
| AcadLayers |
**** Object Inheritance
#+name: o-i-AcadLayers
| Object     |
| AcadObject |
| AcadLayers |
**** Create Using
#+BEGIN_SRC VBA
    Not applicable


#+END_SRC
**** Access Via

    VBA

    Document.Layers

*** Members

These members are part of this object:

#+name: m-p-AcadLayers
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Add                    | Application            | Modified |
| GenerateUsageData      | Count                  |          |
| GetExtensionDictionary | Document               |          |
| GetXData               | Handle                 |          |
| Item                   | HasExtensionDictionary |          |
| SetXData               | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

To add a new member to the collection, use the Add method. To select a specific layer, use the Item method.

Although the Layers collection inherits a Delete method, you cannot actually delete the collection. Attempting to delete the Layers collection will result in an error. The Delete method has been removed from the documentation for this collection.

There is no limit to the number of layers that you can create in your drawing. However, there can be only one instance of the Layers collection. The Layers collection is predefined for each drawing. You can make multiple references to it by using the Layers property. Once done with an object, the reference is automatically released.
*** Code
#+name:AcadLayers
#+header: :var m-p=m-p-AcadLayers
#+header: :var o-i=o-i-AcadLayers
#+header: :var des=des-AcadLayers
#+header: :var code=code
#+header: :results output file
#+header: :file AcadLayers.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadLayers
[[file:AcadLayers.lisp]]

** Layouts Collection (ActiveX)
#+name: des-AcadLayouts
| Description                                   |
|-----------------------------------------------|
| The collection of all layouts in the drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadLayouts
| cl-nm       |
|-------------|
| AcadLayouts |
**** Object Inheritance
#+name: o-i-AcadLayouts
| Object      |
| AcadObject  |
| AcadLayouts |

**** Create Using
#+BEGIN_SRC VBA
    Not applicable
#+END_SRC

**** Access Via

#+BEGIN_SRC VBA
    Document.Layouts
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadLayouts
| Methods                | Properties             | Events |
|------------------------+------------------------+--------|
| Add                    | Application            |        |
| GetExtensionDictionary | Count                  |        |
| GetXData               | Document               |        |
| Item                   | Handle                 |        |
| SetXData               | HasExtensionDictionary |        |
|                        | ObjectID               |        |
|                        | ObjectName             |        |
|                        | OwnerID                |        |
*** Remarks

To add a new Layout to the collection, use the Add method. When a new layout is created, it is not automatically made current. To make a layout current, use the ActiveLayout property.

You can create a maximum of 255 layouts in your drawing. There can be only one instance of the Layouts collection. The Layouts collection is predefined for each document.

To select a specific layout, including the ModelSpace and PaperSpace collections, use the Item method.

Although the Layouts collection inherits a Delete method, you cannot actually delete the collection. Attempting to delete the Layouts collection will result in an error. The Delete method has been removed from the documentation for this collection.
*** Code
#+name:AcadLayouts
#+header: :var m-p=m-p-AcadLayouts
#+header: :var o-i=o-i-AcadLayouts
#+header: :var des=des-AcadLayouts
#+header: :var code=code
#+header: :results output file
#+header: :file AcadLayouts.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadLayouts
[[file:AcadLayouts.lisp]]

** Linetypes Collection (ActiveX)
#+name: des-AcadLineTypes
| Description                                     |
|-------------------------------------------------|
| The collection of all linetypes in the drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadLineTypes
| cl-nm         |
|---------------|
| AcadLineTypes |
**** Object Inheritance
#+name: o-i-AcadLineTypes
| Object        |
| AcadObject    |
| AcadLineTypes |

**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Document.Linetypes
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadLineTypes
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Add                    | Application            | Modified |
| GetExtensionDictionary | Count                  |          |
| GetXData               | Document               |          |
| Item                   | Handle                 |          |
| Load                   | HasExtensionDictionary |          |
| SetXData               | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

To add a new member to the collection, use the Add method. To select a specific linetype, use the Item method.

Although the Linetypes collection inherits a Delete method, you cannot actually delete the collection. Attempting to delete the Linetypes collection will result in an error. The Delete method has been removed from the documentation for this collection.

There is no limit to the number of linetypes that you can create in your drawing. However, there can be only one instance of the Linetypes collection that is predefined for each drawing. You can make multiple references to it by using the Linetypes property. Once done with an object, the reference is automatically released.
*** Code
#+name:AcadLineTypes
#+header: :var m-p=m-p-AcadLineTypes
#+header: :var o-i=o-i-AcadLineTypes
#+header: :var des=des-AcadLineTypes
#+header: :var code=code
#+header: :results output file
#+header: :file AcadLineTypes.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadLineTypes
[[file:AcadLineTypes.lisp]]

** Materials Collection (ActiveX)
#+name: des-AcadMaterials
| Description                                     |
|-------------------------------------------------|
| The collection of all materials in the drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadMaterials
| cl-nm         |
|---------------|
| AcadMaterials |
**** Object Inheritance
#+name: o-i-AcadMaterials
| Object        |
| AcadObject    |
| AcadMaterials |

**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Database.Materials
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadMaterials
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Add                    | Application            | Modified |
| GetExtensionDictionary | Count                  |          |
| GetXData               | Document               |          |
| Item                   | Handle                 |          |
| SetXData               | HasExtensionDictionary |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

Use the Materials object to access materials defined in a drawing. You can create new materials by using the Add method.

Although the Materials collection inherits a Delete method, you cannot actually delete the collection. Attempting to delete this collection will result in an error. The Delete method has been removed from the documentation for this collection.
*** Code
#+name:AcadMaterials
#+header: :var m-p=m-p-AcadMaterials
#+header: :var o-i=o-i-AcadMaterials
#+header: :var des=des-AcadMaterials
#+header: :var code=code
#+header: :results output file
#+header: :file AcadMaterials.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadMaterials
[[file:AcadMaterials.lisp]]

** MLeaderStyle Object (ActiveX)
#+name: des-AcadMLeaderStyle
| Description                                 |
|---------------------------------------------|
| Adds, modifies, and deletes MLeader styles. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadMLeaderStyle
| cl-nm            |
|------------------|
| AcadMLeaderStyle |
**** Object Inheritance
#+name: o-i-AcadMLeaderStyle
| Object           |
| AcadObject       |
| AcadMLeaderStyle |
**** Create Using

#+BEGIN_SRC VBA
    Dim Dictionary As AcadDictionary
    Set Dictionary = Document.Dictionaries.Item("ACAD_MLEADERSTYLE")
    Dictionary.AddObject("<Style Name>", "AcDbMLeaderStyle")
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Dim Dictionary As AcadDictionary
    Set Dictionary = Document.Dictionaries.Item("ACAD_MLEADERSTYLE")
    Dictionary.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadMLeaderStyle
| Methods        | Properties                   | Events   |
|----------------+------------------------------+----------|
| Delete         | AlignSpace                   | Modified |
| GetBoundingBox | Annotative                   |          |
| GetXData       | Application                  |          |
| SetXData       | ArrowSize                    |          |
|                | ArrowSymbol                  |          |
|                | BitFlags                     |          |
|                | Block                        |          |
|                | BlockColor                   |          |
|                | BlockConnectionType          |          |
|                | BlockRotation                |          |
|                | BlockScale                   |          |
|                | BreakSize                    |          |
|                | ContentType                  |          |
|                | Description                  |          |
|                | Document                     |          |
|                | DoglegLength                 |          |
|                | DrawLeaderOrderType          |          |
|                | DrawMLeaderOrderType         |          |
|                | EnableBlockRotation          |          |
|                | EnableBlockScale             |          |
|                | EnableDogleg                 |          |
|                | EnableFrameText              |          |
|                | EnableLanding                |          |
|                | FirstSegmentAngleConstraint  |          |
|                | Handle                       |          |
|                | HasExtensionDictionary       |          |
|                | LandingGap                   |          |
|                | LeaderLineColor              |          |
|                | LeaderLineType               |          |
|                | LeaderLineTypeId             |          |
|                | LeaderLineWeight             |          |
|                | MaxLeaderSegmentsPoints      |          |
|                | Name                         |          |
|                | ObjectID                     |          |
|                | ObjectName                   |          |
|                | OverwritePropChanged         |          |
|                | OwnerID                      |          |
|                | ScaleFactor                  |          |
|                | SecondSegmentAngleConstraint |          |
|                | TextAlignmentType            |          |
|                | TextAngleType                |          |
|                | TextAttachmentDirection      |          |
|                | TextBottomAttachmentType     |          |
|                | TextColor                    |          |
|                | TextHeight                   |          |
|                | TextLeftAttachmentType       |          |
|                | TextRightAttachmentType      |          |
|                | TextString                   |          |
|                | TextStyle                    |          |
|                | TextTopAttachmentType        |          |
*** Remarks

You can use the MLeaderStyle object to store MLeader formatting. The object controls the initial formatting of a newly created MLeader object.
*** Code
#+name:AcadMLeaderStyle
#+header: :var m-p=m-p-AcadMLeaderStyle
#+header: :var o-i=o-i-AcadMLeaderStyle
#+header: :var des=des-AcadMLeaderStyle
#+header: :var code=code
#+header: :results output file
#+header: :file AcadMLeaderStyle.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadMLeaderStyle
[[file:AcadMLeaderStyle.lisp]]

** PlotConfigurations Collection (ActiveX)
#+name: des-AcadPlotConfigurations
| Description                          |
|--------------------------------------|
| A collection of named plot settings. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadPlotConfigurations
| cl-nm                  |
|------------------------|
| AcadPlotConfigurations |
**** Object Inheritance
#+name: o-i-AcadPlotConfigurations
| Object                 |
| AcadObject             |
| AcadPlotConfigurations |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Document.PlotConfigurations
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadPlotConfigurations
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Add                    | Application            | Modified |
| GetExtensionDictionary | Count                  |          |
| GetXData               | Document               |          |
| Item                   | Handle                 |          |
| SetXData               | HasExtensionDictionary |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

A plot configuration is similar to a layout; as both contain identical plot information. The difference is that a layout is associated with a Block object containing the geometry to plot. A plot configuration is not associated with a particular Block object. A plot configuration is simply a named collection of plot settings available for use with any geometry.

Although the PlotConfigurations collection inherits a Delete method, you cannot actually delete the collection. Attempting to delete this collection will result in an error. The Delete method has been removed from the documentation for this collection.

To create a new plot configuration, use the Add method.
*** Code
#+name:AcadPlotConfigurations
#+header: :var m-p=m-p-AcadPlotConfigurations
#+header: :var o-i=o-i-AcadPlotConfigurations
#+header: :var des=des-AcadPlotConfigurations
#+header: :var code=code
#+header: :results output file
#+header: :file AcadPlotConfigurations.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadPlotConfigurations
[[file:AcadPlotConfigurations.lisp]]

** RegisteredApplications Collection (ActiveX)
#+name: des-AcadRegisteredApplications
| Description                                                   |
|---------------------------------------------------------------|
| The collection of all registered applications in the drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadRegisteredApplications
| cl-nm                      |
|----------------------------|
| AcadRegisteredApplications |
**** Object Inheritance
#+name: o-i-AcadRegisteredApplications
| Object                     |
| AcadObject                 |
| AcadRegisteredApplications |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Document.RegisteredApplications
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadRegisteredApplications
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Add                    | Application            | Modified |
| GetExtensionDictionary | Count                  |          |
| GetXData               | Document               |          |
| Item                   | Handle                 |          |
| SetXData               | HasExtensionDictionary |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

To add a new member to the collection, use the Add method. To select a specific registered application, use the Item method. To delete a specific registered application, use the Delete method found on the RegisteredApplication object.

Although this collection inherits a Delete method, you cannot actually delete the collection. Attempting to delete this collection will result in an error. The Delete method has been removed from the documentation for this collection.

There is no limit to the number of registered applications that you can create in your drawing. However, there can be only one instance of the RegisteredApplications collection. The RegisteredApplications collection is predefined for each drawing. You can make multiple references to it by using the RegisteredApplications property.
*** Code
#+name:AcadRegisteredApplications
#+header: :var m-p=m-p-AcadRegisteredApplications
#+header: :var o-i=o-i-AcadRegisteredApplications
#+header: :var des=des-AcadRegisteredApplications
#+header: :var code=code
#+header: :results output file
#+header: :file AcadRegisteredApplications.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadRegisteredApplications
[[file:AcadRegisteredApplications.lisp]]

** SelectionSets Collection (ActiveX)
#+name: des-AcadSelectionSets
| Description                                          |
|------------------------------------------------------|
| The collection of all selection sets in the drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadSelectionSets
| cl-nm             |
|-------------------|
| AcadSelectionSets |
**** Object Inheritance
#+name: o-i-AcadSelectionSets
| Object            |
| AcadSelectionSets |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Document.SelectionSets
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadSelectionSets
| Methods | Properties  | Events |
|---------+-------------+--------|
| Add     | Application |        |
| Item    | Count       |        |
*** Remarks

To add a new member to the collection, use the Add method. To select a specific selection set, use the Item method. To delete a specific selection set, use the Delete method found in the SelectionSet object. You can create up to 128 selection sets in your drawing.

There can be only one instance of the SelectionSets collection. The SelectionSets collection is predefined for each drawing. You can make multiple references to it by using the SelectionSets property. Once done with an object, the reference is automatically released.
*** Code
#+name:AcadSelectionSets
#+header: :var m-p=m-p-AcadSelectionSets
#+header: :var o-i=o-i-AcadSelectionSets
#+header: :var des=des-AcadSelectionSets
#+header: :var code=code
#+header: :results output file
#+header: :file AcadSelectionSets.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadSelectionSets
[[file:AcadSelectionSets.lisp]]

** SortentsTable Object (ActiveX)
#+name: des-AcadSortentsTable
| Description                                      |
|--------------------------------------------------|
| Contains and manipulates draw order information. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadSortentsTable
| cl-nm             |
|-------------------|
| AcadSortentsTable |
**** Object Inheritance
#+name: o-i-AcadSortentsTable
| Object            |
| AcadObject        |
| AcadSortentsTable |
**** Create Using

#+BEGIN_SRC VBA
    Dictionary.AddObject
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    object.GetExtensionDictionary
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadSortentsTable
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Block                  | Application            | Modified |
| Delete                 | Document               |          |
| GetExtensionDictionary | Handle                 |          |
| GetFullDrawOrder       | HasExtensionDictionary |          |
| GetRelativeDrawOrder   | ObjectID               |          |
| GetXData               | ObjectName             |          |
| MoveAbove              | OwnerID                |          |
| MoveBelow              |                        |          |
| MoveToBottom           |                        |          |
| MoveToTop              |                        |          |
| SetRelativeDrawOrder   |                        |          |
| SetXData               |                        |          |
| SwapObjects            |                        |          |
*** Remarks

The SortentsTable object contains draw order information.
*** Code
#+name:AcadSortentsTable
#+header: :var m-p=m-p-AcadSortentsTable
#+header: :var o-i=o-i-AcadSortentsTable
#+header: :var des=des-AcadSortentsTable
#+header: :var code=code
#+header: :results output file
#+header: :file AcadSortentsTable.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadSortentsTable
[[file:AcadSortentsTable.lisp]]

** TableStyle Object (ActiveX)
#+name: des-AcadTableStyle
| Description                               |
|-------------------------------------------|
| Adds, modifies, and deletes table styles. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadTableStyle
| cl-nm          |
|----------------|
| AcadTableStyle |
**** Object Inheritance
#+name: o-i-AcadTableStyle
| Object         |
| AcadObject     |
| AcadTableStyle |
**** Create Using

#+BEGIN_SRC VBA
    Dictionary.AddObject "<style name>", "AcDbTableStyle"
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Dictionary.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadTableStyle
| Methods                  | Properties             | Events   |
|--------------------------+------------------------+----------|
| CreateCellStyle          | Application            | Modified |
| CreateCellStyleFromStyle | BitFlags               |          |
| Delete                   | Description            |          |
| DeleteCellStyle          | Document               |          |
| EnableMergeAll           | FlowDirection          |          |
| GetAlignment             | Handle                 |          |
| GetAlignment2            | HasExtensionDictionary |          |
| GetBackgroundColor       | HeaderSuppressed       |          |
| GetBackgroundColor2      | HorzCellMargin         |          |
| GetBackgroundColorNone   | Name                   |          |
| GetCellClass             | NumCellStyles          |          |
| GetCellStyles            | ObjectID               |          |
| GetColor                 | ObjectName             |          |
| GetColor2                | OwnerID                |          |
| GetDataType              | TemplateId             |          |
| GetDataType2             | TitleSuppressed        |          |
| GetExtensionDictionary   | VertCellMargin         |          |
| GetFormat                |                        |          |
| GetFormat2               |                        |          |
| GetGridColor             |                        |          |
| GetGridColor2            |                        |          |
| GetGridLineWeight        |                        |          |
| GetGridLineWeight2       |                        |          |
| GetGridVisibility        |                        |          |
| GetGridVisibility2       |                        |          |
| GetIsCellStyleInUse      |                        |          |
| GetIsMergeAllEnabled     |                        |          |
| GetRotation              |                        |          |
| GetTextHeight            |                        |          |
| GetTextHeight2           |                        |          |
| GetTextStyle             |                        |          |
| GetTextStyleId           |                        |          |
| GetUniqueCellStyleName   |                        |          |
| GetXData                 |                        |          |
| RenameCellStyle          |                        |          |
| SetAlignment             |                        |          |
| SetAlignment2            |                        |          |
| SetBackgroundColor       |                        |          |
| SetBackgroundColor2      |                        |          |
| SetBackgroundColorNone   |                        |          |
| SetCellClass             |                        |          |
| SetColor                 |                        |          |
| SetColor2                |                        |          |
| SetDataType              |                        |          |
| SetDataType2             |                        |          |
| SetFormat                |                        |          |
| SetFormat2               |                        |          |
| SetGridColor             |                        |          |
| SetGridColor2            |                        |          |
| SetGridLineWeight        |                        |          |
| SetGridLineWeight2       |                        |          |
| SetGridVisibility        |                        |          |
| SetGridVisibility2       |                        |          |
| SetRotation              |                        |          |
| SetTemplateId            |                        |          |
| SetTextHeight            |                        |          |
| SetTextHeight2           |                        |          |
| SetTextStyle             |                        |          |
| SetTextStyleId           |                        |          |
| SetXData                 |                        |          |
*** Remarks

You can use the TableStyle object to store table formatting, such as grid visibility, lineweight, and color. The object controls the initial formatting of a newly created Table object.

The TableStyle object includes methods for specifying the colors, margins, and other attributes of table styles.
*** Code
#+name:AcadTableStyle
#+header: :var m-p=m-p-AcadTableStyle
#+header: :var o-i=o-i-AcadTableStyle
#+header: :var des=des-AcadTableStyle
#+header: :var code=code
#+header: :results output file
#+header: :file AcadTableStyle.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadTableStyle
[[file:AcadTableStyle.lisp]]

** TextStyles Collection (ActiveX)
#+name: des-AcadTextStyles
| Description                                       |
|---------------------------------------------------|
| The collection of all text styles in the drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadTextStyles
| cl-nm          |
|----------------|
| AcadTextStyles |
**** Object Inheritance
#+name: o-i-AcadTextStyles
| Object         |
| AcadObject     |
| AcadTextStyles |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Document.TextStyles
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadTextStyles
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Add                    | Application            | Modified |
| GetExtensionDictionary | Count                  |          |
| GetXData               | Document               |          |
| Item                   | Handle                 |          |
| SetXData               | HasExtensionDictionary |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

To add a new member to the collection, use the Add method. To select a specific text style, use the Item method. To delete a specific text style, use the Delete method found on the TextStyle object.

Although the TextStyles collection inherits a Delete method, you cannot actually delete the collection. Attempting to delete the TextStyles collection will result in an error. The Delete method has been removed from the documentation for this collection.

There is no limit to the number of text styles that you can create in your drawing. However, there can be only one instance of the TextStyles collection. The TextStyles Collection is predefined for each drawing. You can make multiple references to it by using the TextStyles property. Once done with an object, the reference is automatically released.
*** Code
#+name:AcadTextStyles
#+header: :var m-p=m-p-AcadTextStyles
#+header: :var o-i=o-i-AcadTextStyles
#+header: :var des=des-AcadTextStyles
#+header: :var code=code
#+header: :results output file
#+header: :file AcadTextStyles.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadTextStyles
[[file:AcadTextStyles.lisp]]

** UCSs Collection (ActiveX)
#+name: des-AcadUCSs
| Description                                                          |
|----------------------------------------------------------------------|
| The collection of all user coordinate systems (UCSs) in the drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadUCSs
| cl-nm    |
|----------|
| AcadUCSs |
**** Object Inheritance
#+name: o-i-AcadUCSs
| Object     |
| AcadObject |
| AcadUCSs   |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Document.UserCoordinateSystems
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadUCSs
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Add                    | Application            | Modified |
| GetExtensionDictionary | Count                  |          |
| GetXData               | Document               |          |
| Item                   | Handle                 |          |
| SetXData               | HasExtensionDictionary |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

To add a new member to the collection, use the Add method. To select a specific UCS, use the Item method. To delete a specific UCS, use the Delete method found on the UCS object.

Although the UCSs collection inherits a Delete method, you cannot actually delete the collection. Attempting to delete the UCSs collection will result in an error. The Delete method has been removed from the documentation for this collection.

There is no limit to the number of UCSs that you can create in your drawing. However, there can be only one instance of the UCSs collection. The UCSs collection is predefined for each drawing. You can make multiple references to the UCSs collection by using the UserCoordinateSystems property. Once done with an object, the reference is automatically released.
*** Code
#+name:AcadUCSs
#+header: :var m-p=m-p-AcadUCSs
#+header: :var o-i=o-i-AcadUCSs
#+header: :var des=des-AcadUCSs
#+header: :var code=code
#+header: :results output file
#+header: :file AcadUCSs.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadUCSs
[[file:AcadUCSs.lisp]]

** Views Collection (ActiveX)
#+name: des-AcadViews
| Description                                 |
|---------------------------------------------|
| The collection of all views in the drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadViews
| cl-nm     |
|-----------|
| AcadViews |
**** Object Inheritance
#+name: o-i-AcadViews
| Object     |
| AcadObject |
| AcadViews  |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Document.Views
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadViews
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Add                    | Application            | Modified |
| GetExtensionDictionary | Count                  |          |
| GetXData               | Document               |          |
| Item                   | Handle                 |          |
| SetXData               | HasExtensionDictionary |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

To add a new member to the collection, use the Add method. To select a specific view, use the Item method. To delete a specific view, use the Delete method found on the View object.

Although the Views collection inherits a Delete method, you cannot actually delete the collection. Attempting to delete the Views collection will result in an error. The Delete method has been removed from the documentation for this collection.

There is no limit to the number of views that you can create in your drawing. However, there can be only one instance of the Views collection. The Views collection is predefined for each drawing. You can make multiple references to it by using the Views property. Once done with an object, the reference is automatically released.
*** Code
#+name:AcadViews
#+header: :var m-p=m-p-AcadViews
#+header: :var o-i=o-i-AcadViews
#+header: :var des=des-AcadViews
#+header: :var code=code
#+header: :results output file
#+header: :file AcadViews.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadViews
[[file:AcadViews.lisp]]

** Viewports Collection (ActiveX)
#+name: des-AcadViewports
| Description                                     |
|-------------------------------------------------|
| The collection of all viewports in the drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadViewports
| cl-nm         |
|---------------|
| AcadViewports |
**** Object Inheritance
#+name: o-i-AcadViewports
| Object        |
| AcadObject    |
| AcadViewports |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Document.Viewports
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadViewports
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Add                    | Application            | Modified |
| DeleteConfiguration    | Count                  |          |
| GetExtensionDictionary | Document               |          |
| GetXData               | Handle                 |          |
| Item                   | HasExtensionDictionary |          |
| SetXData               | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

To add a new member to the collection, use the Add method. To select a specific viewport, use the Item method. To delete a specific viewport, use the DeleteConfiguration method or the Delete method found on the Viewport object.

The number of viewports you can have active at one time is controlled by the MAXACTVP system variable. There can be only one instance of the Viewports collection. The Viewports collection is predefined for each drawing. You can make multiple references to it by using the Viewports property. Once done with an object, the reference is automatically released.
*** Code
#+name:AcadViewports
#+header: :var m-p=m-p-AcadViewports
#+header: :var o-i=o-i-AcadViewports
#+header: :var des=des-AcadViewports
#+header: :var code=code
#+header: :results output file
#+header: :file AcadViewports.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadViewports
[[file:AcadViewports.lisp]]

** DatabasePreferences Object (ActiveX)
#+name: des-AcadDatabasePreferences
| Description                                                            |
|------------------------------------------------------------------------|
| An object that specifies the settings for the current AutoCAD drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDatabasePreferences
| cl-nm                   |
|-------------------------|
| AcadDatabasePreferences |
**** Object Inheritance
#+name: o-i-AcadDatabasePreferences
| Object                  |
| AcadDatabasePreferences |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Document.Preferences
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDatabasePreferences
| Methods | Properties             | Events |
|---------+------------------------+--------|
|         | AllowLongSymbolNames   |        |
|         | Application            |        |
|         | ContourlinesPerSurface |        |
|         | DisplaySilhouette      |        |
|         | Lineweight             |        |
|         | LineweightDisplay      |        |
|         | MaxActiveViewports     |        |
|         | ObjectSortByPlotting   |        |
|         | ObjectSortByPSOutput   |        |
|         | ObjectSortByRedraws    |        |
|         | ObjectSortByRegens     |        |
|         | ObjectSortBySelection  |        |
|         | ObjectSortBySnap       |        |
|         | OLELaunch              |        |
|         | RenderSmoothness       |        |
|         | SegmentPerPolyline     |        |
|         | SolidFill              |        |
|         | TextFrameDisplay       |        |
|         | XRefEdit               |        |
|         | XRefLayerVisibility    |        |
*** Remarks

Database preferences represent options from the Options dialog box that reside in a drawing. Options that reside in the registry can be accessed through the main Preferences object.

The DatabasePreferences object can be referenced from the Preferences property on the Document object.
*** Code
#+name:AcadDatabasePreferences
#+header: :var m-p=m-p-AcadDatabasePreferences
#+header: :var o-i=o-i-AcadDatabasePreferences
#+header: :var des=des-AcadDatabasePreferences
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDatabasePreferences.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDatabasePreferences
[[file:AcadDatabasePreferences.lisp]]

** Plot Object (ActiveX)
#+name: des-AcadPlot
| Description                                                  |
|--------------------------------------------------------------|
| The set of methods and properties used for plotting layouts. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadPlot
| cl-nm    |
|----------|
| AcadPlot |
**** Object Inheritance
#+name: o-i-AcadPlot
| Object   |
| AcadPlot |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Document.Plot
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadPlot
| Methods            | Properties        | Events |
|--------------------+-------------------+--------|
| DisplayPlotPreview | Application       |        |
| PlotToDevice       | BatchPlotProgress |        |
| PlotToFile         | NumberOfCopies    |        |
| SetLayoutsToPlot   | QuietErrorMode    |        |
| StartBatchMode     |                   |        |
*** Remarks

This object contains the methods and properties that initiate a plot of specified layouts. You can choose to:

    Display a plot preview
    Plot to a file
    Plot to a plot device

To plot in the foreground using ActiveX, you must set the BACKGROUNDPLOT system variable to 0. Otherwise, plotting occurs in the background.

To specify the layouts to plot, use the SetLayoutsToPlot method. This method must be called before each PlotToDevice or PlotToFile method. If SetLayoutsToPlot is not called, or is called with a NULL input, the active layout will be plotted.

The NumberOfCopies property specifies the number of copies to plot. If this property is not reset before each PlotToDevice call, the last value specified in the NumberOfCopies property will be used.

You cannot create a configured plotter (PC3) file using ActiveX. To create a PC3 file, use the Add-a-Plotter wizard in AutoCAD. If you want to use a PC3 file for plotting, the file should be located in the Plotters folder. For more information, see the AutoCAD user documentation.
*** Code
#+name:AcadPlot
#+header: :var m-p=m-p-AcadPlot
#+header: :var o-i=o-i-AcadPlot
#+header: :var des=des-AcadPlot
#+header: :var code=code
#+header: :results output file
#+header: :file AcadPlot.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadPlot
[[file:AcadPlot.lisp]]

** SectionManager Object (ActiveX)
#+name: des-AcadSectionManager
| Description                                                               |
|---------------------------------------------------------------------------|
| This object manages the collection of section planes in the DWG database. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadSectionManager
| cl-nm              |
|--------------------|
| AcadSectionManager |
**** Object Inheritance
#+name: o-i-AcadSectionManager
| Object             |
| AcadObject         |
| AcadSectionManager |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Database.SectionManager
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadSectionManager
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| GetExtensionDictionary | Application            | Modified |
| GetLiveSection         | Count                  |          |
| GetUniqueSectionName   | Document               |          |
| GetXData               | Handle                 |          |
| Item                   | HasExtensionDictionary |          |
| SetXData               | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

SectionManager objects cannot be created through ActiveX. You can obtain the SectionManager object for a database from the SectionManager property. However, the SectionManager object is available in a drawing only after a section plane has been created.
*** Code
#+name:AcadSectionManager
#+header: :var m-p=m-p-AcadSectionManager
#+header: :var o-i=o-i-AcadSectionManager
#+header: :var des=des-AcadSectionManager
#+header: :var code=code
#+header: :results output file
#+header: :file AcadSectionManager.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadSectionManager
[[file:AcadSectionManager.lisp]]

** SummaryInfo Object (ActiveX)
#+name: des-AcadSummaryInfo
| Description                                                                              |
|------------------------------------------------------------------------------------------|
| Accesses drawing properties such as the Title, Subject, Author, and Keywords properties. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadSummaryInfo
| cl-nm           |
|-----------------|
| AcadSummaryInfo |
**** Object Inheritance
#+name: o-i-AcadSummaryInfo
| Object          |
| AcadSummaryInfo |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Document.SummaryInfo
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadSummaryInfo
| Methods             | Properties     | Events |
|---------------------+----------------+--------|
| AddCustomInfo       | Author         |        |
| GetCustomByIndex    | Comments       |        |
| GetCustomByKey      | HyperlinkBase  |        |
| NumCustomInfo       | Keywords       |        |
| RemoveCustomByIndex | LastSavedBy    |        |
| RemoveCustomByKey   | RevisionNumber |        |
| SetCustomByIndex    | Subject        |        |
| SetCustomByKey      | Title          |        |
*** Remarks

You can use the SummaryInfo object to access the properties of a drawing. You can also use the SummaryInfo object to specify custom properties.

The object includes properties for specifying the title, subject, author, and keywords of a drawing.
*** Code
#+name:AcadSummaryInfo
#+header: :var m-p=m-p-AcadSummaryInfo
#+header: :var o-i=o-i-AcadSummaryInfo
#+header: :var des=des-AcadSummaryInfo
#+header: :var code=code
#+header: :results output file
#+header: :file AcadSummaryInfo.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadSummaryInfo
[[file:AcadSummaryInfo.lisp]]

** Utility Object (ActiveX)
#+name: des-AcadUtility
| Description                                        |
|----------------------------------------------------|
| A series of methods provided for utility purposes. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadUtility
| cl-nm       |
|-------------|
| AcadUtility |
**** Object Inheritance
#+name: o-i-AcadUtility
| Object      |
| AcadUtility |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Document.Utility
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadUtility
| Methods                    | Properties | Events |
|----------------------------+------------+--------|
| AngleFromXAxis             |            |        |
| AngleToReal                |            |        |
| AngleToString              |            |        |
| CreateTypedArray           |            |        |
| DistanceToReal             |            |        |
| GetAngle                   |            |        |
| GetCorner                  |            |        |
| GetDistance                |            |        |
| GetEntity                  |            |        |
| GetInput                   |            |        |
| GetInteger                 |            |        |
| GetKeyword                 |            |        |
| GetObjectIdString          |            |        |
| GetOrientation             |            |        |
| GetPoint                   |            |        |
| GetReal                    |            |        |
| GetRemoteFile              |            |        |
| GetString                  |            |        |
| GetSubEntity               |            |        |
| InitializeUserInput        |            |        |
| IsRemoteFile               |            |        |
| IsURL                      |            |        |
| LaunchBrowserDialog        |            |        |
| PolarPoint                 |            |        |
| Prompt                     |            |        |
| PutRemoteFile              |            |        |
| RealToString               |            |        |
| SendModelessOperationEnded |            |        |
| SendModelessOperationStart |            |        |
| TranslateCoordinates       |            |        |

*** Remarks

Utility functions that allow you to request input from the user or perform geometric calculations.
*** Code
#+name:AcadUtility
#+header: :var m-p=m-p-AcadUtility
#+header: :var o-i=o-i-AcadUtility
#+header: :var des=des-AcadUtility
#+header: :var code=code
#+header: :results output file
#+header: :file AcadUtility.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadUtility
[[file:AcadUtility.lisp]]

** AcCmColor Object (ActiveX)
#+name: des-AcadAcCmColor
| Description                |
|----------------------------|
| AutoCAD true color object. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadAcCmColor
| cl-nm         |
|---------------|
| AcadAcCmColor |
**** Object Inheritance
#+name: o-i-AcadAcCmColor
| Object        |
| AcadAcCmColor |
**** Create Using

#+BEGIN_SRC VBA
    GetInterfaceObject("AutoCAD.AcCmColor.24")
    Dim col As New AcadAcCmColor
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadAcCmColor
| Methods           | Properties  | Events |
|-------------------+-------------+--------|
| Delete            | Blue        | None   |
| SetColorBookColor | BookName    |        |
| SetNames          | ColorIndex  |        |
| SetRGB            | ColorMethod |        |
|                   | ColorName   |        |
|                   | EntityColor |        |
|                   | Green       |        |
|                   | Red         |        |
*** Remarks

The AcCmColor object represents colors. You can use the AcCmColor object to set colors and perform other color-related operations on objects.

The object includes properties for colors, color names, color book names, and the color index.
*** Code
#+name:AcadAcCmColor
#+header: :var m-p=m-p-AcadAcCmColor
#+header: :var o-i=o-i-AcadAcCmColor
#+header: :var des=des-AcadAcCmColor
#+header: :var code=code
#+header: :results output file
#+header: :file AcadAcCmColor.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadAcCmColor
[[file:AcadAcCmColor.lisp]]

** Block Object (ActiveX)
#+name: des-AcadBlock
| Description                                                |
|------------------------------------------------------------|
| A block definition containing a name and a set of objects. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadBlock
| cl-nm     |
|-----------|
| AcadBlock |
**** Object Inheritance
#+name: o-i-AcadBlock
| Object     |
| AcadObject |
| AcadBlock  |
**** Create Using

#+BEGIN_SRC VBA
    Blocks.Add
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Blocks.Item
    Layout.Block
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadBlock
| Methods                   | Properties             | Events   |
|---------------------------+------------------------+----------|
| Add3DFace                 | Application            | Modified |
| Add3DMesh                 | BlockScaling           |          |
| Add3DPoly                 | Comments               |          |
| AddArc                    | Count                  |          |
| AddAttribute              | Document               |          |
| AddBox                    | Explodable             |          |
| AddCircle                 | Handle                 |          |
| AddCone                   | HasExtensionDictionary |          |
| AddCustomObject           | IsDynamicBlock         |          |
| AddCylinder               | IsLayout               |          |
| AddDim3PointAngular       | IsXRef                 |          |
| AddDimAligned             | Layout                 |          |
| AddDimAngular             | Material               |          |
| AddDimArc                 | Name                   |          |
| AddDimDiametric           | ObjectID               |          |
| AddDimOrdinate            | ObjectName             |          |
| AddDimRadial              | Origin                 |          |
| AddDimRadialLarge         | OwnerID                |          |
| AddDimRotated             | Path                   |          |
| AddEllipse                | Units                  |          |
| AddEllipticalCone         | XRefDatabase           |          |
| AddEllipticalCylinder     |                        |          |
| AddExtrudedSolid          |                        |          |
| AddExtrudedSolidALongPath |                        |          |
| AddHatch                  |                        |          |
| AddLeader                 |                        |          |
| AddLightWeightPolyline    |                        |          |
| AddLine                   |                        |          |
| AddMInsertBlock           |                        |          |
| AddMLeader                |                        |          |
| AddMLine                  |                        |          |
| AddMText                  |                        |          |
| AddPoint                  |                        |          |
| AddPolyfaceMesh           |                        |          |
| AddPolyline               |                        |          |
| AddRaster                 |                        |          |
| AddRay                    |                        |          |
| AddRegion                 |                        |          |
| AddRevolvedSolid          |                        |          |
| AddSection                |                        |          |
| AddShape                  |                        |          |
| AddSolid                  |                        |          |
| AddSphere                 |                        |          |
| AddSpline                 |                        |          |
| AddTable                  |                        |          |
| AddText                   |                        |          |
| AddTolerance              |                        |          |
| AddTorus                  |                        |          |
| AddTrace                  |                        |          |
| AddWedge                  |                        |          |
| AddXLine                  |                        |          |
| AttachExternalReference   |                        |          |
| Bind                      |                        |          |
| Delete                    |                        |          |
| Detach                    |                        |          |
| GetExtensionDictionary    |                        |          |
| GetXData                  |                        |          |
| InsertBlock               |                        |          |
| Item                      |                        |          |
| Reload                    |                        |          |
| SetXData                  |                        |          |
| Unload                    |                        |          |
*** Remarks

There are four types of blocks: the simple block, the XRef block, the layout block, and the dynamic block.

A simple block is a collection of objects that you can associate together to form a single object, or block definition. You can insert, scale, and rotate a simple block in a drawing. You can explode a simple block into its component objects, modify them, and redefine the block definition. Simple blocks can be defined from geometry in the current drawing, or by using another AutoCAD drawing. When you use another drawing to create a block, the new simple block is stored in the current drawing database; it is not updated if the original drawing changes. Inserting an instance of a simple block into the current drawing creates a BlockReference object.

An XRef block is an external link from another drawing to the current drawing. Because the XRef block represents a link to geometry, not the geometry itself, it is updated whenever the original drawing changes. Inserting an instance of an XRef block into the current drawing creates an ExternalReference object.

The layout blocks represent the geometry in the model space and paper space layouts. These blocks have a Layout object associated with them that contains the plot settings and other layout definition information. The block name of the active paper space layout is always *PAPER_SPACE. The other paper space layouts will have blocks named *PAPER_SPACEn, where n is an integer. Block names start with *PAPER_SPACE0, and the Integer increments by 1 each time a new layout is inserted.

By default, the layout blocks in a new drawing have the following names:

    *MODEL_SPACE - The model space layout. There is only one model space layout per drawing.

    This block corresponds to the ModelSpace collection.
    *PAPER_SPACE - The first paper space layout created. If the model space layout is currently active, this block contains the last active paper space layout.

    This block corresponds to the PaperSpace collection.
    *PAPER_SPACE0 - The second paper space layout created. If this layout is activated, its block is renamed *PAPER_SPACE and becomes accessible from the PaperSpace collection; the first layout's block is renamed *PAPER_SPACE0.

When you activate a new layout, it swaps block names with the layout that was formerly active. In this way, the block of the active layout is always named *PAPER_SPACE. For example, suppose Layout1 is active and Layout2 is associated with a block named *PAPER_SPACE0. If you then activate Layout2, it's block is renamed to *PAPER_SPACE, and Layout1's block is renamed to *PAPER_SPACE0.

Dynamic blocks enhance simple blocks by increasing their intelligence potential and adaptability. The internal geometry of a dynamic block instance can be adjusted independently of both its base definition and other instances. This flexibility is the central concept of dynamic blocks. Inserting an instance of a dynamic block into the current drawing creates a BlockReference object. From the block reference, you can get the DynamicBlockReferenceProperty object.

To identify a block's type, use the IsLayout , IsXRef , and IsDynamicBlock properties. If these properties are False, then the block is a simple block. If the IsXRef property is True, then the block is an external reference. If the IsLayout property is True, then the block contains all the geometry associated with a layout. If the IsDynamicBlock property is True, then the block is a dynamic block.

There is no limit to the number of objects a block can contain.

To insert a simple, XRef, or dynamic block into a drawing, use the InsertBlock method. To create a new layout block, use the Add method to add a new layout to the Layouts collection. When the new layout is created, an associated block for the layout will also be created.
*** Code
#+name:AcadBlock
#+header: :var m-p=m-p-AcadBlock
#+header: :var o-i=o-i-AcadBlock
#+header: :var des=des-AcadBlock
#+header: :var code=code
#+header: :results output file
#+header: :file AcadBlock.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadBlock
[[file:AcadBlock.lisp]]

** Database Object (ActiveX)
#+name: des-AcadDatabase
| Description                    |
|--------------------------------|
| The contents of an XRef block. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDatabase
| cl-nm        |
|--------------|
| AcadDatabase |
**** Object Inheritance
#+name: o-i-AcadDatabase
| Object       |
| AcadDatabase |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Block.XRefDatabase
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDatabase
| Methods          | Properties             | Events |
|------------------+------------------------+--------|
| CopyObjects      | Blocks                 |        |
| HandleToObject   | Dictionaries           |        |
| ObjectIdToObject | DimStyles              |        |
|                  | ElevationModelSpace    |        |
|                  | ElevationPaperSpace    |        |
|                  | Groups                 |        |
|                  | Layers                 |        |
|                  | Layouts                |        |
|                  | Limits                 |        |
|                  | Linetypes              |        |
|                  | Material               |        |
|                  | ModelSpace             |        |
|                  | PaperSpace             |        |
|                  | PlotConfigurations     |        |
|                  | Preferences            |        |
|                  | RegisteredApplications |        |
|                  | SectionManager         |        |
|                  | SummaryInfo            |        |
|                  | TextStyles             |        |
|                  | UserCoordinateSystems  |        |
|                  | Viewports              |        |
|                  | Views                  |        |
*** Remarks

This object provides access to the contents of an external reference block. It is only available on blocks whose IsXRef property is equal to True.
Release Information

Releases: AutoCAD 2000 and later

    The FileDependencies property was removed in AutoCAD 2018 and AutoCAD 2018-based products.

*** Code
#+name:AcadDatabase
#+header: :var m-p=m-p-AcadDatabase
#+header: :var o-i=o-i-AcadDatabase
#+header: :var des=des-AcadDatabase
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDatabase.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src
** ModelSpace Collection (ActiveX)
#+name: des-AcadModelSpace
| Description                                                 |
|-------------------------------------------------------------|
| A special Block object containing all model space entities. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadModelSpace
| cl-nm          |
|----------------|
| AcadModelSpace |
**** Object Inheritance
#+name: o-i-AcadModelSpace
| Object         |
| AcadObject     |
| AcadBlock      |
| AcadModelSpace |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Document.ModelSpace
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadModelSpace
| Methods                   | Properties             | Events   |
|---------------------------+------------------------+----------|
| Add3DFace                 | Application            | Modified |
| Add3DMesh                 | Comments               |          |
| Add3DPoly                 | Count                  |          |
| AddArc                    | Document               |          |
| AddAttribute              | Handle                 |          |
| AddBox                    | HasExtensionDictionary |          |
| AddCircle                 | Layout                 |          |
| AddCone                   | Name                   |          |
| AddCustomObject           | ObjectID               |          |
| AddCylinder               | ObjectName             |          |
| AddDim3PointAngular       | Origin                 |          |
| AddDimAligned             | OwnerID                |          |
| AddDimAngular             | Units                  |          |
| AddDimArc                 |                        |          |
| AddDimDiametric           |                        |          |
| AddDimOrdinate            |                        |          |
| AddDimRadial              |                        |          |
| AddDimRadialLarge         |                        |          |
| AddDimRotated             |                        |          |
| AddEllipse                |                        |          |
| AddEllipticalCone         |                        |          |
| AddEllipticalCylinder     |                        |          |
| AddExtrudedSolid          |                        |          |
| AddExtrudedSolidALongPath |                        |          |
| AddHatch                  |                        |          |
| AddLeader                 |                        |          |
| AddLightWeightPolyline    |                        |          |
| AddLine                   |                        |          |
| AddMInsertBlock           |                        |          |
| AddMLeader                |                        |          |
| AddMLine                  |                        |          |
| AddMText                  |                        |          |
| AddPoint                  |                        |          |
| AddPolyfaceMesh           |                        |          |
| AddPolyline               |                        |          |
| AddRaster                 |                        |          |
| AddRay                    |                        |          |
| AddRegion                 |                        |          |
| AddRevolvedSolid          |                        |          |
| AddSection                |                        |          |
| AddShape                  |                        |          |
| AddSolid                  |                        |          |
| AddSphere                 |                        |          |
| AddSpline                 |                        |          |
| AddTable                  |                        |          |
| AddText                   |                        |          |
| AddTolerance              |                        |          |
| AddTorus                  |                        |          |
| AddTrace                  |                        |          |
| AddWedge                  |                        |          |
| AddXLine                  |                        |          |
| AttachExternalReference   |                        |          |
| GetExtensionDictionary    |                        |          |
| GetXdata                  |                        |          |
| InsertBlock               |                        |          |
| Item                      |                        |          |
| SetXdata                  |                        |          |
*** Remarks

This collection represents all the objects in model space. To add new objects to model space, use the Add* methods listed below.

Because this collection is actually a block, it possesses several block characteristics. For example, this collection has a Layout object associated with it. In addition, all the objects in this collection can also be found in the Blocks collection under a block named *MODEL_SPACE. Both the block named *MODEL_SPACE and the ModelSpace collection actually point to the same data. The ModelSpace collection was created to provide a faster and easier means of accessing the data in model space.

You cannot create or delete a ModelSpace collection. There is always one ModelSpace collection provided in the drawing. You cannot delete, detach, bind, unload, or reload ModelSpace like an external reference can be so those functions are not listed. Nor cannot you manipulate ModelSpace like you can with a block definition.
*** Code
#+name:AcadModelSpace
#+header: :var m-p=m-p-AcadModelSpace
#+header: :var o-i=o-i-AcadModelSpace
#+header: :var des=des-AcadModelSpace
#+header: :var code=code
#+header: :results output file
#+header: :file AcadModelSpace.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadModelSpace
[[file:AcadModelSpace.lisp]]

** PaperSpace Collection (ActiveX)
#+name: des-AcadPaperSpace
| Description                                                                          |
|--------------------------------------------------------------------------------------|
| A special Block object containing all the entities in the active paper space layout. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadPaperSpace
| cl-nm          |
|----------------|
| AcadPaperSpace |
**** Object Inheritance
#+name: o-i-AcadPaperSpace
| Object         |
| AcadObject     |
| AcadBlock      |
| AcadPaperSpace |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Document.PaperSpace
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadPaperSpace
| Methods                   | Properties             | Events   |
|---------------------------+------------------------+----------|
| Add3DFace                 | Application            | Modified |
| Add3DMesh                 | Count                  |          |
| Add3DPoly                 | Document               |          |
| AddArc                    | Handle                 |          |
| AddAttribute              | HasExtensionDictionary |          |
| AddBox                    | Layout                 |          |
| AddCircle                 | Name                   |          |
| AddCone                   | ObjectID               |          |
| AddCustomObject           | ObjectName             |          |
| AddCylinder               | OwnerID                |          |
| AddDim3PointAngular       |                        |          |
| AddDimAligned             |                        |          |
| AddDimAngular             |                        |          |
| AddDimArc                 |                        |          |
| AddDimDiametric           |                        |          |
| AddDimOrdinate            |                        |          |
| AddDimRadial              |                        |          |
| AddDimRadialLarge         |                        |          |
| AddDimRotated             |                        |          |
| AddEllipse                |                        |          |
| AddEllipticalCone         |                        |          |
| AddEllipticalCylinder     |                        |          |
| AddExtrudedSolid          |                        |          |
| AddExtrudedSolidALongPath |                        |          |
| AddHatch                  |                        |          |
| AddLeader                 |                        |          |
| AddLightWeightPolyline    |                        |          |
| AddLine                   |                        |          |
| AddMInsertBlock           |                        |          |
| AddMLeader                |                        |          |
| AddMLine                  |                        |          |
| AddMText                  |                        |          |
| AddPoint                  |                        |          |
| AddPolyfaceMesh           |                        |          |
| AddPolyline               |                        |          |
| AddPViewport              |                        |          |
| AddRaster                 |                        |          |
| AddRay                    |                        |          |
| AddRegion                 |                        |          |
| AddRevolvedSolid          |                        |          |
| AddSection                |                        |          |
| AddShape                  |                        |          |
| AddSolid                  |                        |          |
| AddSphere                 |                        |          |
| AddSpline                 |                        |          |
| AddTable                  |                        |          |
| AddText                   |                        |          |
| AddTolerance              |                        |          |
| AddTorus                  |                        |          |
| AddTrace                  |                        |          |
| AddWedge                  |                        |          |
| AddXLine                  |                        |          |
| AttachExternalReference   |                        |          |
| GetExtensionDictionary    |                        |          |
| GetXdata                  |                        |          |
| InsertBlock               |                        |          |
| Item                      |                        |          |
| SetXdata                  |                        |          |
*** Remarks

This collection represents all the objects in the active paper space layout. If a different paper space layout is made active, the data in the PaperSpace collection will be changed to reflect the data in the new active paper space layout.

Because this collection is actually a block, it possesses several block characteristics. For example, this collection has a Layout object associated with it that contains all of the plot settings and visible attributes of the paper space layout. Additionally, all the objects in the PaperSpace collection can be found in the Blocks collection under a block named *PAPER_SPACE. Both the block named *PAPER_SPACE and the PaperSpace collection actually point to the same data. The PaperSpace collection was created to provide a faster and easier means of accessing the data in active paper space layout.

Paper space layouts are used for creating a finished layout for printing or plotting the drawing, as opposed to doing drafting or design work, which is accomplished in model space. Although both 2D and 3D objects can exist in paper space, commands that render a 3D viewpoint are disabled.

You cannot create or delete the PaperSpace collection. You cannot delete, detach, bind, unload, or reload PaperSpace like an external reference can be so those functions are not listed. Nor cannot you manipulate ModelSpace like you can with a block definition.
*** Code
#+name:AcadPaperSpace
#+header: :var m-p=m-p-AcadPaperSpace
#+header: :var o-i=o-i-AcadPaperSpace
#+header: :var des=des-AcadPaperSpace
#+header: :var code=code
#+header: :results output file
#+header: :file AcadPaperSpace.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadPaperSpace
[[file:AcadPaperSpace.lisp]]

** PViewport object (ActiveX)
#+name: des-AcadPViewport
| Description                                                    |
|----------------------------------------------------------------|
| Rectangular objects created in paper space that display views. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadPViewport
| cl-nm         |
|---------------|
| AcadPViewport |
**** Object Inheritance
#+name: o-i-AcadPViewport
| Object        |
| AcadObject    |
| AcadEntity    |
| AcadPViewport |
**** Create Using

#+BEGIN_SRC VBA
    PaperSpace.AddPViewport
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    PaperSpace.Item
    Document.ActivePViewport
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadPViewport
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | ArcSmoothness          |          |
| Copy                   | Center                 |          |
| Delete                 | Clipped                |          |
| Display                | CustomScale            |          |
| GetBoundingBox         | Direction              |          |
| GetExtensionDictionary | DisplayLocked          |          |
| GetGridSpacing         | Document               |          |
| GetSnapSpacing         | EntityTransparency     |          |
| GetXData               | GridOn                 |          |
| Highlight              | Handle                 |          |
| IntersectWith          | HasExtensionDictionary |          |
| Mirror                 | HasSheetView           |          |
| Mirror3D               | Height                 |          |
| Move                   | Hyperlinks             |          |
| Rotate                 | LabelBlockId           |          |
| Rotate3D               | Layer                  |          |
| ScaleEntity            | LayerPropertyOverrides |          |
| SetGridSpacing         | LensLength             |          |
| SetSnapSpacing         | Linetype               |          |
| SetXData               | LinetypeScale          |          |
| SyncModelView          | Lineweight             |          |
| TransformBy            | Material               |          |
| Update                 | ModelView              |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | ShadePlot              |          |
|                        | SheetView              |          |
|                        | SnapBasePoint          |          |
|                        | SnapOn                 |          |
|                        | SnapRotationAngle      |          |
|                        | StandardScale          |          |
|                        | StandardScale2         |          |
|                        | Target                 |          |
|                        | TrueColor              |          |
|                        | TwistAngle             |          |
|                        | UCSIconAtOrigin        |          |
|                        | UCSIconOn              |          |
|                        | UCSPerViewport         |          |
|                        | ViewportOn             |          |
|                        | Visible                |          |
|                        | VisualStyle            |          |
|                        | Width                  |          |
*** Remarks

The functionality of the PViewport object is slightly different from what is used in the AutoCAD user interface. Users familiar with AutoCAD paper space viewport functionality will find the following information helpful.

In ActiveX Automation, the ActiveSpace property is used to control the TILEMODE system variable. Setting ThisDrawing.ActiveSpace = acModelSpace is equivalent to setting TILEMODE = 1, and setting ThisDrawing.ActiveSpace = acPaperSpace is equivalent to setting TILEMODE = 0.

Similarly, the MSpace property is the equivalent of both the MSPACE and PSPACE commands in AutoCAD. Setting ThisDrawing.MSpace = True is the same as using the MSPACE command, and setting ThisDrawing.MSpace = False is the same as using the PSPACE command.

In addition, the ActiveX Automation user is required to use the Display method before setting the MSpace property to True. The Display method initializes certain graphic settings that must be set before switching to model space. In AutoCAD this is done "behind the scenes." However, in the ActiveX Automation interface, the programmer must take care of this initialization.
Note: Remember, you must turn on the display using the Display method for at least one PViewport object before you can set the MSpace property to True. Failure to turn on the display will result in an error being returned when you try to set the MSpace property.

The ActiveSpace and MSpace properties are found on the Document object.

To create a PViewport object, use the AddPViewport method.
*** Code
#+name:AcadPViewport
#+header: :var m-p=m-p-AcadPViewport
#+header: :var o-i=o-i-AcadPViewport
#+header: :var des=des-AcadPViewport
#+header: :var code=code
#+header: :results output file
#+header: :file AcadPViewport.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadPViewport
[[file:AcadPViewport.lisp]]

** Dictionary Object (ActiveX)
#+name: des-AcadDictionary
| Description                                            |
|--------------------------------------------------------|
| A container object for storing and retrieving objects. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDictionary
| cl-nm          |
|----------------|
| AcadDictionary |
**** Object Inheritance
#+name: o-i-AcadDictionary
| Object         |
| AcadObject     |
| AcadDictionary |
**** Create Using

#+BEGIN_SRC VBA
    Dictionaries.Add
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Dictionaries.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDictionary
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| AddObject              | Application            | Modified |
| AddXRecord             | Count                  |          |
| Delete                 | Document               |          |
| GetExtensionDictionary | Handle                 |          |
| GetName                | HasExtensionDictionary |          |
| GetObject              | Name                   |          |
| GetXData               | ObjectID               |          |
| Item                   | ObjectName             |          |
| Remove                 | OwnerID                |          |
| Rename                 |                        |          |
| Replace                |                        |          |
| SetXData               |                        |          |
*** Remarks

Dictionaries provide a mechanism for storing and retrieving objects with associated string keywords.

The objects in a dictionary may be referenced by their keywords. A dictionary can contain any type of object, including other dictionaries. A dictionary does not perform type checking of entries.

You can create new dictionaries, add entries to an existing dictionary, and get the keyword for a given object or the object for a given keyword. You can change the object that is associated with a given keyword, or rename the keyword for a given object.

This dictionary is similar to a collection in AutoCAD, and is used for custom object implementation. This object does not represent the spell checking dictionary. The spell checking dictionary is specified in the Preferences object.

To add a dictionary to the application, use the Add method.
*** Code
#+name:AcadDictionary
#+header: :var m-p=m-p-AcadDictionary
#+header: :var o-i=o-i-AcadDictionary
#+header: :var des=des-AcadDictionary
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDictionary.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDictionary
[[file:AcadDictionary.lisp]]

** XRecord Object (ActiveX)
#+name: des-AcadXRecord
| Description                                                  |
|--------------------------------------------------------------|
| XRecord objects are used to store and manage arbitrary data. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadXRecord
| cl-nm       |
|-------------|
| AcadXRecord |
**** Object Inheritance
#+name: o-i-AcadXRecord
| Object      |
| AcadObject  |
| AcadXRecord |
**** Create Using

#+BEGIN_SRC VBA
    Dictionary.AddXRecord
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Dictionary.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadXRecord
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Delete                 | Application            | Modified |
| GetExtensionDictionary | Document               |          |
| GetXData               | Handle                 |          |
| GetXRecordData         | HasExtensionDictionary |          |
| SetXData               | Name                   |          |
| SetXRecordData         | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
|                        | TranslateIDs           |          |
*** Remarks

This object is similar in concept to XData but is not limited by size or order.

Unlike XData, XRecords work with the standard AutoCAD group codes that are all below 1000 in value. All the standard AutoCAD group codes are supported. This means that, in addition to all the normally used data types, an XRecord is capable of storing object IDs, which allows XRecords to own other objects including other XRecords.

The following group codes are common to all XRecord objects:

    100: Subclass marker (AcDbXrecord)
    1-369 (except 5 and 105 and 210-239): These values can be used by an application in any way

XRecord objects are saved with the drawing and are directly accessible by other ObjectARX, Managed .NET, and AutoLISP programs. So, if data security is an issue for your application, you should be careful when storing information in XRecords.
Note: XRecord objects are designed to work in such a way as to not offend Releases 13c0 through 13c3. However, if read into a pre-Release 13c4 level of AutoCAD, XRecord objects disappear.

To create an XRecord, use the AddXRecord method.
*** Code
#+name:AcadXRecord
#+header: :var m-p=m-p-AcadXRecord
#+header: :var o-i=o-i-AcadXRecord
#+header: :var des=des-AcadXRecord
#+header: :var code=code
#+header: :results output file
#+header: :file AcadXRecord.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadXRecord
[[file:AcadXRecord.lisp]]

** DimStyle Object (ActiveX)
#+name: des-AcadDimStyle
| Description                                                                  |
|------------------------------------------------------------------------------|
| A group of dimension settings that determines the appearance of a dimension. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDimStyle
| cl-nm        |
|--------------|
| AcadDimStyle |
**** Object Inheritance
#+name: o-i-AcadDimStyle
| Object       |
| AcadObject   |
| AcadDimStyle |
**** Create Using

#+BEGIN_SRC VBA
    DimStyles.Add
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    DimStyles.Item
    Document.ActiveDimStyle
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDimStyle
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| CopyFrom               | Application            | Modified |
| Delete                 | Document               |          |
| GetExtensionDictionary | Handle                 |          |
| GetXData               | HasExtensionDictionary |          |
| SetXData               | Name                   |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

The active dimension style determines the appearance of new dimensions that are created in the drawing. To change the style of an existing dimension, use the StyleName property found on the dimension.

To control the settings of the current document overrides, use the dimensioning system variables. See "System Variables" in the AutoCAD Online help for a list of dimensioning system variables.

When you change a dimensioning system variable, you are actually setting a document override for the active dimension style; you are not changing the active dimension style itself. This means that all newly created dimensions will still be created with the active dimension style only and will not reflect the overrides from the system variables. The overrides from the system variables will not be recognized on new dimensions until the active dimension style is updated. To change the settings of any dimension style, use the CopyFrom method. This method copies a dimension style configuration, including overrides, from a document, dimension, or other dimension style.

Dimensions created via the AutoCAD user interface are created with the active dimension style plus all document overrides. Dimensions created via ActiveX are created with the active dimension style only. To have the dimensions created via ActiveX take on the document overrides, use the CopyFrom method to copy the dimension style from the document to the active dimension style. This process will copy all existing overrides into the active dimension style.
*** Code
#+name:AcadDimStyle
#+header: :var m-p=m-p-AcadDimStyle
#+header: :var o-i=o-i-AcadDimStyle
#+header: :var des=des-AcadDimStyle
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDimStyle.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDimStyle
[[file:AcadDimStyle.lisp]]

** Group Object (ActiveX)
#+name: des-AcadGroup
| Description                  |
|------------------------------|
| A named SelectionSet object. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadGroup
| cl-nm     |
|-----------|
| AcadGroup |
**** Object Inheritance
#+name: o-i-AcadGroup
| Object     |
| AcadObject |
| AcadGroup  |
**** Create Using

#+BEGIN_SRC VBA
    Groups.Add
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Groups.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadGroup
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| AppendItems            | Application            | Modified |
| Delete                 | Count                  |          |
| GetExtensionDictionary | Document               |          |
| GetXData               | Handle                 |          |
| Highlight              | HasExtensionDictionary |          |
| Item                   | Layer                  |          |
| RemoveItems            | Linetype               |          |
| SetXData               | LinetypeScale          |          |
| Update                 | Lineweight             |          |
|                        | Material               |          |
|                        | Name                   |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
*** Remarks

For more information about selection sets, see the SelectionSet object.

To create a group, use the Add method.
*** Code
#+name:AcadGroup
#+header: :var m-p=m-p-AcadGroup
#+header: :var o-i=o-i-AcadGroup
#+header: :var des=des-AcadGroup
#+header: :var code=code
#+header: :results output file
#+header: :file AcadGroup.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadGroup
[[file:AcadGroup.lisp]]

** Layer Object (ActiveX)
#+name: des-AcadLayer
| Description                                                                       |
|-----------------------------------------------------------------------------------|
| A logical grouping of data, similar to transparent acetate overlays on a drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadLayer
| cl-nm     |
|-----------|
| AcadLayer |
**** Object Inheritance
#+name: o-i-AcadLayer
| Object     |
| AcadObject |
| AcadLayer  |
**** Create Using

#+BEGIN_SRC VBA
    Layers.Add
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Layers.Item
    Document.ActiveLayer
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadLayer
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Delete                 | Application            | Modified |
| GetExtensionDictionary | Description            |          |
| GetXData               | Document               |          |
| SetXData               | Freeze                 |          |
|                        | Handle                 |          |
|                        | HasExtensionDictionary |          |
|                        | LayerOn                |          |
|                        | Linetype               |          |
|                        | Lineweight             |          |
|                        | Lock                   |          |
|                        | Material               |          |
|                        | Name                   |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | Plottable              |          |
|                        | TrueColor              |          |
|                        | Used                   |          |
|                        | ViewportDefault        |          |
*** Remarks

All new objects are added to the active layer. To make a layer active, use the ActiveLayer property.

To create a layer, use the Add method.
*** Code
#+name:AcadLayer
#+header: :var m-p=m-p-AcadLayer
#+header: :var o-i=o-i-AcadLayer
#+header: :var des=des-AcadLayer
#+header: :var code=code
#+header: :results output file
#+header: :file AcadLayer.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadLayer
[[file:AcadLayer.lisp]]

** Layout Object (ActiveX)
#+name: des-AcadLayout
| Description                                                                    |
|--------------------------------------------------------------------------------|
| The plot settings and visual properties of a model space or paper space block. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadLayout
| cl-nm      |
|------------|
| AcadLayout |
**** Object Inheritance
#+name: o-i-AcadLayout
| Object                |
| AcadObject            |
| AcadPlotConfiguration |
| AcadLayout            |
**** Create Using

#+BEGIN_SRC VBA
    Layouts.Add
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Layouts.Item
    Document.ActiveLayout
    ModelSpace.Layout
    PaperSpace.Layout
    Block.Layout
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadLayout
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| CopyFrom               | Application            | Modified |
| Delete                 | Block                  |          |
| GetCanonicalMediaNames | CanonicalMediaName     |          |
| GetCustomScale         | CenterPlot             |          |
| GetExtensionDictionary | ConfigName             |          |
| GetLocaleMediaName     | Document               |          |
| GetPaperMargins        | Handle                 |          |
| GetPaperSize           | HasExtensionDictionary |          |
| GetPlotDeviceNames     | ModelType              |          |
| GetPlotStyleTableNames | Name                   |          |
| GetWindowToPlot        | ObjectID               |          |
| GetXData               | ObjectName             |          |
| RefreshPlotDeviceInfo  | OwnerID                |          |
| SetCustomScale         | PaperUnits             |          |
| SetWindowToPlot        | PlotHidden             |          |
| SetXData               | PlotOrigin             |          |
|                        | PlotRotation           |          |
|                        | PlotType               |          |
|                        | PlotViewportBorders    |          |
|                        | PlotViewportsFirst     |          |
|                        | PlotWithLineweights    |          |
|                        | PlotWithPlotStyles     |          |
|                        | ScaleLineweights       |          |
|                        | ShowPlotStyles         |          |
|                        | StandardScale          |          |
|                        | StyleSheet             |          |
|                        | TabOrder               |          |
|                        | UseStandardScale       |          |
|                        | ViewToPlot             |          |
*** Remarks

The representation of a layout is slightly different in ActiveX from that of the AutoCAD user interface. In ActiveX, the content of a standard AutoCAD layout is broken out into two separate objects: Layout object and Block object. The Layout object contains the plot settings and the visual properties of the layout as it appears in the AutoCAD user interface. The Block object contains the geometry for the layout.

Each Layout object is associated with one Block object. To access the Block object associated with a given layout, use the Block property. Conversely, each Block object is associated with one Layout object. To access the Layout object associated with a given Block, use the Layout property for that block.

In ActiveX, in addition to the paper space layouts, model space is considered a layout.

To create a new layout, use the Add method.
*** Code
#+name:AcadLayout
#+header: :var m-p=m-p-AcadLayout
#+header: :var o-i=o-i-AcadLayout
#+header: :var des=des-AcadLayout
#+header: :var code=code
#+header: :results output file
#+header: :file AcadLayout.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadLayout
[[file:AcadLayout.lisp]]

** Linetype Object (ActiveX)
#+name: des-AcadLinetype
| Description                                                                      |
|----------------------------------------------------------------------------------|
| The line characteristics consisting of combinations of dashes, dots, and spaces. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadLinetype
| cl-nm        |
|--------------|
| AcadLinetype |
**** Object Inheritance
#+name: o-i-AcadLinetype
| Object       |
| AcadObject   |
| AcadLinetype |
**** Create Using

#+BEGIN_SRC VBA
    Linetypes.Add
    Linetypes.Load
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Linetypes.Item
    Document.ActiveLinetype
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadLinetype
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Delete                 | Application            | Modified |
| GetExtensionDictionary | Description            |          |
| GetXData               | Document               |          |
| SetXData               | Handle                 |          |
|                        | HasExtensionDictionary |          |
|                        | Name                   |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

You can only create default linetypes programmatically using the Add method. However, you can load an existing linetype to your drawing programmatically using the Load method.

There is no limit to the number of linetypes that can exist in your drawing. However, only one linetype can be active at a time. New objects are created with the linetype that is specified for the active layer. If no linetype has been specified for the active layer, new objects are created with the active linetype. To make a linetype active, use the ActiveLinetype property.

To add an existing linetype to your drawing, use either the Add or Load method.
*** Code
#+name:AcadLinetype
#+header: :var m-p=m-p-AcadLinetype
#+header: :var o-i=o-i-AcadLinetype
#+header: :var des=des-AcadLinetype
#+header: :var code=code
#+header: :results output file
#+header: :file AcadLinetype.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadLinetype
[[file:AcadLinetype.lisp]]

** Material Object (ActiveX)
#+name: des-AcadMaterial
| Description                          |
|--------------------------------------|
| The render material characteristics. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadMaterial
| cl-nm        |
|--------------|
| AcadMaterial |
**** Object Inheritance
#+name: o-i-AcadMaterial
| Object       |
| AcadObject   |
| AcadMaterial |
**** Create Using

#+BEGIN_SRC VBA
    Materials.Add
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Document.ActiveMaterial
    Materials.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadMaterial
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Delete                 | Application            | Modified |
| GetExtensionDictionary | Description            |          |
| GetXData               | Document               |          |
| SetXData               | Handle                 |          |
|                        | HasExtensionDictionary |          |
|                        | Name                   |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

To set the visual properties of a material, use the MATERIALS command in AutoCAD. Use the Material property to retrieve the name of the material applied to Group , Layer , and Block objects, and SubEntSolidFace entities.
*** Code
#+name:AcadMaterial
#+header: :var m-p=m-p-AcadMaterial
#+header: :var o-i=o-i-AcadMaterial
#+header: :var des=des-AcadMaterial
#+header: :var code=code
#+header: :results output file
#+header: :file AcadMaterial.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadMaterial
[[file:AcadMaterial.lisp]]

** PlotConfiguration Object (ActiveX)
#+name: des-AcadPlotConfiguration
| Description                          |
|--------------------------------------|
| A named collection of plot settings. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadPlotConfiguration
| cl-nm                 |
|-----------------------|
| AcadPlotConfiguration |
**** Object Inheritance
#+name: o-i-AcadPlotConfiguration
| Object                |
| AcadObject            |
| AcadPlotConfiguration |
**** Create Using

#+BEGIN_SRC VBA
    PlotConfigurations.Add
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    PlotConfigurations.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadPlotConfiguration
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| CopyFrom               | Application            | Modified |
| Delete                 | CanonicalMediaName     |          |
| GetCanonicalMediaNames | CenterPlot             |          |
| GetCustomScale         | ConfigName             |          |
| GetExtensionDictionary | Document               |          |
| GetLocaleMediaName     | Handle                 |          |
| GetPaperMargins        | HasExtensionDictionary |          |
| GetPaperSize           | ModelType              |          |
| GetPlotDeviceNames     | Name                   |          |
| GetPlotStyleTableNames | ObjectID               |          |
| GetWindowToPlot        | ObjectName             |          |
| GetXData               | OwnerID                |          |
| RefreshPlotDeviceInfo  | PaperUnits             |          |
| SetCustomScale         | PlotHidden             |          |
| SetWindowToPlot        | PlotOrigin             |          |
| SetXData               | PlotRotation           |          |
|                        | PlotType               |          |
|                        | PlotViewportBorders    |          |
|                        | PlotViewportsFirst     |          |
|                        | PlotWithLineweights    |          |
|                        | PlotWithPlotStyles     |          |
|                        | ScaleLineweights       |          |
|                        | ShowPlotStyles         |          |
|                        | StandardScale          |          |
|                        | StyleSheet             |          |
|                        | UseStandardScale       |          |
|                        | ViewToPlot             |          |
*** Remarks

A plot configuration is similar to a layout; as both contain identical plot information. The difference is that a layout is associated with a Block object containing the geometry to plot. A plot configuration is not associated with a particular Block object. A plot configuration is simply a named collection of plot settings available for use with any geometry.

To create a new plot configuration, use the Add method.
*** Code
#+name:AcadPlotConfiguration
#+header: :var m-p=m-p-AcadPlotConfiguration
#+header: :var o-i=o-i-AcadPlotConfiguration
#+header: :var des=des-AcadPlotConfiguration
#+header: :var code=code
#+header: :results output file
#+header: :file AcadPlotConfiguration.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadPlotConfiguration
[[file:AcadPlotConfiguration.lisp]]

** RegisteredApplication Object (ActiveX)
#+name: des-AcadRegisteredApplication
| Description                                                 |
|-------------------------------------------------------------|
| An external application that has been added to the drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadRegisteredApplication
| cl-nm                     |
|---------------------------|
| AcadRegisteredApplication |
**** Object Inheritance
#+name: o-i-AcadRegisteredApplication
| Object                    |
| AcadObject                |
| AcadRegisteredApplication |
**** Create Using

#+BEGIN_SRC VBA
    RegisteredApplications.Add
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    RegisteredApplications.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadRegisteredApplication
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Delete                 | Application            | Modified |
| GetExtensionDictionary | Document               |          |
| GetXData               | Handle                 |          |
| SetXData               | HasExtensionDictionary |          |
|                        | Name                   |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

To be recognized by AutoCAD, an application must register the name or names that it uses. The application name needs to be registered only once per drawing.

Application names are saved with the extended data of each entity that uses them. Every instance of extended data referenced in a drawing must have its application registered in the drawing.

To register an application, add it to the RegisteredApplications collection using the Add method.
*** Code
#+name:AcadRegisteredApplication
#+header: :var m-p=m-p-AcadRegisteredApplication
#+header: :var o-i=o-i-AcadRegisteredApplication
#+header: :var des=des-AcadRegisteredApplication
#+header: :var code=code
#+header: :results output file
#+header: :file AcadRegisteredApplication.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadRegisteredApplication
[[file:AcadRegisteredApplication.lisp]]

** SelectionSet Object (ActiveX)
#+name: des-AcadSelectionSet
| Description                                                                       |
|-----------------------------------------------------------------------------------|
| A group of one or more AutoCAD objects specified for processing as a single unit. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadSelectionSet
| cl-nm            |
|------------------|
| AcadSelectionSet |
**** Object Inheritance
#+name: o-i-AcadSelectionSet
| Object           |
| AcadSelectionSet |
**** Create Using

#+BEGIN_SRC VBA
    SelectionSets.Add
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    SelectionSets.Item
    Document.ActiveSelectionSet
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadSelectionSet
| Methods         | Properties  | Events |
|-----------------+-------------+--------|
| AddItems        | Application |        |
| Clear           | Count       |        |
| Delete          | Name        |        |
| Erase           |             |        |
| Highlight       |             |        |
| Item            |             |        |
| RemoveItems     |             |        |
| Select          |             |        |
| SelectAtPoint   |             |        |
| SelectByPolygon |             |        |
| SelectOnScreen  |             |        |
| Update          |             |        |
*** Remarks

To delete a selection set, or delete items from a selection set, use one of the following methods:

    Clear: Empties the selection set. The selection set will still exist, but will not contain any items. The items that previously resided in the selection still exist, but they no longer reside in the selection set.
    RemoveItems: Removes one or more items from a selection set. The removed items still exist, but they no longer reside in the selection set.
    Erase: Deletes all items in a selection set. The selection set still exists, but will not contain any items. The items that previously resided in the selection set no longer exist.
    Delete: Deletes a selection set object, but not the objects in the selection set. While the selection set itself will not exist after the call to the Delete method, the items previously in the selection set will still exist.

To create a selection set, use the Add method.
*** Code
#+name:AcadSelectionSet
#+header: :var m-p=m-p-AcadSelectionSet
#+header: :var o-i=o-i-AcadSelectionSet
#+header: :var des=des-AcadSelectionSet
#+header: :var code=code
#+header: :results output file
#+header: :file AcadSelectionSet.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadSelectionSet
[[file:AcadSelectionSet.lisp]]

** TextStyle Object (ActiveX)
#+name: des-AcadTextStyle
| Description                                                                              |
|------------------------------------------------------------------------------------------|
| A named, saved collection of settings that determines the appearance of text characters. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadTextStyle
| cl-nm         |
|---------------|
| AcadTextStyle |
**** Object Inheritance
#+name: o-i-AcadTextStyle
| Object        |
| AcadObject    |
| AcadTextStyle |
**** Create Using

#+BEGIN_SRC VBA
    TextStyles.Add
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    TextStyles.Item
    Document.ActiveTextStyle
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadTextStyle
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Delete                 | Application            | Modified |
| GetExtensionDictionary | BigFontFile            |          |
| GetFont                | Document               |          |
| GetXData               | FontFile               |          |
| SetFont                | Handle                 |          |
| SetXData               | HasExtensionDictionary |          |
|                        | Height                 |          |
|                        | LastHeight             |          |
|                        | Name                   |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | ObliqueAngle           |          |
|                        | OwnerID                |          |
|                        | TextGenerationFlag     |          |
|                        | Width                  |          |
*** Remarks

To control the settings on a text style, use the properties below, or the text style system variables. See "System Variables" in the AutoCAD user documentation for a list of text style system variables.

The active text style (set with the ActiveTextStyle property) determines the appearance of new text created in the drawing, and existing text that has no distinct text style specified.

If changes are made to the active TextStyle, the new TextStyle object must be reset as the active TextStyle, and the Regen method must be called for the changes to appear. To reset the active TextStyle, simply call the ActiveTextStyle property again with the updated TextStyle object.

To specify a distinct text style for an object so it will not change along with the active text style, use the StyleName property for the specific object.
*** Code
#+name:AcadTextStyle
#+header: :var m-p=m-p-AcadTextStyle
#+header: :var o-i=o-i-AcadTextStyle
#+header: :var des=des-AcadTextStyle
#+header: :var code=code
#+header: :results output file
#+header: :file AcadTextStyle.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadTextStyle
[[file:AcadTextStyle.lisp]]

** UCS Object (ActiveX)
#+name: des-AcadUCS
| Description                                                                                           |
|-------------------------------------------------------------------------------------------------------|
| A user-defined coordinate system that determines the orientation of the X, Y, and Z axes in 3D space. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadUCS
| cl-nm   |
|---------|
| AcadUCS |
**** Object Inheritance
#+name: o-i-AcadUCS
| Object     |
| AcadObject |
| AcadUCS    |
**** Create Using

#+BEGIN_SRC VBA
    UserCoordinateSystems.Add
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    UserCoordinateSystems.Item
    Document.ActiveUCS
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadUCS
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Delete                 | Application            | Modified |
| GetExtensionDictionary | Document               |          |
| GetUCSMatrix           | Handle                 |          |
| GetXData               | HasExtensionDictionary |          |
| SetXData               | Name                   |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | Origin                 |          |
|                        | OwnerID                |          |
|                        | XVector                |          |
|                        | YVector                |          |
*** Remarks

You define a UCS to change the location of the (0, 0, 0) origin point and the orientation of the XY plane and the Z axis. You can locate and orient a UCS anywhere in 3D space, and you can define as many UCSs as you require.

All coordinates in ActiveX Automation are entered in the world coordinate system (WCS). Use the GetUCSMatrix method to return the transformation matrix of a given UCS. Use this transformation matrix to find the equivalent WCS coordinates.

Use the UCSIconOn property to turn the UCS icon on or off for a given viewport.

To make a UCS active, use the ActiveUCS property on the Document object. If changes are made to the active UCS, the new UCS object must be reset as the active UCS for the changes to appear. To reset the active UCS, simply call the ActiveUCS property again with the updated UCS object.

To add a new UCS to the drawing, use the Add method off the UCSs Collection.
*** Code
#+name:AcadUCS
#+header: :var m-p=m-p-AcadUCS
#+header: :var o-i=o-i-AcadUCS
#+header: :var des=des-AcadUCS
#+header: :var code=code
#+header: :results output file
#+header: :file AcadUCS.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadUCS
[[file:AcadUCS.lisp]]

** View Object (ActiveX)
#+name: des-AcadView
| Description                                                                                           |
|-------------------------------------------------------------------------------------------------------|
| A graphical representation of a 2D drawing or 3D model from a specific location (viewpoint) in space. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadView
| cl-nm    |
|----------|
| AcadView |
**** Object Inheritance
#+name: o-i-AcadView
| Object     |
| AcadObject |
| AcadView   |
**** Create Using

#+BEGIN_SRC VBA
    Views.Add
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Views.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadView
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Delete                 | Application            | Modified |
| GetExtensionDictionary | CategoryName           |          |
| GetXData               | Center                 |          |
| SetXData               | Direction              |          |
|                        | Document               |          |
|                        | Handle                 |          |
|                        | HasExtensionDictionary |          |
|                        | HasVpAssociation       |          |
|                        | Height                 |          |
|                        | LayerState             |          |
|                        | LayoutID               |          |
|                        | Name                   |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
|                        | Target                 |          |
|                        | Width                  |          |
*** Remarks

The line of sight is drawn from the viewpoint (represented by the Center property) to the target point. The Height and Width properties crop the view. Note that these properties do not change the viewport size, only the size of the view visible within the viewport.


Note that the Delete method for a view is found on the View object, not the Views collection. This is due to programming requirements specific to the View object.

To add a view, use the Add method from the Views collection object.
*** Code
#+name:AcadView
#+header: :var m-p=m-p-AcadView
#+header: :var o-i=o-i-AcadView
#+header: :var des=des-AcadView
#+header: :var code=code
#+header: :results output file
#+header: :file AcadView.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadView
[[file:AcadView.lisp]]

** Viewport Object (ActiveX)
#+name: des-AcadViewport
| Description                                                           |
|-----------------------------------------------------------------------|
| A bounded area that displays some portion of a drawing's model space. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadViewport
| cl-nm        |
|--------------|
| AcadViewport |
**** Object Inheritance
#+name: o-i-AcadViewport
| Object       |
| AcadObject   |
| AcadViewport |
**** Create Using

#+BEGIN_SRC VBA
    Viewports.Add
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Viewports.Item
    Document.ActiveViewport
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadViewport
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Delete                 | Application            | Modified |
| GetExtensionDictionary | ArcSmoothness          |          |
| GetGridSpacing         | Center                 |          |
| GetSnapSpacing         | Direction              |          |
| GetXData               | Document               |          |
| SetGridSpacing         | GridOn                 |          |
| SetSnapSpacing         | Handle                 |          |
| SetView                | HasExtensionDictionary |          |
| SetXData               | Height                 |          |
| Split                  | LowerLeftCorner        |          |
|                        | Name                   |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OrthoOn                |          |
|                        | OwnerID                |          |
|                        | SnapBasePoint          |          |
|                        | SnapOn                 |          |
|                        | SnapRotationAngle      |          |
|                        | Target                 |          |
|                        | UCSIconAtOrigin        |          |
|                        | UCSIconOn              |          |
|                        | UpperRightCorner       |          |
|                        | Width                  |          |
*** Remarks

The ActiveSpace property (equivalent to the TILEMODE system variable) determines the type of viewport used.

No editing or view changes can be performed unless the viewport is active. To make a viewport active, use the ActiveViewport property on the Document object.

Once changes have been completed, the viewport must be reset as the active viewport for the changes to appear. To reset the active viewport, simply call the ActiveViewport property again with the updated Viewport object.
*** Code
#+name:AcadViewport
#+header: :var m-p=m-p-AcadViewport
#+header: :var o-i=o-i-AcadViewport
#+header: :var des=des-AcadViewport
#+header: :var code=code
#+header: :results output file
#+header: :file AcadViewport.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadViewport
[[file:AcadViewport.lisp]]

** 3DFace Object (ActiveX)
#+name: des-Acad3DFace
| Description                                   |
|-----------------------------------------------|
| A 3D triangle or quadrilateral plane section. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-Acad3DFace
| cl-nm      |
|------------|
| Acad3DFace |
**** Object Inheritance
#+name: o-i-Acad3DFace
| Object     |
| AcadObject |
| AcadEntity |
| Acad3DFace |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.Add3DFace
    PaperSpace.Add3DFace
    Block.Add3DFace 
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item 
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-Acad3DFace
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Coordinate             |          |
| Copy                   | Coordinates            |          |
| Delete                 | Document               |          |
| GetBoundingBox         | EntityTransparency     |          |
| GetExtensionDictionary | Handle                 |          |
| GetInvisibleEdge       | HasExtensionDictionary |          |
| GetXData               | Hyperlinks             |          |
| Highlight              | Layer                  |          |
| IntersectWith          | Linetype               |          |
| Mirror                 | LinetypeScale          |          |
| Mirror3D               | Lineweight             |          |
| Move                   | Material               |          |
| Rotate                 | ObjectID               |          |
| Rotate3D               | ObjectName             |          |
| ScaleEntity            | OwnerID                |          |
| SetInvisibleEdge       | PlotStyleName          |          |
| SetXData               | TrueColor              |          |
| TransformBy            | VisibilityEdge1        |          |
| Update                 | VisibilityEdge2        |          |
|                        | VisibilityEdge3        |          |
|                        | VisibilityEdge4        |          |
|                        | Visible                |          |
*** Remarks

You can specify different Z coordinates for each corner point of a 3DFace object. This differs from a Solid object, which creates a three- or four-sided surface that is parallel to the current UCS and can be extruded.


Six 3DFaces joined together to make a cube

You control which edges of the face are visible through the SetInvisibleEdge method. This allows accurate modeling of objects with holes.

To create a 3DFace, use the Add3DFace method.
*** Code
#+name:Acad3DFace
#+header: :var m-p=m-p-Acad3DFace
#+header: :var o-i=o-i-Acad3DFace
#+header: :var des=des-Acad3DFace
#+header: :var code=code
#+header: :results output file
#+header: :file Acad3DFace.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: Acad3DFace
[[file:Acad3DFace.lisp]]

** 3DPolyline Object (ActiveX)
#+name: des-Acad3DPolyline
| Description                              |
|------------------------------------------|
| A 3D polyline of straight line segments. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-Acad3DPolyline
| cl-nm          |
|----------------|
| Acad3DPolyline |
**** Object Inheritance
#+name: o-i-Acad3DPolyline
| Object         |
| AcadObject     |
| AcadEntity     |
| Acad3DPolyline |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.Add3DPoly
    PaperSpace.Add3DPoly
    Block.Add3DPoly 
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item 
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-Acad3DPolyline
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| AppendVertex           | Application            | Modified |
| ArrayPolar             | Closed                 |          |
| ArrayRectangular       | Coordinate             |          |
| Copy                   | Coordinates            |          |
| Delete                 | Document               |          |
| Explode                | EntityTransparency     |          |
| GetBoundingBox         | Handle                 |          |
| GetExtensionDictionary | HasExtensionDictionary |          |
| GetXData               | Hyperlinks             |          |
| Highlight              | Layer                  |          |
| IntersectWith          | Length                 |          |
| Mirror                 | Linetype               |          |
| Mirror3D               | LinetypeScale          |          |
| Move                   | Lineweight             |          |
| Rotate                 | Material               |          |
| Rotate3D               | ObjectID               |          |
| ScaleEntity            | ObjectName             |          |
| SetXData               | OwnerID                |          |
| TransformBy            | PlotStyleName          |          |
| Update                 | TrueColor              |          |
|                        | Type                   |          |
|                        | Visible                |          |
*** Remarks

To open or close a polyline, use the Closed property.

An open 3D polyline

To create a 3D polyline, use the Add3DPoly method.

*** Code
#+name:Acad3DPolyline
#+header: :var m-p=m-p-Acad3DPolyline
#+header: :var o-i=o-i-Acad3DPolyline
#+header: :var des=des-Acad3DPolyline
#+header: :var code=code
#+header: :results output file
#+header: :file Acad3DPolyline.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: Acad3DPolyline
[[file:Acad3DPolyline.lisp]]

** 3DSolid Object (ActiveX)
#+name: des-Acad3DSolid
| Description                                    |
|------------------------------------------------|
| A solid object with free-form surface support. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-Acad3DSolid
| cl-nm       |
|-------------|
| Acad3DSolid |
**** Object Inheritance
#+name: o-i-Acad3DSolid
| Object      |
| AcadObject  |
| AcadEntity  |
| Acad3DSolid |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace, PaperSpace, and Block objects use:
    AddBox, AddCone, AddCylinder, AddEllipticalCone, AddEllipticalCylinder, 
    AddExtrudedSolid, AddExtrudedSolidAlongPath, AddRevolvedSolid, 
    AddSphere, AddTorus, or AddWedge 
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-Acad3DSolid
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Centroid               |          |
| Boolean                | Document               |          |
| CheckInterference      | EntityTransparency     |          |
| Copy                   | Handle                 |          |
| Delete                 | HasExtensionDictionary |          |
| GetBoundingBox         | History                |          |
| GetExtensionDictionary | Hyperlinks             |          |
| GetXData               | Layer                  |          |
| Highlight              | Linetype               |          |
| IntersectWith          | LinetypeScale          |          |
| Mirror                 | Lineweight             |          |
| Mirror3D               | Material               |          |
| Move                   | MomentOfInertia        |          |
| Rotate                 | ObjectID               |          |
| Rotate                 | ObjectName             |          |
| ScaleEntity            | OwnerID                |          |
| SectionSolid           | PlotStyleName          |          |
| SetXData               | Position               |          |
| SliceSolid             | PrincipalDirections    |          |
| TransformBy            | PrincipalMoments       |          |
| Update                 | ProductOfInertia       |          |
|                        | RadiiOfGyration        |          |
|                        | ShowHistory            |          |
|                        | SolidType              |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
|                        | Volume                 |          |
*** Remarks

You can make 3D objects by creating basic 3D shapes: boxes, cones, cylinders, spheres, wedges, and toriis (donuts). You can then combine these shapes to create more complex solids by joining or subtracting them or finding their intersecting (overlapping) volume. You can also create solids by sweeping a 2D object along a path or revolving it about an axis.

To create a 3DSolid, use one of the following methods: AddBox , AddCone , AddCylinder , AddEllipticalCone , AddEllipticalCylinder , AddExtrudedSolid , AddExtrudedSolidAlongPath , AddRevolvedSolid , AddSphere , AddTorus , AddWedge .
*** Code
#+name:Acad3DSolid
#+header: :var m-p=m-p-Acad3DSolid
#+header: :var o-i=o-i-Acad3DSolid
#+header: :var des=des-Acad3DSolid
#+header: :var code=code
#+header: :results output file
#+header: :file Acad3DSolid.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: Acad3DSolid
[[file:Acad3DSolid.lisp]]

** Arc Object (ActiveX)
#+name: des-AcadArc
| Description     |
|-----------------|
| A circular arc. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadArc
| cl-nm   |
|---------|
| AcadArc |
**** Object Inheritance
#+name: o-i-AcadArc
| Object     |
| AcadObject |
| AcadEntity |
| AcadArc    |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddArc
    PaperSpace.AddArc
    Block.AddArc 
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadArc
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | ArcLength              |          |
| Copy                   | Area                   |          |
| Delete                 | Center                 |          |
| GetBoundingBox         | Document               |          |
| GetExtensionDictionary | EndAngle               |          |
| GetXData               | EndPoint               |          |
| Highlight              | EntityTransparency     |          |
| IntersectWith          | Handle                 |          |
| Mirror                 | HasExtensionDictionary |          |
| Mirror3D               | Hyperlinks             |          |
| Move                   | Layer                  |          |
| Offset                 | Linetype               |          |
| Rotate                 | LinetypeScale          |          |
| Rotate3D               | Lineweight             |          |
| ScaleEntity            | Material               |          |
| SetXData               | Normal                 |          |
| TransformBy            | ObjectID               |          |
| Update                 | ObjectName             |          |
|                        | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | Radius                 |          |
|                        | StartAngle             |          |
|                        | StartPoint             |          |
|                        | Thickness              |          |
|                        | TotalAngle             |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
*** Remarks

An arc is always drawn counterclockwise from the start point to the endpoint. The StartPoint and EndPoint properties of an arc are calculated through the StartAngle, EndAngle, and Radius properties.


To create an arc, use the AddArc method.
*** Code
#+name:AcadArc
#+header: :var m-p=m-p-AcadArc
#+header: :var o-i=o-i-AcadArc
#+header: :var des=des-AcadArc
#+header: :var code=code
#+header: :results output file
#+header: :file AcadArc.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadArc
[[file:AcadArc.lisp]]

** Attribute Object (ActiveX)
#+name: des-AcadAttribute
| Description                                                                                        |
|----------------------------------------------------------------------------------------------------|
| An object appearing as a text string that describes the characteristics of an attribute reference. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadAttribute
| cl-nm         |
|---------------|
| AcadAttribute |
**** Object Inheritance
#+name: o-i-AcadAttribute
| Object        |
| AcadObject    |
| AcadEntity    |
| AcadAttribute |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddAttribute
    PaperSpace.AddAttribute
    Block.AddAttribute 
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadAttribute
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Alignment              | Modified |
| ArrayRectangular       | Application            |          |
| Copy                   | Backward               |          |
| Delete                 | Constant               |          |
| GetBoundingBox         | Document               |          |
| GetExtensionDictionary | EntityTransparency     |          |
| GetXData               | FieldLength            |          |
| Highlight              | Handle                 |          |
| IntersectWith          | HasExtensionDictionary |          |
| Mirror                 | Height                 |          |
| Mirror3D               | Hyperlinks             |          |
| Move                   | InsertionPoint         |          |
| Rotate                 | Invisible              |          |
| Rotate3D               | Layer                  |          |
| ScaleEntity            | Linetype               |          |
| SetXData               | LinetypeScale          |          |
| TransformBy            | Lineweight             |          |
| Update                 | LockPosition           |          |
| UpdateMTextAttribute   | Material               |          |
|                        | Mode                   |          |
|                        | MTextAttribute         |          |
|                        | MTextAttributeContent  |          |
|                        | MTextBoundaryWidth     |          |
|                        | MTextDrawingDirection  |          |
|                        | Normal                 |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | ObliqueAngle           |          |
|                        | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | Preset                 |          |
|                        | PromptString           |          |
|                        | Rotation               |          |
|                        | ScaleFactor            |          |
|                        | StyleName              |          |
|                        | TagString              |          |
|                        | TextAlignmentPoint     |          |
|                        | TextGenerationFlag     |          |
|                        | TextString             |          |
|                        | Thickness              |          |
|                        | TrueColor              |          |
|                        | UpsideDown             |          |
|                        | Verify                 |          |
|                        | Visible                |          |
*** Remarks

In AutoCAD, this object is called an attribute definition.

To create an attribute (or attribute definition), use the AddAttribute method.

*** Code
#+name:AcadAttribute
#+header: :var m-p=m-p-AcadAttribute
#+header: :var o-i=o-i-AcadAttribute
#+header: :var des=des-AcadAttribute
#+header: :var code=code
#+header: :results output file
#+header: :file AcadAttribute.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadAttribute
[[file:AcadAttribute.lisp]]

** AttributeReference Object (ActiveX)
#+name: des-AcadAttributeReference
| Description                                      |
|--------------------------------------------------|
| An object containing text that links to a block. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadAttributeReference
| cl-nm                  |
|------------------------|
| AcadAttributeReference |
**** Object Inheritance
#+name: o-i-AcadAttributeReference
| Object                 |
| AcadObject             |
| AcadEntity             |
| AcadAttributeReference |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.InsertBlock
    PaperSpace.InsertBlock
    Block.InsertBlock
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Block.GetAttributes
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadAttributeReference
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Alignment              | Modified |
| ArrayRectangular       | Application            |          |
| Copy                   | Backward               |          |
| Delete                 | Constant               |          |
| GetBoundingBox         | Document               |          |
| GetExtensionDictionary | EntityTransparency     |          |
| GetExtensionDictionary | FieldLength            |          |
| GetXData               | Handle                 |          |
| IntersectWith          | HasExtensionDictionary |          |
| Mirror                 | Height                 |          |
| Mirror3D               | Hyperlinks             |          |
| Move                   | InsertionPoint         |          |
| Rotate                 | Invisible              |          |
| Rotate3D               | Layer                  |          |
| ScaleEntity            | Linetype               |          |
| SetXData               | LinetypeScale          |          |
| TransformBy            | Lineweight             |          |
| Update                 | LockPosition           |          |
| UpdateMTextAttribute   | Material               |          |
|                        | MTextAttribute         |          |
|                        | MTextAttributeContent  |          |
|                        | MTextBoundaryWidth     |          |
|                        | MTextDrawingDirection  |          |
|                        | Normal                 |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | ObliqueAngle           |          |
|                        | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | Rotation               |          |
|                        | ScaleFactor            |          |
|                        | StyleName              |          |
|                        | TagString              |          |
|                        | TextAlignmentPoint     |          |
|                        | TextGenerationFlag     |          |
|                        | TextString             |          |
|                        | Thickness              |          |
|                        | TrueColor              |          |
|                        | UpsideDown             |          |
|                        | Visible                |          |
*** Remarks

You cannot directly create an attribute reference. Attribute references are added to the drawing when a block containing an attribute definition is inserted into the drawing. To access an attribute reference of an inserted block, use the GetAttributes method. This method returns an array of all attribute references attached to the inserted block.
*** Code
#+name:AcadAttributeReference
#+header: :var m-p=m-p-AcadAttributeReference
#+header: :var o-i=o-i-AcadAttributeReference
#+header: :var des=des-AcadAttributeReference
#+header: :var code=code
#+header: :results output file
#+header: :file AcadAttributeReference.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadAttributeReference
[[file:AcadAttributeReference.lisp]]

** BlockReference Object (ActiveX)
#+name: des-AcadBlockReference
| Description                                                |
|------------------------------------------------------------|
| An instance of a block definition inserted into a drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadBlockReference
| cl-nm              |
|--------------------|
| AcadBlockReference |
**** Object Inheritance
#+name: o-i-AcadBlockReference
| Object             |
| AcadObject         |
| AcadEntity         |
| AcadBlockReference |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.InsertBlock
    PaperSpace.InsertBlock
    Block.InsertBlock
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadBlockReference
| Methods                   | Properties             | Events   |
|---------------------------+------------------------+----------|
| ArrayPolar                | Application            | Modified |
| ArrayRectangular          | Document               |          |
| ConvertToAnonymousBlock   | EffectiveName          |          |
| ConvertToStaticBlock      | EntityTransparency     |          |
| Copy                      | Handle                 |          |
| Delete                    | HasAttributes          |          |
| Explode                   | HasExtensionDictionary |          |
| GetAttributes             | Hyperlinks             |          |
| GetBoundingBox            | InsertionPoint         |          |
| GetConstantAttributes     | InsUnits               |          |
| GetDynamicBlockProperties | InsUnitsFactor         |          |
| GetExtensionDictionary    | IsDynamicBlock         |          |
| GetXData                  | Layer                  |          |
| Highlight                 | Linetype               |          |
| IntersectWith             | LinetypeScale          |          |
| Mirror                    | Lineweight             |          |
| Mirror3D                  | Material               |          |
| Move                      | Name                   |          |
| ResetBlock                | Normal                 |          |
| Rotate                    | ObjectID               |          |
| Rotate3D                  | ObjectName             |          |
| ScaleEntity               | OwnerID                |          |
| SetXData                  | PlotStyleName          |          |
| TransformBy               | Rotation               |          |
| Update                    | TrueColor              |          |
|                           | Visible                |          |
|                           | XEffectiveScaleFactor  |          |
|                           | XScaleFactor           |          |
|                           | YEffectiveScaleFactor  |          |
|                           | YScaleFactor           |          |
|                           | ZEffectiveScaleFactor  |          |
|                           | ZScaleFactor           |          |
*** Remarks

To create a block reference, first you must create a block definition, or block, by using the Add method. Once created, you can insert an instance of this block into your drawing using the InsertBlock method.

To add or delete items from the block reference, you must first use the Explode method to break it into its component objects. Even though a block reference is broken into its component objects, the block definition still remains in the drawings block symbol table.
*** Code
#+name:AcadBlockReference
#+header: :var m-p=m-p-AcadBlockReference
#+header: :var o-i=o-i-AcadBlockReference
#+header: :var des=des-AcadBlockReference
#+header: :var code=code
#+header: :results output file
#+header: :file AcadBlockReference.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadBlockReference
[[file:AcadBlockReference.lisp]]

** DynamicBlockReferenceProperty Object (ActiveX)
#+name: des-AcadDynamicBlockReferenceProperty
| Description                                             |
|---------------------------------------------------------|
| An object containing the properties of a dynamic block. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDynamicBlockReferenceProperty
| cl-nm                             |
|-----------------------------------|
| AcadDynamicBlockReferenceProperty |
**** Object Inheritance
#+name: o-i-AcadDynamicBlockReferenceProperty
| Object                            |
| AcadDynamicBlockReferenceProperty |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    BlockRef.GetDynamicBlockProperties
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDynamicBlockReferenceProperty
| Methods | Properties    | Events |
|---------+---------------+--------|
|         | AllowedValues |        |
|         | Description   |        |
|         | PropertyName  |        |
|         | ReadOnly      |        |
|         | Show          |        |
|         | UnitsType     |        |
|         | Value         |        |
*** Remarks

You cannot create this object; GetDynamicBlockProperties method returns a collection of DynamicBlockReferenceProperty objects if the block reference is a dynamic block containing custom properties.
*** Code
#+name:AcadDynamicBlockReferenceProperty
#+header: :var m-p=m-p-AcadDynamicBlockReferenceProperty
#+header: :var o-i=o-i-AcadDynamicBlockReferenceProperty
#+header: :var des=des-AcadDynamicBlockReferenceProperty
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDynamicBlockReferenceProperty.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDynamicBlockReferenceProperty
[[file:AcadDynamicBlockReferenceProperty.lisp]]

** Circle Object (ActiveX)
#+name: des-AcadCircle
| Description    |
|----------------|
| A full circle. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadCircle
| cl-nm      |
|------------|
| AcadCircle |
**** Object Inheritance
#+name: o-i-AcadCircle
| Object     |
| AcadObject |
| AcadEntity |
| AcadCircle |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddCircle
    PaperSpace.AddCircle
    Block.AddCircle
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadCircle
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Area                   |          |
| Copy                   | Center                 |          |
| Delete                 | Circumference          |          |
| GetBoundingBox         | Diameter               |          |
| GetExtensionDictionary | Document               |          |
| GetXData               | EntityTransparency     |          |
| Highlight              | Handle                 |          |
| IntersectWith          | HasExtensionDictionary |          |
| Mirror                 | Hyperlinks             |          |
| Mirror3D               | Layer                  |          |
| Move                   | Linetype               |          |
| Offset                 | LinetypeScale          |          |
| Rotate                 | Lineweight             |          |
| Rotate3D               | Material               |          |
| ScaleEntity            | Normal                 |          |
| SetXData               | ObjectID               |          |
| TransformBy            | ObjectName             |          |
| Update                 | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | Radius                 |          |
|                        | Thickness              |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
*** Remarks

To create a circle, use the AddCircle method.
*** Code
#+name:AcadCircle
#+header: :var m-p=m-p-AcadCircle
#+header: :var o-i=o-i-AcadCircle
#+header: :var des=des-AcadCircle
#+header: :var code=code
#+header: :results output file
#+header: :file AcadCircle.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadCircle
[[file:AcadCircle.lisp]]

** ComparedReference Object (ActiveX)
#+name: des-AcadComparedReference
| Description                                                                           |
|---------------------------------------------------------------------------------------|
| External reference that represents the drawing being compared to the current drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadComparedReference
| cl-nm                 |
|-----------------------|
| AcadComparedReference |
**** Object Inheritance
#+name: o-i-AcadComparedReference
| Object                |
| AcadObject            |
| AcadEntity            |
| AcadBlockReference    |
| AcadExternalReference |
| AcadComparedReference |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadComparedReference
| Methods                   | Properties             | Events   |
|---------------------------+------------------------+----------|
| ArrayPolar                | Application            | Modified |
| ArrayRectangular          | Document               |          |
| ConvertToAnonymousBlock   | EffectiveName          |          |
| ConvertToStaticBlock      | EntityTransparency     |          |
| Copy                      | Handle                 |          |
| Delete                    | HasAttributes          |          |
| Explode                   | HasExtensionDictionary |          |
| GetAttributes             | Hyperlinks             |          |
| GetBoundingBox            | InsertionPoint         |          |
| GetConstantAttributes     | InsUnits               |          |
| GetDynamicBlockProperties | InsUnitsFactor         |          |
| GetExtensionDictionary    | IsDynamicBlock         |          |
| GetXData                  | Layer                  |          |
| Highlight                 | LayerPropertyOverrides |          |
| IntersectWith             | Linetype               |          |
| Mirror                    | LinetypeScale          |          |
| Mirror3D                  | Lineweight             |          |
| Move                      | Material               |          |
| ResetBlock                | Name                   |          |
| Rotate                    | Normal                 |          |
| Rotate3D                  | ObjectID               |          |
| ScaleEntity               | ObjectName             |          |
| SetXData                  | OwnerID                |          |
| TransformBy               | Path                   |          |
| Update                    | PlotStyleName          |          |
|                           | Rotation               |          |
|                           | TrueColor              |          |
|                           | Visible                |          |
|                           | XEffectiveScaleFactor  |          |
|                           | XScaleFactor           |          |
|                           | YEffectiveScaleFactor  |          |
|                           | YScaleFactor           |          |
|                           | ZEffectiveScaleFactor  |          |
|                           | ZScaleFactor           |          |
*** Remarks

The ComparedReference object inherits its members from the ExternalReference object. You can use ActiveX to query and edit ComparedReference entities in an AutoCAD drawing. However, you cannot create a ComparedReference object with ActiveX.

There is no member property that allows you to identify an ExternalReference object as being of the ComparedReference type; however, you can cast-type an AcadEntity or AcadExternalReference to the AcadComparedReference object type and use error handling to determine if the cast was successful.

The following code samples show how you can use cast-typing to determine if an entity is of type ComparedReference.

#+BEGIN_SRC VBA:
' Checks to see if an object is of the ComparedReference type
Sub CheckForComparedReference()
  Dim ent As AcadEntity
  Dim comRef As AcadComparedReference
  
  On Error Resume Next

  ' Step through all the objects in model space
  For Each ent In ThisDrawing.ModelSpace
  
    ' Check to see if the object is a Block Reference
    If ent.ObjectName = "AcDbBlockReference" Then
    
      ' Try to cast the entity (Block Reference) to a ComparedReference
      Set comRef = ent
    
      ' If an occurs, then the entity is not a ComparedReference
      If Err <> 0 Then
        MsgBox "Not a Compared Reference"
      Else
        MsgBox "Xref Name: " + comRef.Name + vbLf + "Compared Reference"
      End If
    
      ' Clear the Error object
      Err.Clear
    End If
  Next ent
End Sub

Visual LISP:

(vl-load-com)
(defun c:CheckForComparedReference()
  ;; Checks to see if an object is of the ComparedReference type
  (setq acadObj (vlax-get-acad-object))
  (setq doc (vla-get-ActiveDocument acadObj))

  ;; Step through all the objects in model space
  (vlax-for obj (vla-get-ModelSpace doc)
    ;; Check to see if the object is a Block Reference
    (if (= (vla-get-objectname obj) "AcDbBlockReference")
      (progn
        ;; Transform the VLA-OBJECT to an ENAME
        (setq entName (vlax-vla-object->ename obj))

        ;; Check to see what the value of the IsComparedReference property is of the entity
        (if (vl-catch-all-error-p (vl-catch-all-apply 'getpropertyvalue (list entName "IsComparedReference")))
          ;; If an error occurs, then the entity is not a ComparedReference
          (alert "Not a Compared Reference")
          (alert (strcat "Xref Name: "
                         (vla-get-name obj)
                         "\nCompared Reference"))
        )
      )
    )
  )
)
#END_SRC
*** Code
#+name:AcadComparedReference
#+header: :var m-p=m-p-AcadComparedReference
#+header: :var o-i=o-i-AcadComparedReference
#+header: :var des=des-AcadComparedReference
#+header: :var code=code
#+header: :results output file
#+header: :file AcadComparedReference.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadComparedReference
[[file:AcadComparedReference.lisp]]

** Dim3PointAngular Object (ActiveX)
#+name: des-AcadDim3PointAngular
| Description                                                      |
|------------------------------------------------------------------|
| A dimension measuring the angular distance between three points. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDim3PointAngular
| cl-nm                |
|----------------------|
| AcadDim3PointAngular |
**** Object Inheritance
#+name: o-i-AcadDim3PointAngular
| Object               |
| AcadObject           |
| AcadEntity           |
| AcadDimension        |
| AcadDim3PointAngular |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddDim3PointAngular
    PaperSpace.AddDim3PointAngular
    Block.AddDim3PointAngular
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDim3PointAngular
| Methods                | Properties                     | Events   |
|------------------------+--------------------------------+----------|
| ArrayPolar             | AngleFormat                    | Modified |
| ArrayRectangular       | AngleVertex                    |          |
| Copy                   | Application                    |          |
| Delete                 | Arrowhead1Block                |          |
| GetBoundingBox         | Arrowhead1Type                 |          |
| GetExtensionDictionary | Arrowhead2Block                |          |
| GetXData               | Arrowhead2Type                 |          |
| Highlight              | ArrowheadSize                  |          |
| IntersectWith          | DecimalSeparator               |          |
| Mirror                 | DimConstrDesc                  |          |
| Mirror3D               | DimConstrExpression            |          |
| Move                   | DimConstrForm                  |          |
| Rotate                 | DimConstrName                  |          |
| Rotate3D               | DimConstrReference             |          |
| ScaleEntity            | DimConstrValue                 |          |
| SetXData               | DimensionLineColor             |          |
| TransformBy            | DimensionLinetype              |          |
| Update                 | DimensionLineWeight            |          |
|                        | DimLine1Suppress               |          |
|                        | DimLine2Suppress               |          |
|                        | DimLineInside                  |          |
|                        | DimTxtDirection                |          |
|                        | Document                       |          |
|                        | EntityTransparency             |          |
|                        | ExtensionLineColor             |          |
|                        | ExtensionLineExtend            |          |
|                        | ExtensionLineOffset            |          |
|                        | ExtensionLineWeight            |          |
|                        | ExtLine1EndPoint               |          |
|                        | ExtLine1Linetype               |          |
|                        | ExtLine1Suppress               |          |
|                        | ExtLine2EndPoint               |          |
|                        | ExtLine2Linetype               |          |
|                        | ExtLine2Suppress               |          |
|                        | ExtLineFixedLen                |          |
|                        | ExtLineFixedLenSuppress        |          |
|                        | Fit                            |          |
|                        | ForceLineInside                |          |
|                        | Handle                         |          |
|                        | HasExtensionDictionary         |          |
|                        | HorizontalTextPosition         |          |
|                        | Hyperlinks                     |          |
|                        | Layer                          |          |
|                        | Linetype                       |          |
|                        | LinetypeScale                  |          |
|                        | Lineweight                     |          |
|                        | Material                       |          |
|                        | Measurement                    |          |
|                        | Normal                         |          |
|                        | ObjectID                       |          |
|                        | ObjectName                     |          |
|                        | OwnerID                        |          |
|                        | PlotStyleName                  |          |
|                        | Rotation                       |          |
|                        | ScaleFactor                    |          |
|                        | StyleName                      |          |
|                        | SuppressLeadingZeros           |          |
|                        | SuppressTrailingZeros          |          |
|                        | TextColor                      |          |
|                        | TextFill                       |          |
|                        | TextFillColor                  |          |
|                        | TextGap                        |          |
|                        | TextHeight                     |          |
|                        | TextInside                     |          |
|                        | TextInsideAlign                |          |
|                        | TextMovement                   |          |
|                        | TextOutsideAlign               |          |
|                        | TextOverride                   |          |
|                        | TextPosition                   |          |
|                        | TextPrecision                  |          |
|                        | TextPrefix                     |          |
|                        | TextRotation                   |          |
|                        | TextStyle                      |          |
|                        | TextSuffix                     |          |
|                        | ToleranceDisplay               |          |
|                        | ToleranceHeightScale           |          |
|                        | ToleranceJustification         |          |
|                        | ToleranceLowerLimit            |          |
|                        | TolerancePrecision             |          |
|                        | ToleranceSuppressLeadingZeros  |          |
|                        | ToleranceSuppressTrailingZeros |          |
|                        | ToleranceUpperLimit            |          |
|                        | TrueColor                      |          |
|                        | VerticalTextPosition           |          |
|                        | Visible                        |          |
*** Remarks

When creating a three point angular dimension, AutoCAD draws the dimension line arc between the extension lines. The extension lines are drawn from the angle endpoints to the intersection of the dimension line arc.


A 3 point angular dimension

AutoCAD uses the location of the dimension line arc to choose between the minor and major angles specified by the angle vertex and extension lines.

To create a three point angular dimension, use the AddDim3PointAngular method.
*** Code
#+name:AcadDim3PointAngular
#+header: :var m-p=m-p-AcadDim3PointAngular
#+header: :var o-i=o-i-AcadDim3PointAngular
#+header: :var des=des-AcadDim3PointAngular
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDim3PointAngular.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDim3PointAngular
[[file:AcadDim3PointAngular.lisp]]

** DimAligned Object (ActiveX)
#+name: des-AcadDimAligned
| Description                                                                                                             |
|-------------------------------------------------------------------------------------------------------------------------|
| A linear dimension, measuring the distance between two points, that is displayed parallel to the points being measured. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDimAligned
| cl-nm          |
|----------------|
| AcadDimAligned |
**** Object Inheritance
#+name: o-i-AcadDimAligned
| Object         |
| AcadObject     |
| AcadEntity     |
| AcadDimension  |
| AcadDimAligned |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddDimAligned
    PaperSpace.AddDimAligned
    Block.AddDimAligned 
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDimAligned
| Methods                | Properties                        | Events   |
|------------------------+-----------------------------------+----------|
| ArrayPolar             | AltRoundDistance                  | Modified |
| ArrayRectangular       | AltSubUnitsFactor                 |          |
| Copy                   | AltSubUnitsSuffix                 |          |
| Delete                 | AltSuppressLeadingZeros           |          |
| GetBoundingBox         | AltSuppressTrailingZeros          |          |
| GetExtensionDictionary | AltSuppressZeroFeet               |          |
| GetXData               | AltSuppressZeroInches             |          |
| Highlight              | AltTextPrefix                     |          |
| IntersectWith          | AltTextSuffix                     |          |
| Mirror                 | AltTolerancePrecision             |          |
| Mirror3D               | AltToleranceSuppressLeadingZeros  |          |
| Move                   | AltToleranceSuppressTrailingZeros |          |
| Rotate                 | AltToleranceSuppressZeroFeet      |          |
| Rotate3D               | AltToleranceSuppressZeroInches    |          |
| ScaleEntity            | AltUnits                          |          |
| SetXData               | AltUnitsFormat                    |          |
| TransformBy            | AltUnitsPrecision                 |          |
| Update                 | AltUnitsScale                     |          |
|                        | Application                       |          |
|                        | Arrowhead1Block                   |          |
|                        | Arrowhead1Type                    |          |
|                        | Arrowhead2Block                   |          |
|                        | Arrowhead2Type                    |          |
|                        | ArrowheadSize                     |          |
|                        | DecimalSeparator                  |          |
|                        | DimConstrDesc                     |          |
|                        | DimConstrExpression               |          |
|                        | DimConstrForm                     |          |
|                        | DimConstrName                     |          |
|                        | DimConstrReference                |          |
|                        | DimConstrValue                    |          |
|                        | DimensionLineColor                |          |
|                        | DimensionLineExtend               |          |
|                        | DimensionLinetype                 |          |
|                        | DimensionLineWeight               |          |
|                        | DimLine1Suppress                  |          |
|                        | DimLine2Suppress                  |          |
|                        | DimLineInside                     |          |
|                        | DimTxtDirection                   |          |
|                        | Document                          |          |
|                        | EntityTransparency                |          |
|                        | ExtensionLineColor                |          |
|                        | ExtensionLineExtend               |          |
|                        | ExtensionLineOffset               |          |
|                        | ExtensionLineWeight               |          |
|                        | ExtLine1Linetype                  |          |
|                        | ExtLine1Point                     |          |
|                        | ExtLine1Suppress                  |          |
|                        | ExtLine2Linetype                  |          |
|                        | ExtLine2Point                     |          |
|                        | ExtLine2Suppress                  |          |
|                        | ExtLineFixedLen                   |          |
|                        | ExtLineFixedLenSupress            |          |
|                        | Fit                               |          |
|                        | ForceLineInside                   |          |
|                        | FractionFormat                    |          |
|                        | Handle                            |          |
|                        | HasExtensionDictionary            |          |
|                        | HorizontalTextPosition            |          |
|                        | Hyperlinks                        |          |
|                        | Layer                             |          |
|                        | LinearScaleFactor                 |          |
|                        | Linetype                          |          |
|                        | LinetypeScale                     |          |
|                        | Lineweight                        |          |
|                        | Material                          |          |
|                        | Measurement                       |          |
|                        | Normal                            |          |
|                        | ObjectID                          |          |
|                        | ObjectName                        |          |
|                        | OwnerID                           |          |
|                        | PlotStyleName                     |          |
|                        | PrimaryUnitsPrecision             |          |
|                        | Rotation                          |          |
|                        | RoundDistance                     |          |
|                        | ScaleFactor                       |          |
|                        | StyleName                         |          |
|                        | SubUnitsFactor                    |          |
|                        | SubUnitsSuffix                    |          |
|                        | SuppressLeadingZeros              |          |
|                        | SuppressTrailingZeros             |          |
|                        | SuppressZeroFeet                  |          |
|                        | SuppressZeroInches                |          |
|                        | TextColor                         |          |
|                        | TextFill                          |          |
|                        | TextFillColor                     |          |
|                        | TextGap                           |          |
|                        | TextHeight                        |          |
|                        | TextInside                        |          |
|                        | TextInsideAlign                   |          |
|                        | TextMovement                      |          |
|                        | TextOutsideAlign                  |          |
|                        | TextOverride                      |          |
|                        | TextPosition                      |          |
|                        | TextPrefix                        |          |
|                        | TextRotation                      |          |
|                        | TextStyle                         |          |
|                        | TextSuffix                        |          |
|                        | ToleranceDisplay                  |          |
|                        | ToleranceHeightScale              |          |
|                        | ToleranceJustification            |          |
|                        | ToleranceLowerLimit               |          |
|                        | TolerancePrecision                |          |
|                        | ToleranceSuppressLeadingZeros     |          |
|                        | ToleranceSuppressTrailingZeros    |          |
|                        | ToleranceSuppressZeroFeet         |          |
|                        | ToleranceSuppressZeroInches       |          |
|                        | ToleranceUpperLimit               |          |
|                        | TrueColor                         |          |
|                        | UnitsFormat                       |          |
|                        | VerticalTextPosition              |          |
|                        | Visible                           |          |
*** Remarks

In aligned dimensions, the dimension line is parallel to the extension line origins. The extension line origins are specified using the ExtLine1Point and ExtLine2Point properties.


To create an aligned dimension use the AddDimAligned method.
*** Code
#+name:AcadDimAligned
#+header: :var m-p=m-p-AcadDimAligned
#+header: :var o-i=o-i-AcadDimAligned
#+header: :var des=des-AcadDimAligned
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDimAligned.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDimAligned
[[file:AcadDimAligned.lisp]]

** DimAngular Object (ActiveX)
#+name: des-AcadDimAngular
| Description                                                                                          |
|------------------------------------------------------------------------------------------------------|
| A dimension measuring the angular distance between two lines or between the angle of a circular arc. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDimAngular
| cl-nm          |
|----------------|
| AcadDimAngular |
**** Object Inheritance
#+name: o-i-AcadDimAngular
| Object         |
| AcadObject     |
| AcadEntity     |
| AcadDimension  |
| AcadDimAngular |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddDimAngular
    PaperSpace.AddDimAngular
    Block.AddDimAngular
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDimAngular
| Methods                | Properties                     | Events   |
|------------------------+--------------------------------+----------|
| ArrayPolar             | AngleFormat                    | Modified |
| ArrayRectangular       | Application                    |          |
| Copy                   | Arrowhead1Block                |          |
| Delete                 | Arrowhead1Type                 |          |
| GetBoundingBox         | Arrowhead2Block                |          |
| GetExtensionDictionary | Arrowhead2Type                 |          |
| GetXData               | ArrowheadSize                  |          |
| Highlight              | DecimalSeparator               |          |
| IntersectWith          | DimConstrDesc                  |          |
| Mirror                 | DimConstrExpression            |          |
| Mirror3D               | DimConstrForm                  |          |
| Move                   | DimConstrName                  |          |
| Rotate                 | DimConstrReference             |          |
| Rotate3D               | DimConstrValue                 |          |
| ScaleEntity            | DimensionLineColor             |          |
| SetXData               | DimensionLinetype              |          |
| TransformBy            | DimensionLineWeight            |          |
| Update                 | DimLine1Suppress               |          |
|                        | DimLine2Suppress               |          |
|                        | DimLineInside                  |          |
|                        | DimTxtDirection                |          |
|                        | Document                       |          |
|                        | EntityTransparency             |          |
|                        | ExtensionLineColor             |          |
|                        | ExtensionLineExtend            |          |
|                        | ExtensionLineOffset            |          |
|                        | ExtensionLineWeight            |          |
|                        | ExtLine1EndPoint               |          |
|                        | ExtLine1Linetype               |          |
|                        | ExtLine1StartPoint             |          |
|                        | ExtLine1Suppress               |          |
|                        | ExtLine2EndPoint               |          |
|                        | ExtLine2Linetype               |          |
|                        | ExtLine2StartPoint             |          |
|                        | ExtLine2Suppress               |          |
|                        | ExtLineFixedLen                |          |
|                        | ExtLineFixedLenSuppress        |          |
|                        | Fit                            |          |
|                        | ForceLineInside                |          |
|                        | Handle                         |          |
|                        | HasExtensionDictionary         |          |
|                        | HorizontalTextPosition         |          |
|                        | Hyperlinks                     |          |
|                        | Layer                          |          |
|                        | Linetype                       |          |
|                        | LinetypeScale                  |          |
|                        | Lineweight                     |          |
|                        | Material                       |          |
|                        | Measurement                    |          |
|                        | Normal                         |          |
|                        | ObjectID                       |          |
|                        | ObjectName                     |          |
|                        | OwnerID                        |          |
|                        | PlotStyleName                  |          |
|                        | Rotation                       |          |
|                        | ScaleFactor                    |          |
|                        | StyleName                      |          |
|                        | SuppressLeadingZeros           |          |
|                        | SuppressTrailingZeros          |          |
|                        | TextColor                      |          |
|                        | TextFill                       |          |
|                        | TextFillColor                  |          |
|                        | TextGap                        |          |
|                        | TextHeight                     |          |
|                        | TextInside                     |          |
|                        | TextInsideAlign                |          |
|                        | TextMovement                   |          |
|                        | TextOutsideAlign               |          |
|                        | TextOverride                   |          |
|                        | TextPosition                   |          |
|                        | TextPrecision                  |          |
|                        | TextPrefix                     |          |
|                        | TextRotation                   |          |
|                        | TextStyle                      |          |
|                        | TextSuffix                     |          |
|                        | ToleranceDisplay               |          |
|                        | ToleranceHeightScale           |          |
|                        | ToleranceJustification         |          |
|                        | ToleranceLowerLimit            |          |
|                        | TolerancePrecision             |          |
|                        | ToleranceSuppressLeadingZeros  |          |
|                        | ToleranceSuppressTrailingZeros |          |
|                        | ToleranceUpperLimit            |          |
|                        | TrueColor                      |          |
|                        | VerticalTextPosition           |          |
|                        | Visible                        |          |
*** Remarks

If you need extension lines, they will be added automatically. The endpoints provided will be used as origin points for the extension lines.


An angular dimension measuring the angle of a circular arc

To create an angular dimension, use the AddDimAngular method.

*** Code
#+name:AcadDimAngular
#+header: :var m-p=m-p-AcadDimAngular
#+header: :var o-i=o-i-AcadDimAngular
#+header: :var des=des-AcadDimAngular
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDimAngular.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDimAngular
[[file:AcadDimAngular.lisp]]

** DimArcLength Object (ActiveX)
#+name: des-AcadDimArcLength
| Description                                 |
|---------------------------------------------|
| A dimension measuring the length of an arc. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDimArcLength
| cl-nm            |
|------------------|
| AcadDimArcLength |
**** Object Inheritance
#+name: o-i-AcadDimArcLength
| Object           |
| AcadObject       |
| AcadEntity       |
| AcadDimension    |
| AcadDimArcLength |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddDimArc
    PaperSpace.AddDimArc
    Block.AddDimArc 
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item 
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDimArcLength
| Methods                | Properties                        | Events   |
|------------------------+-----------------------------------+----------|
| ArrayPolar             | AltRoundDistance                  | Modified |
| ArrayRectangular       | AltSubUnitsFactor                 |          |
| Copy                   | AltSubUnitsSuffix                 |          |
| Delete                 | AltSuppressLeadingZeros           |          |
| GetBoundingBox         | AltSuppressTrailingZeros          |          |
| GetExtensionDictionary | AltSuppressZeroFeet               |          |
| GetXData               | AltSuppressZeroInches             |          |
| Highlight              | AltTextPrefix                     |          |
| IntersectWith          | AltTextSuffix                     |          |
| Mirror                 | AltTolerancePrecision             |          |
| Mirror3D               | AltToleranceSuppressLeadingZeros  |          |
| Move                   | AltToleranceSuppressTrailingZeros |          |
| Rotate                 | AltToleranceSuppressZeroFeet      |          |
| Rotate3D               | AltToleranceSuppressZeroInches    |          |
| ScaleEntity            | AltUnits                          |          |
| SetXData               | AltUnitsFormat                    |          |
| TransformBy            | AltUnitsPrecision                 |          |
| Update                 | AltUnitsScale                     |          |
|                        | Application                       |          |
|                        | ArcEndParam                       |          |
|                        | ArcPoint                          |          |
|                        | ArcStartParam                     |          |
|                        | Arrowhead1Block                   |          |
|                        | Arrowhead1Type                    |          |
|                        | Arrowhead2Block                   |          |
|                        | Arrowhead2Type                    |          |
|                        | ArrowheadSize                     |          |
|                        | CenterPoint                       |          |
|                        | DecimalSeparator                  |          |
|                        | DimensionLineColor                |          |
|                        | DimensionLineExtend               |          |
|                        | DimensionLinetype                 |          |
|                        | DimensionLineWeight               |          |
|                        | DimLine1Suppress                  |          |
|                        | DimLine2Suppress                  |          |
|                        | DimLineInside                     |          |
|                        | DimTxtDirection                   |          |
|                        | Document                          |          |
|                        | EntityTransparency                |          |
|                        | ExtensionLineColor                |          |
|                        | ExtensionLineExtend               |          |
|                        | ExtensionLineOffset               |          |
|                        | ExtensionLineWeight               |          |
|                        | ExtLine1Linetype                  |          |
|                        | ExtLine1Point                     |          |
|                        | ExtLine1Suppress                  |          |
|                        | ExtLine2Linetype                  |          |
|                        | ExtLine2Point                     |          |
|                        | ExtLine2Suppress                  |          |
|                        | ExtLineFixedLen                   |          |
|                        | ExtLineFixedLenSuppress           |          |
|                        | Fit                               |          |
|                        | ForceLineInside                   |          |
|                        | FractionFormat                    |          |
|                        | Handle                            |          |
|                        | HasExtensionDictionary            |          |
|                        | HasLeader                         |          |
|                        | HorizontalTextPosition            |          |
|                        | Hyperlinks                        |          |
|                        | IsPartial                         |          |
|                        | Layer                             |          |
|                        | Leader1Point                      |          |
|                        | Leader2Point                      |          |
|                        | LinearScaleFactor                 |          |
|                        | Linetype                          |          |
|                        | LinetypeScale                     |          |
|                        | Lineweight                        |          |
|                        | Material                          |          |
|                        | Measurement                       |          |
|                        | Normal                            |          |
|                        | ObjectID                          |          |
|                        | ObjectName                        |          |
|                        | OwnerID                           |          |
|                        | PlotStyleName                     |          |
|                        | PrimaryUnitsPrecision             |          |
|                        | Rotation                          |          |
|                        | RoundDistance                     |          |
|                        | ScaleFactor                       |          |
|                        | StyleName                         |          |
|                        | SubUnitsFactor                    |          |
|                        | SubUnitsSuffix                    |          |
|                        | SuppressLeadingZeros              |          |
|                        | SuppressTrailingZeros             |          |
|                        | SuppressZeroFeet                  |          |
|                        | SuppressZeroInches                |          |
|                        | SymbolPosition                    |          |
|                        | TextColor                         |          |
|                        | TextFill                          |          |
|                        | TextFillColor                     |          |
|                        | TextGap                           |          |
|                        | TextHeight                        |          |
|                        | TextInside                        |          |
|                        | TextInsideAlign                   |          |
|                        | TextMovement                      |          |
|                        | TextOutsideAlign                  |          |
|                        | TextOverride                      |          |
|                        | TextPosition                      |          |
|                        | TextPrefix                        |          |
|                        | TextRotation                      |          |
|                        | TextStyle                         |          |
|                        | TextSuffix                        |          |
|                        | ToleranceDisplay                  |          |
|                        | ToleranceHeightScale              |          |
|                        | ToleranceJustification            |          |
|                        | ToleranceLowerLimit               |          |
|                        | TolerancePrecision                |          |
|                        | ToleranceSuppressLeadingZeros     |          |
|                        | ToleranceSuppressTrailingZeros    |          |
|                        | ToleranceSuppressZeroFeet         |          |
|                        | ToleranceSuppressZeroInches       |          |
|                        | ToleranceUpperLimit               |          |
|                        | TrueColor                         |          |
|                        | UnitsFormat                       |          |
|                        | VerticalTextPosition              |          |
|                        | Visible                           |          |
*** Remarks

An arc length dimension
*** Code
#+name:AcadDimArcLength
#+header: :var m-p=m-p-AcadDimArcLength
#+header: :var o-i=o-i-AcadDimArcLength
#+header: :var des=des-AcadDimArcLength
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDimArcLength.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDimArcLength
[[file:AcadDimArcLength.lisp]]

** DimDiametric Object (ActiveX)
#+name: des-AcadDimDiametric
| Description                                            |
|--------------------------------------------------------|
| A dimension measuring the diameter of a circle or arc. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDimDiametric
| cl-nm            |
|------------------|
| AcadDimDiametric |
**** Object Inheritance
#+name: o-i-AcadDimDiametric
| Object           |
| AcadObject       |
| AcadEntity       |
| AcadDimension    |
| AcadDimDiametric |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddDimDiametric
    PaperSpace.AddDimDiametric
    Block.AddDimDiametric
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDimDiametric
| Methods                | Properties                        | Events   |
|------------------------+-----------------------------------+----------|
| ArrayPolar             | AltRoundDistance                  | Modified |
| ArrayRectangular       | AltSuppressLeadingZeros           |          |
| Copy                   | AltSuppressTrailingZeros          |          |
| Delete                 | AltSuppressZeroFeet               |          |
| GetBoundingBox         | AltSuppressZeroInches             |          |
| GetExtensionDictionary | AltTextPrefix                     |          |
| GetXData               | AltTextSuffix                     |          |
| Highlight              | AltTolerancePrecision             |          |
| IntersectWith          | AltToleranceSuppressLeadingZeros  |          |
| Mirror                 | AltToleranceSuppressTrailingZeros |          |
| Mirror3D               | AltToleranceSuppressZeroFeet      |          |
| Move                   | AltToleranceSuppressZeroInches    |          |
| Rotate                 | AltUnits                          |          |
| Rotate3D               | AltUnitsFormat                    |          |
| ScaleEntity            | AltUnitsPrecision                 |          |
| SetXData               | AltUnitsScale                     |          |
| TransformBy            | Application                       |          |
| Update                 | Arrowhead1Block                   |          |
|                        | Arrowhead1Type                    |          |
|                        | Arrowhead2Block                   |          |
|                        | Arrowhead2Type                    |          |
|                        | ArrowheadSize                     |          |
|                        | CenterMarkSize                    |          |
|                        | CenterType                        |          |
|                        | DecimalSeparator                  |          |
|                        | DimConstrDesc                     |          |
|                        | DimConstrExpression               |          |
|                        | DimConstrForm                     |          |
|                        | DimConstrName                     |          |
|                        | DimConstrReference                |          |
|                        | DimConstrValue                    |          |
|                        | DimensionLineColor                |          |
|                        | DimensionLinetype                 |          |
|                        | DimensionLineWeight               |          |
|                        | DimLine1Suppress                  |          |
|                        | DimLine2Suppress                  |          |
|                        | DimTxtDirection                   |          |
|                        | Document                          |          |
|                        | EntityTransparency                |          |
|                        | Fit                               |          |
|                        | ForceLineInside                   |          |
|                        | FractionFormat                    |          |
|                        | Handle                            |          |
|                        | HasExtensionDictionary            |          |
|                        | Hyperlinks                        |          |
|                        | Layer                             |          |
|                        | LeaderLength                      |          |
|                        | LinearScaleFactor                 |          |
|                        | Linetype                          |          |
|                        | LinetypeScale                     |          |
|                        | Lineweight                        |          |
|                        | Material                          |          |
|                        | Measurement                       |          |
|                        | Normal                            |          |
|                        | ObjectID                          |          |
|                        | ObjectName                        |          |
|                        | OwnerID                           |          |
|                        | PlotStyleName                     |          |
|                        | PrimaryUnitsPrecision             |          |
|                        | Rotation                          |          |
|                        | RoundDistance                     |          |
|                        | ScaleFactor                       |          |
|                        | StyleName                         |          |
|                        | SuppressLeadingZeros              |          |
|                        | SuppressTrailingZeros             |          |
|                        | SuppressZeroFeet                  |          |
|                        | SuppressZeroInches                |          |
|                        | TextColor                         |          |
|                        | TextFill                          |          |
|                        | TextFillColor                     |          |
|                        | TextGap                           |          |
|                        | TextHeight                        |          |
|                        | TextInside                        |          |
|                        | TextInsideAlign                   |          |
|                        | TextMovement                      |          |
|                        | TextOutsideAlign                  |          |
|                        | TextOverride                      |          |
|                        | TextPosition                      |          |
|                        | TextPrefix                        |          |
|                        | TextRotation                      |          |
|                        | TextStyle                         |          |
|                        | TextSuffix                        |          |
|                        | ToleranceDisplay                  |          |
|                        | ToleranceHeightScale              |          |
|                        | ToleranceJustification            |          |
|                        | ToleranceLowerLimit               |          |
|                        | TolerancePrecision                |          |
|                        | ToleranceSuppressLeadingZeros     |          |
|                        | ToleranceSuppressTrailingZeros    |          |
|                        | ToleranceSuppressZeroFeet         |          |
|                        | ToleranceSuppressZeroInches       |          |
|                        | ToleranceUpperLimit               |          |
|                        | TrueColor                         |          |
|                        | UnitsFormat                       |          |
|                        | VerticalTextPosition              |          |
|                        | Visible                           |          |
*** Remarks

The position of the text (TextPosition property) determines the location of the dimension line.


Examples of diameter dimensions

To create a diameter dimension, use the AddDimDiametric method.
*** Code
#+name:AcadDimDiametric
#+header: :var m-p=m-p-AcadDimDiametric
#+header: :var o-i=o-i-AcadDimDiametric
#+header: :var des=des-AcadDimDiametric
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDimDiametric.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDimDiametric
[[file:AcadDimDiametric.lisp]]

** DimOrdinate Object (ActiveX)
#+name: des-AcadDimOrdinate
| Description                                                                    |
|--------------------------------------------------------------------------------|
| A dimension measuring the absolute X or Y position of a point from the origin. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDimOrdinate
| cl-nm           |
|-----------------|
| AcadDimOrdinate |
**** Object Inheritance
#+name: o-i-AcadDimOrdinate
| Object          |
| AcadObject      |
| AcadEntity      |
| AcadDimension   |
| AcadDimOrdinate |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddDimOrdinate
    PaperSpace.AddDimOrdinate
    Block.AddDimOrdinate
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDimOrdinate
| Methods                | Properties                        | Events   |
|------------------------+-----------------------------------+----------|
| ArrayPolar             | AltRoundDistance                  | Modified |
| ArrayRectangular       | AltSubUnitsFactor                 |          |
| Copy                   | AltSubUnitsSuffix                 |          |
| Delete                 | AltSuppressLeadingZeros           |          |
| GetBoundingBox         | AltSuppressTrailingZeros          |          |
| GetExtensionDictionary | AltSuppressZeroFeet               |          |
| GetXData               | AltSuppressZeroInches             |          |
| Highlight              | AltTextPrefix                     |          |
| IntersectWith          | AltTextSuffix                     |          |
| Mirror                 | AltTolerancePrecision             |          |
| Mirror3D               | AltToleranceSuppressLeadingZeros  |          |
| Move                   | AltToleranceSuppressTrailingZeros |          |
| Rotate                 | AltToleranceSuppressZeroFeet      |          |
| Rotate3D               | AltToleranceSuppressZeroInches    |          |
| ScaleEntity            | AltUnits                          |          |
| SetXData               | AltUnitsFormat                    |          |
| TransformBy            | AltUnitsPrecision                 |          |
| Update                 | AltUnitsScale                     |          |
|                        | Application                       |          |
|                        | ArrowheadSize                     |          |
|                        | DecimalSeparator                  |          |
|                        | DimTxtDirection                   |          |
|                        | Document                          |          |
|                        | EntityTransparency                |          |
|                        | ExtensionLineColor                |          |
|                        | ExtensionLineOffset               |          |
|                        | ExtensionLineWeight               |          |
|                        | ExtLineFixedLen                   |          |
|                        | ExtLineFixedLenSuppress           |          |
|                        | FractionFormat                    |          |
|                        | Handle                            |          |
|                        | HasExtensionDictionary            |          |
|                        | Hyperlinks                        |          |
|                        | Layer                             |          |
|                        | LinearScaleFactor                 |          |
|                        | Linetype                          |          |
|                        | LinetypeScale                     |          |
|                        | Lineweight                        |          |
|                        | Material                          |          |
|                        | Measurement                       |          |
|                        | Normal                            |          |
|                        | ObjectID                          |          |
|                        | ObjectName                        |          |
|                        | OwnerID                           |          |
|                        | PlotStyleName                     |          |
|                        | PrimaryUnitsPrecision             |          |
|                        | Rotation                          |          |
|                        | RoundDistance                     |          |
|                        | ScaleFactor                       |          |
|                        | StyleName                         |          |
|                        | SubUnitsFactor                    |          |
|                        | SubUnitsSuffix                    |          |
|                        | SuppressLeadingZeros              |          |
|                        | SuppressTrailingZeros             |          |
|                        | SuppressZeroFeet                  |          |
|                        | SuppressZeroInches                |          |
|                        | TextColor                         |          |
|                        | TextFill                          |          |
|                        | TextFillColor                     |          |
|                        | TextGap                           |          |
|                        | TextHeight                        |          |
|                        | TextMovement                      |          |
|                        | TextOverride                      |          |
|                        | TextPosition                      |          |
|                        | TextPrefix                        |          |
|                        | TextRotation                      |          |
|                        | TextStyle                         |          |
|                        | TextSuffix                        |          |
|                        | ToleranceDisplay                  |          |
|                        | ToleranceHeightScale              |          |
|                        | ToleranceJustification            |          |
|                        | ToleranceLowerLimit               |          |
|                        | TolerancePrecision                |          |
|                        | ToleranceSuppressLeadingZeros     |          |
|                        | ToleranceSuppressTrailingZeros    |          |
|                        | ToleranceSuppressZeroFeet         |          |
|                        | ToleranceSuppressZeroInches       |          |
|                        | ToleranceUpperLimit               |          |
|                        | TrueColor                         |          |
|                        | UnitsFormat                       |          |
|                        | VerticalTextPosition              |          |
|                        | Visible                           |          |
*** Remarks

Ordinate dimensions display the X or Y UCS coordinate of an object along with a simple leader line. The absolute value of the coordinate is used according to the prevailing standards for ordinate dimensions.


An ordinate dimension measuring the absolute X position of a point tangent to a circle

To change the extension lines of an ordinate dimension, change the Rotation and/or TextPosition properties. The extension lines will be recalculated to fit the new requirements.

To create an ordinate dimension, use the AddDimOrdinate method.
*** Code
#+name:AcadDimOrdinate
#+header: :var m-p=m-p-AcadDimOrdinate
#+header: :var o-i=o-i-AcadDimOrdinate
#+header: :var des=des-AcadDimOrdinate
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDimOrdinate.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDimOrdinate
[[file:AcadDimOrdinate.lisp]]

** DimRadial Object (ActiveX)
#+name: des-AcadDimRadial
| Description                                          |
|------------------------------------------------------|
| A dimension measuring the radius of a circle or arc. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDimRadial
| cl-nm         |
|---------------|
| AcadDimRadial |
**** Object Inheritance
#+name: o-i-AcadDimRadial
| Object        |
| AcadObject    |
| AcadEntity    |
| AcadDimension |
| AcadDimRadial |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddDimRadial
    PaperSpace.AddDimRadial
    Block.AddDimRadial
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDimRadial
| Methods                | Properties                        | Events   |
|------------------------+-----------------------------------+----------|
| ArrayPolar             | AltRoundDistance                  | Modified |
| ArrayRectangular       | AltSuppressLeadingZeros           |          |
| Copy                   | AltSuppressTrailingZeros          |          |
| Delete                 | AltSuppressZeroFeet               |          |
| GetBoundingBox         | AltSuppressZeroInches             |          |
| GetExtensionDictionary | AltTextPrefix                     |          |
| GetXData               | AltTextSuffix                     |          |
| Highlight              | AltTolerancePrecision             |          |
| IntersectWith          | AltToleranceSuppressLeadingZeros  |          |
| Mirror                 | AltToleranceSuppressTrailingZeros |          |
| Mirror3D               | AltToleranceSuppressZeroFeet      |          |
| Move                   | AltToleranceSuppressZeroInches    |          |
| Rotate                 | AltUnits                          |          |
| Rotate3D               | AltUnitsFormat                    |          |
| ScaleEntity            | AltUnitsPrecision                 |          |
| SetXData               | AltUnitsScale                     |          |
| TransformBy            | Application                       |          |
| Update                 | ArrowheadBlock                    |          |
|                        | ArrowheadSize                     |          |
|                        | ArrowheadType                     |          |
|                        | CenterMarkSize                    |          |
|                        | CenterType                        |          |
|                        | DecimalSeparator                  |          |
|                        | DimConstrDesc                     |          |
|                        | DimConstrExpression               |          |
|                        | DimConstrForm                     |          |
|                        | DimConstrName                     |          |
|                        | DimConstrReference                |          |
|                        | DimConstrValue                    |          |
|                        | DimensionLineColor                |          |
|                        | DimensionLinetype                 |          |
|                        | DimensionLineWeight               |          |
|                        | DimLineSuppress                   |          |
|                        | DimTxtDirection                   |          |
|                        | Document                          |          |
|                        | EntityTransparency                |          |
|                        | Fit                               |          |
|                        | ForceLineInside                   |          |
|                        | FractionFormat                    |          |
|                        | Handle                            |          |
|                        | HasExtensionDictionary            |          |
|                        | Hyperlinks                        |          |
|                        | Layer                             |          |
|                        | LeaderLength                      |          |
|                        | LinearScaleFactor                 |          |
|                        | Linetype                          |          |
|                        | LinetypeScale                     |          |
|                        | Lineweight                        |          |
|                        | Material                          |          |
|                        | Measurement                       |          |
|                        | Normal                            |          |
|                        | ObjectID                          |          |
|                        | ObjectName                        |          |
|                        | OwnerID                           |          |
|                        | PlotStyleName                     |          |
|                        | PrimaryUnitsPrecision             |          |
|                        | Rotation                          |          |
|                        | RoundDistance                     |          |
|                        | ScaleFactor                       |          |
|                        | StyleName                         |          |
|                        | SuppressLeadingZeros              |          |
|                        | SuppressTrailingZeros             |          |
|                        | SuppressZeroFeet                  |          |
|                        | SuppressZeroInches                |          |
|                        | TextColor                         |          |
|                        | TextFill                          |          |
|                        | TextFillColor                     |          |
|                        | TextGap                           |          |
|                        | TextHeight                        |          |
|                        | TextInside                        |          |
|                        | TextInsideAlign                   |          |
|                        | TextMovement                      |          |
|                        | TextOutsideAlign                  |          |
|                        | TextOverride                      |          |
|                        | TextPosition                      |          |
|                        | TextPrefix                        |          |
|                        | TextRotation                      |          |
|                        | TextStyle                         |          |
|                        | TextSuffix                        |          |
|                        | ToleranceDisplay                  |          |
|                        | ToleranceHeightScale              |          |
|                        | ToleranceJustification            |          |
|                        | ToleranceLowerLimit               |          |
|                        | TolerancePrecision                |          |
|                        | ToleranceSuppressLeadingZeros     |          |
|                        | ToleranceSuppressTrailingZeros    |          |
|                        | ToleranceSuppressZeroFeet         |          |
|                        | ToleranceSuppressZeroInches       |          |
|                        | ToleranceUpperLimit               |          |
|                        | TrueColor                         |          |
|                        | UnitsFormat                       |          |
|                        | VerticalTextPosition              |          |
|                        | Visible                           |          |
*** Remarks

The position of the text (TextPosition property) determines the location of the dimension line.


Examples of radial dimensions

To create a radial dimension, use the AddDimRadial method.
*** Code
#+name:AcadDimRadial
#+header: :var m-p=m-p-AcadDimRadial
#+header: :var o-i=o-i-AcadDimRadial
#+header: :var des=des-AcadDimRadial
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDimRadial.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDimRadial
[[file:AcadDimRadial.lisp]]

** DimRadialLarge Object (ActiveX)
#+name: des-AcadDimRadialLarge
| Description                                                                    |
|--------------------------------------------------------------------------------|
| A dimension measuring a large radius, also known as a jogged radius dimension. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDimRadialLarge
| cl-nm              |
|--------------------|
| AcadDimRadialLarge |
**** Object Inheritance
#+name: o-i-AcadDimRadialLarge
| Object             |
| AcadObject         |
| AcadEntity         |
| AcadDimension      |
| AcadDimRadialLarge |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddDimRadialLarge
    PaperSpace.AddDimRadialLarge
    Block.AddDimRadialLarge
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDimRadialLarge
| Methods                | Properties                        | Events   |
|------------------------+-----------------------------------+----------|
| ArrayPolar             | AltRoundDistance                  | Modified |
| ArrayRectangular       | AltSuppressLeadingZeros           |          |
| Copy                   | AltSuppressTrailingZeros          |          |
| Delete                 | AltSuppressZeroFeet               |          |
| GetBoundingBox         | AltSuppressZeroInches             |          |
| GetExtensionDictionary | AltTextPrefix                     |          |
| GetXData               | AltTextSuffix                     |          |
| Highlight              | AltTolerancePrecision             |          |
| IntersectWith          | AltToleranceSuppressLeadingZeros  |          |
| Mirror                 | AltToleranceSuppressTrailingZeros |          |
| Mirror3D               | AltToleranceSuppressZeroFeet      |          |
| Move                   | AltToleranceSuppressZeroInches    |          |
| Rotate                 | AltUnits                          |          |
| Rotate3D               | AltUnitsFormat                    |          |
| ScaleEntity            | AltUnitsPrecision                 |          |
| SetXData               | AltUnitsScale                     |          |
| TransformBy            | Application                       |          |
| Update                 | ArrowheadBlock                    |          |
|                        | ArrowheadSize                     |          |
|                        | ArrowheadType                     |          |
|                        | Center                            |          |
|                        | CenterMarkSize                    |          |
|                        | CenterType                        |          |
|                        | ChordPoint                        |          |
|                        | DecimalSeparator                  |          |
|                        | DimensionLineColor                |          |
|                        | DimensionLinetype                 |          |
|                        | DimensionLineWeight               |          |
|                        | DimLineSuppress                   |          |
|                        | DimTxtDirection                   |          |
|                        | Document                          |          |
|                        | EntityTransparency                |          |
|                        | Fit                               |          |
|                        | ForceLineInside                   |          |
|                        | FractionFormat                    |          |
|                        | Handle                            |          |
|                        | HasExtensionDictionary            |          |
|                        | Hyperlinks                        |          |
|                        | JogAngle                          |          |
|                        | JogLocation                       |          |
|                        | Layer                             |          |
|                        | LinearScaleFactor                 |          |
|                        | Linetype                          |          |
|                        | LinetypeScale                     |          |
|                        | Lineweight                        |          |
|                        | Material                          |          |
|                        | Measurement                       |          |
|                        | Normal                            |          |
|                        | ObjectID                          |          |
|                        | ObjectName                        |          |
|                        | OverrideCenter                    |          |
|                        | OwnerID                           |          |
|                        | PlotStyleName                     |          |
|                        | PrimaryUnitsPrecision             |          |
|                        | Rotation                          |          |
|                        | RoundDistance                     |          |
|                        | ScaleFactor                       |          |
|                        | StyleName                         |          |
|                        | SuppressLeadingZeros              |          |
|                        | SuppressTrailingZeros             |          |
|                        | SuppressZeroFeet                  |          |
|                        | SuppressZeroInches                |          |
|                        | TextColor                         |          |
|                        | TextFill                          |          |
|                        | TextFillColor                     |          |
|                        | TextGap                           |          |
|                        | TextHeight                        |          |
|                        | TextInside                        |          |
|                        | TextInsideAlign                   |          |
|                        | TextMovement                      |          |
|                        | TextOutsideAlign                  |          |
|                        | TextOverride                      |          |
|                        | TextPosition                      |          |
|                        | TextPrefix                        |          |
|                        | TextRotation                      |          |
|                        | TextStyle                         |          |
|                        | TextSuffix                        |          |
|                        | ToleranceDisplay                  |          |
|                        | ToleranceHeightScale              |          |
|                        | ToleranceJustification            |          |
|                        | ToleranceLowerLimit               |          |
|                        | TolerancePrecision                |          |
|                        | ToleranceSuppressLeadingZeros     |          |
|                        | ToleranceSuppressTrailingZeros    |          |
|                        | ToleranceSuppressZeroFeet         |          |
|                        | ToleranceSuppressZeroInches       |          |
|                        | ToleranceUpperLimit               |          |
|                        | TrueColor                         |          |
|                        | UnitsFormat                       |          |
|                        | VerticalTextPosition              |          |
|                        | Visible                           |          |
*** Remarks


A jogged radius dimension
*** Code
#+name:AcadDimRadialLarge
#+header: :var m-p=m-p-AcadDimRadialLarge
#+header: :var o-i=o-i-AcadDimRadialLarge
#+header: :var des=des-AcadDimRadialLarge
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDimRadialLarge.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDimRadialLarge
[[file:AcadDimRadialLarge.lisp]]

** DimRotated Object (ActiveX)
#+name: des-AcadDimRotated
| Description                                                                                     |
|-------------------------------------------------------------------------------------------------|
| A dimension that measures the distance between two points and is displayed at a given rotation. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDimRotated
| cl-nm          |
|----------------|
| AcadDimRotated |
**** Object Inheritance
#+name: o-i-AcadDimRotated
| Object         |
| AcadObject     |
| AcadEntity     |
| AcadDimension  |
| AcadDimRotated |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddDimRotated
    PaperSpace.AddDimRotated
    Block.AddDimRotated
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDimRotated
| Methods                | Properties                        | Events   |
|------------------------+-----------------------------------+----------|
| ArrayPolar             | AltRoundDistance                  | Modified |
| ArrayRectangular       | AltSubUnitsFactor                 |          |
| Copy                   | AltSubUnitsSuffix                 |          |
| Delete                 | AltSuppressLeadingZeros           |          |
| GetBoundingBox         | AltSuppressTrailingZeros          |          |
| GetExtensionDictionary | AltSuppressZeroFeet               |          |
| GetXData               | AltSuppressZeroInches             |          |
| Highlight              | AltTextPrefix                     |          |
| IntersectWith          | AltTextSuffix                     |          |
| Mirror                 | AltTolerancePrecision             |          |
| Mirror3D               | AltToleranceSuppressLeadingZeros  |          |
| Move                   | AltToleranceSuppressTrailingZeros |          |
| Rotate                 | AltToleranceSuppressZeroFeet      |          |
| Rotate3D               | AltToleranceSuppressZeroInches    |          |
| ScaleEntity            | AltUnits                          |          |
| SetXData               | AltUnitsFormat                    |          |
| TransformBy            | AltUnitsPrecision                 |          |
| Update                 | AltUnitsScale                     |          |
|                        | Application                       |          |
|                        | Arrowhead1Block                   |          |
|                        | Arrowhead1Type                    |          |
|                        | Arrowhead2Block                   |          |
|                        | Arrowhead2Type                    |          |
|                        | ArrowheadSize                     |          |
|                        | DecimalSeparator                  |          |
|                        | DimConstrDesc                     |          |
|                        | DimConstrExpression               |          |
|                        | DimConstrForm                     |          |
|                        | DimConstrName                     |          |
|                        | DimConstrReference                |          |
|                        | DimConstrValue                    |          |
|                        | DimensionLineColor                |          |
|                        | DimensionLineExtend               |          |
|                        | DimensionLinetype                 |          |
|                        | DimensionLineWeight               |          |
|                        | DimLine1Suppress                  |          |
|                        | DimLine2Suppress                  |          |
|                        | DimLineInside                     |          |
|                        | DimTxtDirection                   |          |
|                        | Document                          |          |
|                        | EntityTransparency                |          |
|                        | ExtensionLineColor                |          |
|                        | ExtensionLineExtend               |          |
|                        | ExtensionLineOffset               |          |
|                        | ExtensionLineWeight               |          |
|                        | ExtLine1Linetype                  |          |
|                        | ExtLine1Suppress                  |          |
|                        | ExtLine2Linetype                  |          |
|                        | ExtLine2Suppress                  |          |
|                        | ExtLineFixedLen                   |          |
|                        | ExtLineFixedLenSuppress           |          |
|                        | Fit                               |          |
|                        | ForceLineInside                   |          |
|                        | FractionFormat                    |          |
|                        | Handle                            |          |
|                        | HasExtensionDictionary            |          |
|                        | HorizontalTextPosition            |          |
|                        | Hyperlinks                        |          |
|                        | Layer                             |          |
|                        | LinearScaleFactor                 |          |
|                        | Linetype                          |          |
|                        | LinetypeScale                     |          |
|                        | Lineweight                        |          |
|                        | Material                          |          |
|                        | Measurement                       |          |
|                        | Normal                            |          |
|                        | ObjectID                          |          |
|                        | ObjectName                        |          |
|                        | OwnerID                           |          |
|                        | PlotStyleName                     |          |
|                        | PrimaryUnitsPrecision             |          |
|                        | Rotation                          |          |
|                        | RoundDistance                     |          |
|                        | ScaleFactor                       |          |
|                        | StyleName                         |          |
|                        | SubUnitsFactor                    |          |
|                        | SubUnitsSuffix                    |          |
|                        | SuppressLeadingZeros              |          |
|                        | SuppressTrailingZeros             |          |
|                        | SuppressZeroFeet                  |          |
|                        | SuppressZeroInches                |          |
|                        | TextColor                         |          |
|                        | TextFill                          |          |
|                        | TextFillColor                     |          |
|                        | TextGap                           |          |
|                        | TextHeight                        |          |
|                        | TextInside                        |          |
|                        | TextInsideAlign                   |          |
|                        | TextMovement                      |          |
|                        | TextOutsideAlign                  |          |
|                        | TextOverride                      |          |
|                        | TextPosition                      |          |
|                        | TextPrefix                        |          |
|                        | TextRotation                      |          |
|                        | TextStyle                         |          |
|                        | TextSuffix                        |          |
|                        | ToleranceDisplay                  |          |
|                        | ToleranceHeightScale              |          |
|                        | ToleranceJustification            |          |
|                        | ToleranceLowerLimit               |          |
|                        | TolerancePrecision                |          |
|                        | ToleranceSuppressLeadingZeros     |          |
|                        | ToleranceSuppressTrailingZeros    |          |
|                        | ToleranceSuppressZeroFeet         |          |
|                        | ToleranceSuppressZeroInches       |          |
|                        | ToleranceUpperLimit               |          |
|                        | TrueColor                         |          |
|                        | UnitsFormat                       |          |
|                        | VerticalTextPosition              |          |
|                        | Visible                           |          |
*** Remarks


A linear dimension created at 45 degrees

To change the extension lines of a rotated dimension, change the Rotation and/or TextPosition properties. The extension lines will be recalculated to fit the new requirements.

To create a rotated dimension, use the AddDimRotated method.
*** Code
#+name:AcadDimRotated
#+header: :var m-p=m-p-AcadDimRotated
#+header: :var o-i=o-i-AcadDimRotated
#+header: :var des=des-AcadDimRotated
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDimRotated.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDimRotated
[[file:AcadDimRotated.lisp]]

** Ellipse Object (ActiveX)
#+name: des-AcadEllipse
| Description                        |
|------------------------------------|
| An elliptical arc or full ellipse. |

Supported Platforms: Windows only
*** Class Information

**** Class Name
#+name: cl-AcadEllipse
| cl-nm       |
|-------------|
| AcadEllipse |
**** Object Inheritance
#+name: o-i-AcadEllipse
| Object      |
| AcadObject  |
| AcadEntity  |
| AcadEllipse |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddEllipse
    PaperSpace.AddEllipse
    Block.AddEllipse
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadEllipse
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Area                   |          |
| Copy                   | Center                 |          |
| Delete                 | Document               |          |
| GetBoundingBox         | EndAngle               |          |
| GetExtensionDictionary | EndParameter           |          |
| GetXData               | EndPoint               |          |
| Highlight              | EntityTransparency     |          |
| IntersectWith          | Handle                 |          |
| Mirror                 | HasExtensionDictionary |          |
| Mirror3D               | Hyperlinks             |          |
| Move                   | Layer                  |          |
| Offset                 | Linetype               |          |
| Rotate                 | LinetypeScale          |          |
| Rotate3D               | Lineweight             |          |
| ScaleEntity            | MajorAxis              |          |
| SetXData               | MajorRadius            |          |
| TransformBy            | Material               |          |
| Update                 | MinorAxis              |          |
|                        | MinorRadius            |          |
|                        | Normal                 |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | RadiusRatio            |          |
|                        | StartAngle             |          |
|                        | StartParameter         |          |
|                        | StartPoint             |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
*** Remarks

The ellipse may be closed or open (elliptical arc). This object represents a true ellipse, not a polyline approximation.

To create an ellipse, use the AddEllipse method.

*** Code
#+name:AcadEllipse
#+header: :var m-p=m-p-AcadEllipse
#+header: :var o-i=o-i-AcadEllipse
#+header: :var des=des-AcadEllipse
#+header: :var code=code
#+header: :results output file
#+header: :file AcadEllipse.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadEllipse
[[file:AcadEllipse.lisp]]

** ExternalReference Object (ActiveX)
#+name: des-AcadExternalReference
| Description                                                   |
|---------------------------------------------------------------|
| An instance of an external reference inserted into a drawing. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadExternalReference
| cl-nm                 |
|-----------------------|
| AcadExternalReference |
**** Object Inheritance
#+name: o-i-AcadExternalReference
| Object                |
| AcadObject            |
| AcadEntity            |
| AcadBlockReference    |
| AcadExternalReference |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AttachExternalReference
    PaperSpace.AttachExternalReference
    Block.AttachExternalReference
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadExternalReference
| Methods                   | Properties             | Events   |
|---------------------------+------------------------+----------|
| ArrayPolar                | Application            | Modified |
| ArrayRectangular          | Document               |          |
| ConvertToAnonymousBlock   | EffectiveName          |          |
| ConvertToStaticBlock      | EntityTransparency     |          |
| Copy                      | Handle                 |          |
| Delete                    | HasAttributes          |          |
| Explode                   | HasExtensionDictionary |          |
| GetAttributes             | Hyperlinks             |          |
| GetBoundingBox            | InsertionPoint         |          |
| GetConstantAttributes     | InsUnits               |          |
| GetDynamicBlockProperties | InsUnitsFactor         |          |
| GetExtensionDictionary    | IsDynamicBlock         |          |
| GetXData                  | Layer                  |          |
| Highlight                 | LayerPropertyOverrides |          |
| IntersectWith             | Linetype               |          |
| Mirror                    | LinetypeScale          |          |
| Mirror3D                  | Lineweight             |          |
| Move                      | Material               |          |
| ResetBlock                | Name                   |          |
| Rotate                    | Normal                 |          |
| Rotate3D                  | ObjectID               |          |
| ScaleEntity               | ObjectName             |          |
| SetXData                  | OwnerID                |          |
| TransformBy               | Path                   |          |
| Update                    | PlotStyleName          |          |
|                           | Rotation               |          |
|                           | TrueColor              |          |
|                           | Visible                |          |
|                           | XEffectiveScaleFactor  |          |
|                           | XScaleFactor           |          |
|                           | YEffectiveScaleFactor  |          |
|                           | YScaleFactor           |          |
|                           | ZEffectiveScaleFactor  |          |
|                           | ZScaleFactor           |          |

*** Remarks

An external reference (xref) links another drawing to the current drawing. When you insert a drawing as a block, the block definition and all the associated geometry is stored in the current drawing database. It is not updated if the original drawing changes. When you insert a drawing as an xref, however, it is updated when the original drawing changes. A drawing containing xrefs always reflects the most current edits of each externally referenced file.

Like a block reference, AutoCAD displays an xref in the current drawing as a single object. However, an xref does not significantly increase the file size of the current drawing and cannot be exploded. As with block references, you can nest xrefs that are attached to your drawing.
*** Code
#+name:AcadExternalReference
#+header: :var m-p=m-p-AcadExternalReference
#+header: :var o-i=o-i-AcadExternalReference
#+header: :var des=des-AcadExternalReference
#+header: :var code=code
#+header: :results output file
#+header: :file AcadExternalReference.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadExternalReference
[[file:AcadExternalReference.lisp]]

** GeomapImage Object (ActiveX)
#+name: des-AcadGeomapImage
| Description                                                           |
|-----------------------------------------------------------------------|
| An embedded raster image which is captured from a portion of LiveMap. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadGeomapImage
| cl-nm           |
|-----------------|
| AcadGeomapImage |
**** Object Inheritance
#+name: o-i-AcadGeomapImage
| Object          |
| AcadObject      |
| AcadEntity      |
| AcadRasterImage |
| AcadGeomapImage |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadGeomapImage
| Methods                | Properties             | Events |
|------------------------+------------------------+--------|
| ArrayPolar             | Application            | None   |
| ArrayRectangular       | Brightness             |        |
| ClipBoundary           | ClippingEnabled        |        |
| Copy                   | Contrast               |        |
| Delete                 | Document               |        |
| GetBoundingBox         | EntityTransparency     |        |
| GetExtensionDictionary | Fade                   |        |
| GetXData               | GeoImageBrightness     |        |
| Highlight              | GeoImageContrast       |        |
| IntersectWith          | GeoImageFade           |        |
| Mirror                 | GeoImageHeight         |        |
| Mirror3D               | GeoImagePosition       |        |
| Move                   | GeoImageWidth          |        |
| Rotate                 | Handle                 |        |
| Rotate3D               | HasExtensionDictionary |        |
| ScaleEntity            | Height                 |        |
| SetXData               | Hyperlinks             |        |
| TransformBy            | ImageFile              |        |
| Update                 | ImageHeight            |        |
|                        | ImageVisibility        |        |
|                        | ImageWidth             |        |
|                        | Layer                  |        |
|                        | Linetype               |        |
|                        | LinetypeScale          |        |
|                        | Lineweight             |        |
|                        | Material               |        |
|                        | Name                   |        |
|                        | ObjectID               |        |
|                        | ObjectName             |        |
|                        | Origin                 |        |
|                        | OwnerID                |        |
|                        | PlotStyleName          |        |
|                        | Rotation               |        |
|                        | ScaleFactor            |        |
|                        | ShowRotation           |        |
|                        | Transparency           |        |
|                        | TrueColor              |        |
|                        | Visible                |        |
|                        | Width                  |        |
*** Remarks

It lets you manipulate the properties of an embedded image that is captured from a LiveMap. You cannot create a GeomapImage entity via ActiveX.

*** Code
#+name:AcadGeomapImage
#+header: :var m-p=m-p-AcadGeomapImage
#+header: :var o-i=o-i-AcadGeomapImage
#+header: :var des=des-AcadGeomapImage
#+header: :var code=code
#+header: :results output file
#+header: :file AcadGeomapImage.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadGeomapImage
[[file:AcadGeomapImage.lisp]]

** GeoPositionMarker Object (ActiveX)
#+name: des-AcadGeoPositionMarker
| Description                                               |
|-----------------------------------------------------------|
| A geographical location aware marker object with a label. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadGeoPositionMarker
| cl-nm                 |
|-----------------------|
| AcadGeoPositionMarker |
**** Object Inheritance
#+name: o-i-AcadGeoPositionMarker
| Object                |
| AcadObject            |
| AcadEntity            |
| AcadGeoPositionMarker |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadGeoPositionMarker
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Altitude               | Modified |
| ArrayRectangular       | Application            |          |
| Copy                   | BackgroundFill         |          |
| Delete                 | Document               |          |
| GetBoundingBox         | DrawingDirection       |          |
| GetExtensionDictionary | EntityTransparency     |          |
| GetXData               | Handle                 |          |
| Highlight              | HasExtensionDictionary |          |
| IntersectWith          | Height                 |          |
| Mirror                 | LandingGap             |          |
| Mirror3D               | Latitude               |          |
| Move                   | Layer                  |          |
| Rotate                 | LineSpacingDistance    |          |
| Rotate3D               | LineSpacingFactor      |          |
| ScaleEntity            | LineSpacingStyle       |          |
| SetXData               | Linetype               |          |
| TransformBy            | LinetypeScale          |          |
| Update                 | Lineweight             |          |
|                        | Longitude              |          |
|                        | Material               |          |
|                        | Notes                  |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | Position               |          |
|                        | Radius                 |          |
|                        | Rotation               |          |
|                        | TextFrameDisplay       |          |
|                        | TextJustify            |          |
|                        | TextString             |          |
|                        | TextStyleName          |          |
|                        | TextWidth              |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
*** Remarks

It lets you manipulate the properties of a geographically positioned marker. You cannot create a GeoPositionMarker entity via ActiveX.
*** Code
#+name:AcadGeoPositionMarker
#+header: :var m-p=m-p-AcadGeoPositionMarker
#+header: :var o-i=o-i-AcadGeoPositionMarker
#+header: :var des=des-AcadGeoPositionMarker
#+header: :var code=code
#+header: :results output file
#+header: :file AcadGeoPositionMarker.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadGeoPositionMarker
[[file:AcadGeoPositionMarker.lisp]]

** Hatch Object (ActiveX)
#+name: des-AcadHatch
| Description                                    |
|------------------------------------------------|
| An area fill consisting of a pattern of lines. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadHatch
| cl-nm     |
|-----------|
| AcadHatch |
**** Object Inheritance
#+name: o-i-AcadHatch
| Object     |
| AcadObject |
| AcadEntity |
| AcadHatch  |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddHatch
    PaperSpace.AddHatch
    Block.AddHatch
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadHatch
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| AppendInnerLoop        | Application            | Modified |
| AppendOuterLoop        | Area                   |          |
| ArrayPolar             | AssociativeHatch       |          |
| ArrayRectangular       | BackgroundColor        |          |
| Copy                   | Document               |          |
| Delete                 | Elevation              |          |
| Evaluate               | EntityTransparency     |          |
| GetBoundingBox         | GradientAngle          |          |
| GetExtensionDictionary | GradientCentered       |          |
| GetLoopAt              | GradientColor1         |          |
| GetXData               | GradientColor2         |          |
| Highlight              | GradientName           |          |
| InsertLoopAt           | Handle                 |          |
| IntersectWith          | HasExtensionDictionary |          |
| Mirror                 | HatchObjectType        |          |
| Mirror3D               | HatchStyle             |          |
| Move                   | Hyperlinks             |          |
| Rotate                 | ISOPenWidth            |          |
| Rotate3D               | Layer                  |          |
| ScaleEntity            | Linetype               |          |
| SetPattern             | LinetypeScale          |          |
| SetXData               | Lineweight             |          |
| TransformBy            | Material               |          |
| Update                 | Normal                 |          |
|                        | NumberOfLoops          |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | Origin                 |          |
|                        | OwnerID                |          |
|                        | PatternAngle           |          |
|                        | PatternDouble          |          |
|                        | PatternName            |          |
|                        | PatternScale           |          |
|                        | PatternSpace           |          |
|                        | PatternType            |          |
|                        | PlotStyleName          |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
*** Remarks

To create a hatch, first create the Hatch object using the AddHatch method. After the Hatch object has been created, add the outer loop using the AppendOuterLoop method. The outer loop must be closed and must be created before any inner loops can be added. After a valid outer loop has been created, add any inner loops, one at a time, using AppendInnerLoop method.
Note: Once the Hatch object has been created, you must add the outer loop to the Hatch object for it to become a valid AutoCAD object. If you attempt any operation other than calling the AppendOuterLoop method, AutoCAD will enter an unpredictable state.
*** Code
#+name:AcadHatch
#+header: :var m-p=m-p-AcadHatch
#+header: :var o-i=o-i-AcadHatch
#+header: :var des=des-AcadHatch
#+header: :var code=code
#+header: :results output file
#+header: :file AcadHatch.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadHatch
[[file:AcadHatch.lisp]]

** Helix Object (ActiveX)
#+name: des-AcadHelix
| Description |
|-------------|
| A helix.    |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadHelix
| cl-nm     |
|-----------|
| AcadHelix |
**** Object Inheritance
#+name: o-i-AcadHelix
| Object     |
| AcadObject |
| AcadEntity |
| AcadHelix  |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadHelix
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | BaseRadius             |          |
| Copy                   | Constrain              |          |
| Delete                 | Document               |          |
| GetBoundingBox         | EntityTransparency     |          |
| GetExtensionDictionary | Handle                 |          |
| GetXData               | HasExtensionDictionary |          |
| Highlight              | Height                 |          |
| IntersectWith          | Hyperlinks             |          |
| Mirror                 | Layer                  |          |
| Mirror3D               | Linetype               |          |
| Move                   | LinetypeScale          |          |
| Rotate                 | Lineweight             |          |
| Rotate3D               | Material               |          |
| ScaleEntity            | ObjectID               |          |
| SetXData               | ObjectName             |          |
| TransformBy            | OwnerID                |          |
| Update                 | PlotStyleName          |          |
|                        | Position               |          |
|                        | TopRadius              |          |
|                        | TotalLength            |          |
|                        | TrueColor              |          |
|                        | TurnHeight             |          |
|                        | Turns                  |          |
|                        | TurnSlope              |          |
|                        | Twist                  |          |
|                        | Visible                |          |
*** Remarks

The Helix object encapsulates a Spline object that helps it maintain its basic shape. You can use ActiveX to query and edit Helix entities in an AutoCAD drawing. However, you cannot create a Helix object with ActiveX.
*** Code
#+name:AcadHelix
#+header: :var m-p=m-p-AcadHelix
#+header: :var o-i=o-i-AcadHelix
#+header: :var des=des-AcadHelix
#+header: :var code=code
#+header: :results output file
#+header: :file AcadHelix.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadHelix
[[file:AcadHelix.lisp]]

** Leader Object (ActiveX)
#+name: des-AcadLeader
| Description                                                                       |
|-----------------------------------------------------------------------------------|
| An object composed of an arrowhead attached to splines or straight line segments. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadLeader
| cl-nm      |
|------------|
| AcadLeader |
**** Object Inheritance
#+name: o-i-AcadLeader
| Object     |
| AcadObject |
| AcadEntity |
| AcadLeader |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddLeader
    PaperSpace.AddLeader
    Block.AddLeader
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadLeader
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Annotation             | Modified |
| ArrayRectangular       | Application            |          |
| Copy                   | ArrowheadBlock         |          |
| Delete                 | ArrowheadSize          |          |
| Evaluate               | ArrowheadType          |          |
| GetBoundingBox         | Coordinate             |          |
| GetExtensionDictionary | Coordinates            |          |
| GetXData               | DimensionLineColor     |          |
| Highlight              | DimensionLineWeight    |          |
| IntersectWith          | Document               |          |
| Mirror                 | EntityTransparency     |          |
| Mirror3D               | Handle                 |          |
| Move                   | HasExtensionDictionary |          |
| Rotate                 | Hyperlinks             |          |
| Rotate3D               | Layer                  |          |
| ScaleEntity            | Linetype               |          |
| SetXData               | LinetypeScale          |          |
| TransformBy            | Lineweight             |          |
| Update                 | Material               |          |
|                        | Normal                 |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | ScaleFactor            |          |
|                        | StyleName              |          |
|                        | TextGap                |          |
|                        | TrueColor              |          |
|                        | Type                   |          |
|                        | VerticalTextPosition   |          |
|                        | Visible                |          |
*** Remarks

A leader line is an object that can be composed of an arrowhead attached to splines or straight line segments. In some cases, a short horizontal line, called a hook line, dogleg, or landing, connects text and feature control frames to the leader line. The Leader object specifies a complex leader line. In contrast, the Leader property of the DimDiametric and DimRadial objects specifies a simple leader line.

Any annotation attached to the end of the leader line is associated with the Leader object and can be found using the Annotation property.

You can use various dimensioning system variables to format the leader line, such as placing text above the hook line with the DIMTAD system variable. The color of the leader line and arrowhead is controlled by the TrueColor property, or by the DIMCLRD system variable. The arrowhead types are specified by the DIMBLK, or DIMBLK1 system variables when the arrowheads vary. The arrowhead and hook line length is determined by the DIMASZ system variable. The scale is set by the DIMSCALE system variable, and the basic dimension notation is set by the DIMGAP system variable.

Examples of AutoCAD leader objects

To create a leader, use the AddLeader method.
*** Code
#+name:AcadLeader
#+header: :var m-p=m-p-AcadLeader
#+header: :var o-i=o-i-AcadLeader
#+header: :var des=des-AcadLeader
#+header: :var code=code
#+header: :results output file
#+header: :file AcadLeader.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadLeader
[[file:AcadLeader.lisp]]

** LWPolyline Object (ActiveX)
#+name: des-AcadLWPolyline
| Description                                                        |
|--------------------------------------------------------------------|
| A 2D line with adjustable width composed of line and arc segments. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadLWPolyline
| cl-nm          |
|----------------|
| AcadLWPolyline |
**** Object Inheritance
#+name: o-i-AcadLWPolyline
| Object         |
| AcadObject     |
| AcadEntity     |
| AcadLWPolyline |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddLightweightPolyline
    PaperSpace.AddLightweightPolyline
    Block.AddLightweightPolyline
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadLWPolyline
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| AddVertex              | Application            | Modified |
| ArrayPolar             | Area                   |          |
| ArrayRectangular       | Closed                 |          |
| Copy                   | ConstantWidth          |          |
| Delete                 | Coordinate             |          |
| Explode                | Coordinates            |          |
| GetBoundingBox         | Document               |          |
| GetBulge               | Elevation              |          |
| GetExtensionDictionary | EntityTransparency     |          |
| GetWidth               | Handle                 |          |
| GetXData               | HasExtensionDictionary |          |
| Highlight              | Hyperlinks             |          |
| IntersectWith          | Layer                  |          |
| Mirror                 | Length                 |          |
| Mirror3D               | Linetype               |          |
| Move                   | LinetypeGeneration     |          |
| Offset                 | LinetypeScale          |          |
| Rotate                 | Lineweight             |          |
| Rotate3D               | Material               |          |
| ScaleEntity            | Normal                 |          |
| SetBulge               | ObjectID               |          |
| SetWidth               | ObjectName             |          |
| SetXData               | OwnerID                |          |
| TransformBy            | PlotStyleName          |          |
| Update                 | Thickness              |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
*** Remarks

To create a lightweight polyline, use the AddLightweightPolyline method.
*** Code
#+name:AcadLWPolyline
#+header: :var m-p=m-p-AcadLWPolyline
#+header: :var o-i=o-i-AcadLWPolyline
#+header: :var des=des-AcadLWPolyline
#+header: :var code=code
#+header: :results output file
#+header: :file AcadLWPolyline.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadLWPolyline
[[file:AcadLWPolyline.lisp]]

** MInsertBlock Object (ActiveX)
#+name: des-AcadMInsertBlock
| Description                              |
|------------------------------------------|
| A rectangular array of block references. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadMInsertBlock
| cl-nm            |
|------------------|
| AcadMInsertBlock |
**** Object Inheritance
#+name: o-i-AcadMInsertBlock
| Object             |
| AcadObject         |
| AcadEntity         |
| AcadBlockReference |
| AcadMInsertBlock   |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddMInsertBlock
    PaperSpace.AddMInsertBlock
    Block.AddMInsertBlock 
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadMInsertBlock
| Methods                   | Properties             | Events   |
|---------------------------+------------------------+----------|
| ArrayPolar                | Application            | Modified |
| ArrayRectangular          | Columns                |          |
| ConvertToAnonymousBlock   | ColumnSpacing          |          |
| ConvertToStaticBlock      | Document               |          |
| Copy                      | EffectiveName          |          |
| Delete                    | EntityTransparency     |          |
| Explode                   | Handle                 |          |
| GetAttributes             | HasAttributes          |          |
| GetBoundingBox            | HasExtensionDictionary |          |
| GetConstantAttributes     | Hyperlinks             |          |
| GetDynamicBlockProperties | InsertionPoint         |          |
| GetExtensionDictionary    | InsUnits               |          |
| GetXData                  | InsUnitsFactor         |          |
| Highlight                 | IsDynamicBlock         |          |
| IntersectWith             | Layer                  |          |
| Mirror                    | Linetype               |          |
| Mirror3D                  | LinetypeScale          |          |
| Move                      | Lineweight             |          |
| ResetBlock                | Material               |          |
| Rotate                    | Name                   |          |
| Rotate3D                  | Normal                 |          |
| ScaleEntity               | ObjectID               |          |
| SetXData                  | ObjectName             |          |
| TransformBy               | OwnerID                |          |
| Update                    | PlotStyleName          |          |
|                           | Rotation               |          |
|                           | Rows                   |          |
|                           | RowSpacing             |          |
|                           | TrueColor              |          |
|                           | Visible                |          |
|                           | XEffectiveScaleFactor  |          |
|                           | XScaleFactor           |          |
|                           | YEffectiveScaleFactor  |          |
|                           | YScaleFactor           |          |
|                           | ZEffectiveScaleFactor  |          |
|                           | ZScaleFactor           |          |
*** Remarks

To add an MInsertBlock to your drawing, use the AddMInsertBlock method.


Original block


Array of inserted blocks
*** Code
#+name:AcadMInsertBlock
#+header: :var m-p=m-p-AcadMInsertBlock
#+header: :var o-i=o-i-AcadMInsertBlock
#+header: :var des=des-AcadMInsertBlock
#+header: :var code=code
#+header: :results output file
#+header: :file AcadMInsertBlock.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadMInsertBlock
[[file:AcadMInsertBlock.lisp]]

** MLeader Object (ActiveX)
#+name: des-AcadMLeader
| Description                                                                                |
|--------------------------------------------------------------------------------------------|
| An object composed of an arrowhead attached to multiple splines or straight line segments. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadMLeader
| cl-nm       |
|-------------|
| AcadMLeader |
**** Object Inheritance
#+name: o-i-AcadMLeader
| Object      |
| AcadObject  |
| AcadEntity  |
| AcadMLeader |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddMLeader
    PaperSpace.AddMLeader
    Block.AddMLeader
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadMLeader
| Methods                | Properties               | Events   |
|------------------------+--------------------------+----------|
| AddLeader              | Application              | Modified |
| AddLeaderLine          | ArrowheadBlock           |          |
| AddLeaderLineEx        | ArrowheadSize            |          |
| ArrayPolar             | ArrowheadType            |          |
| ArrayRectangular       | BlockConnectionType      |          |
| Copy                   | BlockScale               |          |
| Delete                 | ContentBlockName         |          |
| Evaluate               | ContentBlockType         |          |
| GetBlockAttributeValue | ContentType              |          |
| GetBoundingBox         | Document                 |          |
| GetDoglegDirection     | DogLegged                |          |
| GetExtensionDictionary | DoglegLength             |          |
| GetLeaderIndex         | EntityTransparency       |          |
| GetLeaderLineIndexes   | Handle                   |          |
| GetLeaderLineVertices  | HasExtensionDictionary   |          |
| GetVertexCount         | Hyperlinks               |          |
| GetXData               | LandingGap               |          |
| Highlight              | Layer                    |          |
| IntersectWith          | LeaderCount              |          |
| Mirror                 | LeaderLineColor          |          |
| Mirror3D               | LeaderLineType           |          |
| Move                   | LeaderLineWeight         |          |
| RemoveLeader           | LeaderType               |          |
| RemoveLeaderLine       | Linetype                 |          |
| Rotate                 | LinetypeScale            |          |
| Rotate3D               | Lineweight               |          |
| ScaleEntity            | Material                 |          |
| SetBlockAttributeValue | Normal                   |          |
| SetDoglegDirection     | ObjectID                 |          |
| SetLeaderLineVertices  | ObjectName               |          |
| SetXData               | OwnerID                  |          |
| TransformBy            | PlotStyleName            |          |
| Update                 | ScaleFactor              |          |
|                        | StyleName                |          |
|                        | TextAttachmentDirection  |          |
|                        | TextBackgroundFill       |          |
|                        | TextBottomAttachmentType |          |
|                        | TextDirection            |          |
|                        | TextFrameDisplay         |          |
|                        | TextHeight               |          |
|                        | TextJustify              |          |
|                        | TextLeftAttachmentType   |          |
|                        | TextLineSpacingDistance  |          |
|                        | TextLineSpacingFactor    |          |
|                        | TextLineSpacingStyle     |          |
|                        | TextRightAttachmentType  |          |
|                        | TextRotation             |          |
|                        | TextString               |          |
|                        | TextStyleName            |          |
|                        | TextTopAttachmentType    |          |
|                        | TextWidth                |          |
|                        | TrueColor                |          |
|                        | Type                     |          |
|                        | Visible                  |          |
*** Remarks

A multileader line is an object that can be composed of an arrowhead attached to multiple splines or straight line segments. In some cases, a short horizontal line, called a hook line, dogleg, or landing, connects text and feature control frames to the multileader line. The MLeader object specifies a complex leader line. In contrast, the MLeader property of the DimDiametric and DimRadial objects specifies a simple leader line.

Any annotation attached to the end of the leader line is associated with the MLeader object and can be found using the Annotation property.

To create an multileader, use the AddMLeader method.
*** Code
#+name:AcadMLeader
#+header: :var m-p=m-p-AcadMLeader
#+header: :var o-i=o-i-AcadMLeader
#+header: :var des=des-AcadMLeader
#+header: :var code=code
#+header: :results output file
#+header: :file AcadMLeader.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadMLeader
[[file:AcadMLeader.lisp]]

** MLine Object (ActiveX)
#+name: des-AcadMLine
| Description              |
|--------------------------|
| Multiple parallel lines. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadMLine
| cl-nm     |
|-----------|
| AcadMLine |
**** Object Inheritance
#+name: o-i-AcadMLine
| Object     |
| AcadObject |
| AcadEntity |
| AcadMLine  |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddMLine
    PaperSpace.AddMLine
    Block.AddMLine
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadMLine
| Methods                | Properties             | Events  |
|------------------------+------------------------+---------|
| ArrayPolar             | Application            | Modifed |
| ArrayRectangular       | Coordinates            |         |
| Copy                   | Document               |         |
| Delete                 | EntityTransparency     |         |
| GetBoundingBox         | Handle                 |         |
| GetExtensionDictionary | HasExtensionDictionary |         |
| GetXData               | Hyperlinks             |         |
| Highlight              | Justification          |         |
| IntersectWith          | Layer                  |         |
| Mirror                 | Linetype               |         |
| Mirror3D               | LinetypeScale          |         |
| Move                   | Lineweight             |         |
| Rotate                 | Material               |         |
| Rotate3D               | MLineScale             |         |
| ScaleEntity            | ObjectID               |         |
| SetXData               | ObjectName             |         |
| TransformBy            | OwnerID                |         |
| Update                 | PlotStyleName          |         |
|                        | StyleName              |         |
|                        | TrueColor              |         |
|                        | Visible                |         |
*** Remarks

MLine objects can be comprised of up to 16 lines.

To add an MLine to your drawing, use the AddMLine method.
*** Code
#+name:AcadMLine
#+header: :var m-p=m-p-AcadMLine
#+header: :var o-i=o-i-AcadMLine
#+header: :var des=des-AcadMLine
#+header: :var code=code
#+header: :results output file
#+header: :file AcadMLine.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadMLine
[[file:AcadMLine.lisp]]

** MText Object (ActiveX)
#+name: des-AcadMtext
| Description                                                                          |
|--------------------------------------------------------------------------------------|
| A paragraph of alphanumeric characters that fits within a nonprinting text boundary. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadMtext
| cl-nm     |
|-----------|
| AcadMtext |
**** Object Inheritance
#+name: o-i-AcadMtext
| Object     |
| AcadObject |
| AcadEntity |
| AcadMtext  |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddMText
    PaperSpace.AddMText
    Block.AddMText
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadMtext
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | AttachmentPoint        |          |
| Copy                   | BackgroundFill         |          |
| Delete                 | Document               |          |
| FieldCode              | DrawingDirection       |          |
| GetBoundingBox         | EntityTransparency     |          |
| GetExtensionDictionary | Handle                 |          |
| GetXData               | HasExtensionDictionary |          |
| Highlight              | Height                 |          |
| IntersectWith          | Hyperlinks             |          |
| Mirror                 | InsertionPoint         |          |
| Mirror3D               | Layer                  |          |
| Move                   | LineSpacingDistance    |          |
| Rotate                 | LineSpacingFactor      |          |
| Rotate3D               | LineSpacingStyle       |          |
| ScaleEntity            | Linetype               |          |
| SetXData               | LinetypeScale          |          |
| TransformBy            | Lineweight             |          |
| Update                 | Material               |          |
|                        | Normal                 |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | Rotation               |          |
|                        | StyleName              |          |
|                        | TextString             |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
|                        | Width                  |          |
*** Remarks

You define the text boundary, which specifies the width and alignment of the paragraph. Each MText object is a single object, regardless of the number of lines it contains. The text boundary, although not plotted or printed, remains part of the object's framework.

MText objects use word wrap to break long lines into paragraphs. AutoCAD automatically breaks lines at the edge of the text boundary, as specified by the Width property.

Note that RTF text is not recognized. Text from other programs with embedded formatting will lose formatting when imported into an multiline text paragraph.

To create an MText object use the AddMText method.
*** Code
#+name:AcadMtext
#+header: :var m-p=m-p-AcadMtext
#+header: :var o-i=o-i-AcadMtext
#+header: :var des=des-AcadMtext
#+header: :var code=code
#+header: :results output file
#+header: :file AcadMtext.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadMtext
[[file:AcadMtext.lisp]]

** OLE Object (ActiveX)
#+name: des-AcadOle
| Description            |
|------------------------|
| An AutoCAD OLE object. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadOle
| cl-nm   |
|---------|
| AcadOle |
**** Object Inheritance
#+name: o-i-AcadOle
| Object     |
| AcadObject |
| AcadEntity |
| AcadOle    |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadOle
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Document               |          |
| Copy                   | EntityTransparency     |          |
| Delete                 | Handle                 |          |
| GetBoundingBox         | HasExtensionDictionary |          |
| GetExtensionDictionary | Height                 |          |
| GetXData               | Hyperlinks             |          |
| Highlight              | InsertionPoint         |          |
| IntersectWith          | Layer                  |          |
| Mirror                 | Linetype               |          |
| Mirror3D               | LinetypeScale          |          |
| Move                   | Lineweight             |          |
| Rotate                 | LockAspectRatio        |          |
| Rotate3D               | Material               |          |
| ScaleEntity            | ObjectID               |          |
| SetXData               | ObjectName             |          |
| TransformBy            | OleItemType            |          |
| Update                 | OlePlotQuality         |          |
|                        | OleSourceApp           |          |
|                        | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | Rotation               |          |
|                        | ScaleHeight            |          |
|                        | ScaleWidth             |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
|                        | Width                  |          |
*** Remarks

#+BEGIN_SRC The OLE object allows you to use VBA to insert information from another application into AutoCAD.
*** Code
#+name:AcadOle
#+header: :var m-p=m-p-AcadOle
#+header: :var o-i=o-i-AcadOle
#+header: :var des=des-AcadOle
#+header: :var code=code
#+header: :results output file
#+header: :file AcadOle.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadOle
[[file:AcadOle.lisp]]

** Point Object (ActiveX)
#+name: des-AcadPoint
| Description                                                                                                 |
|-------------------------------------------------------------------------------------------------------------|
| A point marker appearing as a dot, square, circle, X, tick, or plus sign (+); or as a combination of these. |

#END_SRCSupported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadPoint
| cl-nm     |
|-----------|
| AcadPoint |
**** Object Inheritance
#+name: o-i-AcadPoint
| Object     |
| AcadObject |
| AcadEntity |
| AcadPoint  |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddPoint
    PaperSpace.AddPoint
    Block.AddPoint
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadPoint
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Coordinates            |          |
| Copy                   | Document               |          |
| Delete                 | EntityTransparency     |          |
| GetBoundingBox         | Handle                 |          |
| GetExtensionDictionary | HasExtensionDictionary |          |
| GetXData               | Hyperlinks             |          |
| Highlight              | Layer                  |          |
| IntersectWith          | Linetype               |          |
| Mirror                 | LinetypeScale          |          |
| Mirror3D               | Lineweight             |          |
| Move                   | Material               |          |
| Rotate                 | Normal                 |          |
| Rotate3D               | ObjectID               |          |
| ScaleEntity            | ObjectName             |          |
| SetXData               | OwnerID                |          |
| TransformBy            | PlotStyleName          |          |
| Update                 | Thickness              |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
*** Remarks

You can specify a full 3D location for a point. The current elevation is assumed if you omit the Z coordinate.

Points can act as nodes to which you can snap objects. Also, the Coordinates property provides an array that can be used in any method requiring a point as an input parameter.

Controlling the Appearance of Points

    The PDMODE and PDSIZE system variables control the appearance of point objects. PDMODE values 0, 2, 3, and 4 specify a figure to draw through the point. A value of 1 selects nothing to be displayed.


    Adding 32, 64, or 96 to the values above selects a shape to draw around the point in addition to the figure drawn through it:






    PDSIZE controls the size of the point figures, except for PDMODE values 0 and 1. A 0 setting generates the point at 5 percent of the graphics area height. A positive PDSIZE value specifies an absolute size for the point figures. A negative value is interpreted as a percentage of the viewport size. The size of all points is recalculated when the drawing is regenerated.

    After you change PDMODE and PDSIZE, the appearance of existing points changes the next time AutoCAD regenerates the drawing.
Creating Points

    To create a point, use the AddPoint method.

*** Code
#+name:AcadPoint
#+header: :var m-p=m-p-AcadPoint
#+header: :var o-i=o-i-AcadPoint
#+header: :var des=des-AcadPoint
#+header: :var code=code
#+header: :results output file
#+header: :file AcadPoint.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadPoint
[[file:AcadPoint.lisp]]

** PointCloud Object (ActiveX)
#+name: des-AcadPointCloud
| Description                      |
|----------------------------------|
| A source of point cloud content. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadPointCloud
| cl-nm          |
|----------------|
| AcadPointCloud |
**** Object Inheritance
#+name: o-i-AcadPointCloud
| Object         |
| AcadObject     |
| AcadEntity     |
| AcadPointCloud |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadPointCloud
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Document               |          |
| Copy                   | EntityTransparency     |          |
| Delete                 | Handle                 |          |
| GetBoundingBox         | HasExtensionDictionary |          |
| GetExtensionDictionary | Height                 |          |
| GetXData               | Hyperlinks             |          |
| Highlight              | InsertionPoint         |          |
| IntersectWith          | IntensityColorScheme   |          |
| Mirror                 | Layer                  |          |
| Mirror3D               | Length                 |          |
| Move                   | Linetype               |          |
| Rotate                 | LinetypeScale          |          |
| Rotate3D               | Lineweight             |          |
| ScaleEntity            | Locked                 |          |
| SetXData               | Material               |          |
| TransformBy            | Name                   |          |
| Update                 | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
|                        | Path                   |          |
|                        | PlotStyleName          |          |
|                        | Rotation               |          |
|                        | Scale                  |          |
|                        | ShowClipped            |          |
|                        | ShowIntensity          |          |
|                        | Stylization            |          |
|                        | TrueColor              |          |
|                        | Unit                   |          |
|                        | UnitFactor             |          |
|                        | UseEntityColor         |          |
|                        | Visible                |          |
|                        | Width                  |          |
*** Remarks

Point clouds are large collection of points placed on a 3D coordinate system.

You can use ActiveX to query and edit PointCloud entities in AutoCAD drawings. You cannot create a PointCloud object with ActiveX.
*** Code
#+name:AcadPointCloud
#+header: :var m-p=m-p-AcadPointCloud
#+header: :var o-i=o-i-AcadPointCloud
#+header: :var des=des-AcadPointCloud
#+header: :var code=code
#+header: :results output file
#+header: :file AcadPointCloud.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadPointCloud
[[file:AcadPointCloud.lisp]]

** PointCloudEx Object (ActiveX)
#+name: des-AcadPointCloudEx
| Description                     |
|---------------------------------|
| A point cloud extension entity. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadPointCloudEx
| cl-nm            |
|------------------|
| AcadPointCloudEx |
**** Object Inheritance
#+name: o-i-AcadPointCloudEx
| Object           |
| AcadObject       |
| AcadEntity       |
| AcadPointCloudEx |

**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadPointCloudEx
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | ColorScheme            |          |
| Copy                   | Document               |          |
| Delete                 | EntityTransparency     |          |
| GetBoundingBox         | Geolocate              |          |
| GetExtensionDictionary | Handle                 |          |
| GetXData               | HasExtensionDictionary |          |
| Highlight              | Hyperlinks             |          |
| IntersectWith          | InsertionPoint         |          |
| Mirror                 | Layer                  |          |
| Mirror3D               | Linetype               |          |
| Move                   | LinetypeScale          |          |
| Rotate                 | Lineweight             |          |
| Rotate3D               | Locked                 |          |
| ScaleEntity            | Material               |          |
| SetXData               | Name                   |          |
| TransformBy            | ObjectID               |          |
| Update                 | ObjectName             |          |
|                        | OwnerID                |          |
|                        | Path                   |          |
|                        | PlotStyleName          |          |
|                        | Rotation               |          |
|                        | Scale                  |          |
|                        | Segmentation           |          |
|                        | ShowCropped            |          |
|                        | Stylization            |          |
|                        | TrueColor              |          |
|                        | Unit                   |          |
|                        | UnitFactor             |          |
|                        | Visible                |          |
*** Remarks

Point clouds are large collection of points placed on a 3D coordinate system.

You can use ActiveX to query and edit PointCloud entities in AutoCAD drawings. You cannot create a PointCloud object with ActiveX.
*** Code
#+name:AcadPointCloudEx
#+header: :var m-p=m-p-AcadPointCloudEx
#+header: :var o-i=o-i-AcadPointCloudEx
#+header: :var des=des-AcadPointCloudEx
#+header: :var code=code
#+header: :results output file
#+header: :file AcadPointCloudEx.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadPointCloudEx
[[file:AcadPointCloudEx.lisp]]

** PolyfaceMesh Object (ActiveX)
#+name: des-AcadPolyfaceMesh
| Description                        |
|------------------------------------|
| A three-dimensional polyface mesh. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadPolyfaceMesh
| cl-nm            |
|------------------|
| AcadPolyfaceMesh |
**** Object Inheritance
#+name: o-i-AcadPolyfaceMesh
| Object           |
| AcadObject       |
| AcadEntity       |
| AcadPolyfaceMesh |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddPolyfaceMesh
    PaperSpace.AddPolyfaceMesh
    Block.AddPolyfaceMesh
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadPolyfaceMesh
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Coordinate             |          |
| Copy                   | Coordinates            |          |
| Delete                 | Document               |          |
| GetBoundingBox         | EntityTransparency     |          |
| GetExtensionDictionary | Handle                 |          |
| GetXData               | HasExtensionDictionary |          |
| Highlight              | Hyperlinks             |          |
| IntersectWith          | Layer                  |          |
| Mirror                 | Linetype               |          |
| Mirror3D               | LinetypeScale          |          |
| Move                   | Lineweight             |          |
| Rotate                 | Material               |          |
| Rotate3D               | NumberOfFaces          |          |
| ScaleEntity            | NumberOfVertices       |          |
| SetXData               | ObjectID               |          |
| TransformBy            | ObjectName             |          |
| Update                 | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
*** Remarks

To create a polyface mesh, use the AddPolyfaceMesh method.

*** Code
#+name:AcadPolyfaceMesh
#+header: :var m-p=m-p-AcadPolyfaceMesh
#+header: :var o-i=o-i-AcadPolyfaceMesh
#+header: :var des=des-AcadPolyfaceMesh
#+header: :var code=code
#+header: :results output file
#+header: :file AcadPolyfaceMesh.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadPolyfaceMesh
[[file:AcadPolyfaceMesh.lisp]]

** Polyline Object (ActiveX)
#+name: des-AcadPolyline
| Description                                                                                                   |
|---------------------------------------------------------------------------------------------------------------|
| A 2D line of adjustable width or a 3D line or mesh of non-adjustable width composed of line and arc segments. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadPolyline
| cl-nm        |
|--------------|
| AcadPolyline |
**** Object Inheritance
#+name: o-i-AcadPolyline
| Object       |
| AcadObject   |
| AcadEntity   |
| AcadPolyline |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddPolyline
    PaperSpace.AddPolyline
    Block.AddPolyline
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadPolyline
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| AppendVertex           | Application            | Modified |
| ArrayPolar             | Area                   |          |
| ArrayRectangular       | Closed                 |          |
| Copy                   | ConstantWidth          |          |
| Delete                 | Coordinate             |          |
| Explode                | Coordinates            |          |
| GetBoundingBox         | Document               |          |
| GetBulge               | Elevation              |          |
| GetExtensionDictionary | EntityTransparency     |          |
| GetWidth               | Handle                 |          |
| GetXData               | HasExtensionDictionary |          |
| Highlight              | Hyperlinks             |          |
| IntersectWith          | Layer                  |          |
| Mirror                 | Length                 |          |
| Mirror3D               | Linetype               |          |
| Move                   | LinetypeGeneration     |          |
| Offset                 | LinetypeScale          |          |
| Rotate                 | Lineweight             |          |
| Rotate3D               | Material               |          |
| ScaleEntity            | Normal                 |          |
| SetBulge               | ObjectID               |          |
| SetWidth               | ObjectName             |          |
| SetXData               | OwnerID                |          |
| TransformBy            | PlotStyleName          |          |
| Update                 | Thickness              |          |
|                        | TrueColor              |          |
|                        | Type                   |          |
|                        | Visible                |          |
*** Remarks

This object is an earlier version of the LightweightPolyline object.

This object exists for backward compatibility only. Use the LightweightPolyline object to create polylines with an optimized format that saves memory and disk space.
*** Code
#+name:AcadPolyline
#+header: :var m-p=m-p-AcadPolyline
#+header: :var o-i=o-i-AcadPolyline
#+header: :var des=des-AcadPolyline
#+header: :var code=code
#+header: :results output file
#+header: :file AcadPolyline.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadPolyline
[[file:AcadPolyline.lisp]]

** RasterImage Object (ActiveX)
#+name: des-AcadRasterImage
| Description                                                                                           |
|-------------------------------------------------------------------------------------------------------|
| A raster image consisting of a rectangular grid (or raster) of small squares or dots known as pixels. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadRasterImage
| cl-nm           |
|-----------------|
| AcadRasterImage |
**** Object Inheritance
#+name: o-i-AcadRasterImage
| Object          |
| AcadObject      |
| AcadEntity      |
| AcadRasterImage |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddRaster
    PaperSpace.AddRaster
    Block.AddRaster
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadRasterImage
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Brightness             |          |
| ClipBoundary           | ClippingEnabled        |          |
| Copy                   | Contrast               |          |
| Delete                 | Document               |          |
| GetBoundingBox         | EntityTransparency     |          |
| GetExtensionDictionary | Fade                   |          |
| GetXData               | Handle                 |          |
| Highlight              | HasExtensionDictionary |          |
| IntersectWith          | Height                 |          |
| Mirror                 | Hyperlinks             |          |
| Mirror3D               | ImageFile              |          |
| Move                   | ImageHeight            |          |
| Rotate                 | ImageVisibility        |          |
| Rotate3D               | ImageWidth             |          |
| ScaleEntity            | Layer                  |          |
| SetXData               | Linetype               |          |
| TransformBy            | LinetypeScale          |          |
| Update                 | Lineweight             |          |
|                        | Material               |          |
|                        | Name                   |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | Origin                 |          |
|                        | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | Rotation               |          |
|                        | ScaleFactor            |          |
|                        | ShowRotation           |          |
|                        | Transparency           |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
|                        | Width                  |          |
*** Remarks

To create a raster image, use the AddRaster method.
*** Code
#+name:AcadRasterImage
#+header: :var m-p=m-p-AcadRasterImage
#+header: :var o-i=o-i-AcadRasterImage
#+header: :var des=des-AcadRasterImage
#+header: :var code=code
#+header: :results output file
#+header: :file AcadRasterImage.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadRasterImage
[[file:AcadRasterImage.lisp]]

** Wipeout Object (ActiveX)
#+name: des-AcadWipeout
| Description                                                               |
|---------------------------------------------------------------------------|
| Masking object that hides the objects below it in the current draw order. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadWipeout
| cl-nm       |
|-------------|
| AcadWipeout |
**** Object Inheritance
#+name: o-i-AcadWipeout
| Object          |
| AcadObject      |
| AcadEntity      |
| AcadRasterImage |
| AcadWipeout     |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadWipeout
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Brightness             |          |
| ClipBoundary           | ClippingEnabled        |          |
| Copy                   | Contrast               |          |
| Delete                 | Document               |          |
| GetBoundingBox         | EntityTransparency     |          |
| GetExtensionDictionary | Fade                   |          |
| GetXData               | Handle                 |          |
| Highlight              | HasExtensionDictionary |          |
| IntersectWith          | Height                 |          |
| Mirror                 | Hyperlinks             |          |
| Mirror3D               | ImageFile              |          |
| Move                   | ImageHeight            |          |
| Rotate                 | ImageVisibility        |          |
| Rotate3D               | ImageWidth             |          |
| ScaleEntity            | Layer                  |          |
| SetXData               | Linetype               |          |
| TransformBy            | LinetypeScale          |          |
| Update                 | Lineweight             |          |
|                        | Material               |          |
|                        | Name                   |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | Origin                 |          |
|                        | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | Rotation               |          |
|                        | ScaleFactor            |          |
|                        | ShowRotation           |          |
|                        | Transparency           |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
|                        | Width                  |          |
*** Remarks

Objects of the Wipeout class are polygonally clipped raster entities that are used as masks to cover parts of other entities in the drawing. The most common use is as a background mask for text entities.
*** Code
#+name:AcadWipeout
#+header: :var m-p=m-p-AcadWipeout
#+header: :var o-i=o-i-AcadWipeout
#+header: :var des=des-AcadWipeout
#+header: :var code=code
#+header: :results output file
#+header: :file AcadWipeout.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadWipeout
[[file:AcadWipeout.lisp]]

** Ray Object (ActiveX)
#+name: des-AcadRay
| Description           |
|-----------------------|
| A semi-infinite line. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadRay
| cl-nm   |
|---------|
| AcadRay |
**** Object Inheritance
#+name: o-i-AcadRay
| Object     |
| AcadObject |
| AcadEntity |
| AcadRay    |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddRay
    PaperSpace.AddRay
    Block.AddRay
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadRay
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | BasePoint              |          |
| Copy                   | DirectionVector        |          |
| Delete                 | Document               |          |
| GetBoundingBox         | EntityTransparency     |          |
| GetExtensionDictionary | Handle                 |          |
| GetXData               | HasExtensionDictionary |          |
| Highlight              | Hyperlinks             |          |
| IntersectWith          | Layer                  |          |
| Mirror                 | Linetype               |          |
| Mirror3D               | LinetypeScale          |          |
| Move                   | Lineweight             |          |
| Rotate                 | Material               |          |
| Rotate3D               | ObjectID               |          |
| ScaleEntity            | ObjectName             |          |
| SetXData               | OwnerID                |          |
| TransformBy            | PlotStyleName          |          |
| Update                 | SecondPoint            |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
*** Remarks

Rays are commonly used as construction lines. A ray has a finite starting point and extends to infinity.

To create a ray, use the AddRay method.
*** Code
#+name:AcadRay
#+header: :var m-p=m-p-AcadRay
#+header: :var o-i=o-i-AcadRay
#+header: :var des=des-AcadRay
#+header: :var code=code
#+header: :results output file
#+header: :file AcadRay.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadRay
[[file:AcadRay.lisp]]

** Region object (ActiveX)
#+name: des-AcadRegion
| Description                                                                                   |
|-----------------------------------------------------------------------------------------------|
| A bounded planar face consisting of lines, circles, arcs, elliptical arcs, and spline curves. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadRegion
| cl-nm      |
|------------|
| AcadRegion |
**** Object Inheritance
#+name: o-i-AcadRegion
| Object     |
| AcadObject |
| AcadEntity |
| AcadRegion |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddRegion
    PaperSpace.AddRegion
    Block.AddRegion
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadRegion
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Area                   |          |
| Boolean                | Centroid               |          |
| Copy                   | Document               |          |
| Delete                 | EntityTransparency     |          |
| Explode                | Handle                 |          |
| GetBoundingBox         | HasExtensionDictionary |          |
| GetExtensionDictionary | Hyperlinks             |          |
| GetXData               | Layer                  |          |
| Highlight              | Linetype               |          |
| IntersectWith          | LinetypeScale          |          |
| Mirror                 | Lineweight             |          |
| Mirror3D               | Material               |          |
| Move                   | MomentOfInertia        |          |
| Rotate                 | Normal                 |          |
| Rotate3D               | ObjectID               |          |
| ScaleEntity            | ObjectName             |          |
| SetXData               | OwnerID                |          |
| TransformBy            | Perimeter              |          |
| Update                 | PlotStyleName          |          |
|                        | PrincipalDirections    |          |
|                        | PrincipalMoments       |          |
|                        | ProductOfInertia       |          |
|                        | RadiiOfGyration        |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
*** Remarks

Each object in the region retains its layer, linetype, and color. AutoCAD deletes the original objects after converting them to regions and does not hatch the regions by default.

You can explode a region into the individual loops by using the Explode method. The Boolean method allows you to create composite 3D solids or regions from the intersection, union, or subtraction of a solid or region from another solid or region.

To create a region, use the AddRegion method.
*** Code
#+name:AcadRegion
#+header: :var m-p=m-p-AcadRegion
#+header: :var o-i=o-i-AcadRegion
#+header: :var des=des-AcadRegion
#+header: :var code=code
#+header: :results output file
#+header: :file AcadRegion.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadRegion
[[file:AcadRegion.lisp]]

** Section Object (ActiveX)
#+name: des-AcadSection
| Description                                                                |
|----------------------------------------------------------------------------|
| A section plane entity created at the intersection of a plane and a solid. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadSection
| cl-nm       |
|-------------|
| AcadSection |
**** Object Inheritance
#+name: o-i-AcadSection
| Object      |
| AcadObject  |
| AcadEntity  |
| AcadSection |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddSection
    PaperSpace.AddSection
    Block.AddSection
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadSection
| Methods                 | Properties             | Events   |
|-------------------------+------------------------+----------|
| AddVertex               | Application            | Modified |
| ArrayPolar              | BottomHeight           |          |
| ArrayRectangular        | Coordinate             |          |
| Copy                    | Document               |          |
| CreateJog               | Elevation              |          |
| Delete                  | EntityTransparency     |          |
| GenerateSectionGeometry | Handle                 |          |
| GetBoundingBox          | HasExtensionDictionary |          |
| GetExtensionDictionary  | Hyperlinks             |          |
| GetXData                | IndicatorFillColor     |          |
| Highlight               | IndicatorTransparency  |          |
| HitTest                 | Layer                  |          |
| IntersectWith           | Linetype               |          |
| Mirror                  | LinetypeScale          |          |
| Mirror3D                | Lineweight             |          |
| Move                    | LiveSectionEnabled     |          |
| RemoveVertex            | Material               |          |
| Rotate                  | Name                   |          |
| Rotate3D                | Normal                 |          |
| ScaleEntity             | NumVertices            |          |
| SetXData                | ObjectID               |          |
| TransformBy             | ObjectName             |          |
| Update                  | OwnerID                |          |
|                         | PlotStyleName          |          |
|                         | SectionPlaneOffset     |          |
|                         | Settings               |          |
|                         | SliceDepth             |          |
|                         | State                  |          |
|                         | State2                 |          |
|                         | TopHeight              |          |
|                         | TrueColor              |          |
|                         | VerticalDirection      |          |
|                         | Vertices               |          |
|                         | ViewingDirection       |          |
|                         | Visible                |          |
*** Remarks

The Section object represents a cross section through a 3D solid. The result can be a two-dimensional object that represents the shape of the section. To create a Section object, use AddSection .
*** Code
#+name:AcadSection
#+header: :var m-p=m-p-AcadSection
#+header: :var o-i=o-i-AcadSection
#+header: :var des=des-AcadSection
#+header: :var code=code
#+header: :results output file
#+header: :file AcadSection.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadSection
[[file:AcadSection.lisp]]

** SectionSettings object (ActiveX)
#+name: des-AcadSectionSettings
| Description                                |
|--------------------------------------------|
| A container for section geometry settings. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadSectionSettings
| cl-nm               |
|---------------------|
| AcadSectionSettings |
**** Object Inheritance
#+name: o-i-AcadSectionSettings
| Object              |
| AcadObject          |
| AcadSectionSettings |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    Section.Settings
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadSectionSettings
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Delete                 | Application            | Modified |
| GetExtensionDictionary | CurrentSectionType     |          |
| GetSectionTypeSettings | Document               |          |
| GetXData               | Handle                 |          |
| SetXData               | HasExtensionDictionary |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

Settings that control the type and settings used to display a section.
*** Code
#+name:AcadSectionSettings
#+header: :var m-p=m-p-AcadSectionSettings
#+header: :var o-i=o-i-AcadSectionSettings
#+header: :var des=des-AcadSectionSettings
#+header: :var code=code
#+header: :results output file
#+header: :file AcadSectionSettings.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadSectionSettings
[[file:AcadSectionSettings.lisp]]

** Shape Object (ActiveX)
#+name: des-AcadShape
| Description                                                           |
|-----------------------------------------------------------------------|
| An object comprising lines, arcs, and circles defined in an SHX file. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadShape
| cl-nm     |
|-----------|
| AcadShape |
**** Object Inheritance
#+name: o-i-AcadShape
| Object     |
| AcadObject |
| AcadEntity |
| AcadShape  |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddShape
    PaperSpace.AddShape
    Block.AddShape
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadShape
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Document               |          |
| Copy                   | EntityTransparency     |          |
| Delete                 | Handle                 |          |
| GetBoundingBox         | HasExtensionDictionary |          |
| GetExtensionDictionary | Height                 |          |
| GetXData               | Hyperlinks             |          |
| Highlight              | InsertionPoint         |          |
| IntersectWith          | Layer                  |          |
| Mirror                 | Linetype               |          |
| Mirror3D               | LinetypeScale          |          |
| Move                   | Lineweight             |          |
| Rotate                 | Material               |          |
| Rotate3D               | Name                   |          |
| ScaleEntity            | Normal                 |          |
| SetXData               | ObjectID               |          |
| TransformBy            | ObjectName             |          |
| Update                 | ObliqueAngle           |          |
|                        | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | Rotation               |          |
|                        | ScaleFactor            |          |
|                        | Thickness              |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
*** Remarks

Before inserting a shape, you must load the file containing the desired shape. To load a shape file, use the LoadShapeFile method. To insert the shape into the drawing, use the AddShape method.
*** Code
#+name:AcadShape
#+header: :var m-p=m-p-AcadShape
#+header: :var o-i=o-i-AcadShape
#+header: :var des=des-AcadShape
#+header: :var code=code
#+header: :results output file
#+header: :file AcadShape.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadShape
[[file:AcadShape.lisp]]

** Solid Object (ActiveX)
#+name: des-AcadSolid
| Description             |
|-------------------------|
| A solid-filled polygon. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadSolid
| cl-nm     |
|-----------|
| AcadSolid |
**** Object Inheritance
#+name: o-i-AcadSolid
| Object     |
| AcadObject |
| AcadEntity |
| AcadSolid  |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddSolid
    PaperSpace.AddSolid
    Block.AddSolid
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadSolid
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Coordinate             |          |
| Copy                   | Coordinates            |          |
| Delete                 | Document               |          |
| GetBoundingBox         | EntityTransparency     |          |
| GetExtensionDictionary | Handle                 |          |
| GetXData               | HasExtensionDictionary |          |
| Highlight              | Hyperlinks             |          |
| IntersectWith          | Layer                  |          |
| Mirror                 | Linetype               |          |
| Mirror3D               | LinetypeScale          |          |
| Move                   | Lineweight             |          |
| Rotate                 | Material               |          |
| Rotate3D               | Normal                 |          |
| ScaleEntity            | ObjectID               |          |
| SetXData               | ObjectName             |          |
| TransformBy            | OwnerID                |          |
| Update                 | PlotStyleName          |          |
|                        | Thickness              |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
*** Remarks

Solids are only filled when the FILLMODE system variable is on. To set or query a system variable, use the SetVariable and GetVariable methods, respectively.

To create a solid, use the AddSolid method.
*** Code
#+name:AcadSolid
#+header: :var m-p=m-p-AcadSolid
#+header: :var o-i=o-i-AcadSolid
#+header: :var des=des-AcadSolid
#+header: :var code=code
#+header: :results output file
#+header: :file AcadSolid.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadSolid
[[file:AcadSolid.lisp]]

** Spline Object (ActiveX)
#+name: des-AcadSpline
| Description                                                      |
|------------------------------------------------------------------|
| A quadratic or cubic NURBS (nonuniform rational B-spline) curve. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadSpline
| cl-nm      |
|------------|
| AcadSpline |
**** Object Inheritance
#+name: o-i-AcadSpline
| Object     |
| AcadObject |
| AcadEntity |
| AcadSpline |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddSpline
    PaperSpace.AddSpline
    Block.AddSpline
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadSpline
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| AddFitPoint            | Application            | Modified |
| ArrayPolar             | Area                   |          |
| ArrayRectangular       | Closed                 |          |
| Copy                   | Closed2                |          |
| Delete                 | ControlPoints          |          |
| DeleteFitPoint         | Degree                 |          |
| ElevateOrder           | Degree2                |          |
| GetBoundingBox         | Document               |          |
| GetControlPoint        | EndTangent             |          |
| GetExtensionDictionary | EntityTransparency     |          |
| GetFitPoint            | FitPoints              |          |
| GetWeight              | FitTolerance           |          |
| GetXData               | Handle                 |          |
| Highlight              | HasExtensionDictionary |          |
| IntersectWith          | Hyperlinks             |          |
| Mirror                 | IsPeriodic             |          |
| Mirror3D               | IsPlanar               |          |
| Move                   | IsRational             |          |
| Offset                 | KnotParameterization   |          |
| PurgeFitData           | Knots                  |          |
| Reverse                | Layer                  |          |
| Rotate                 | Linetype               |          |
| Rotate3D               | LinetypeScale          |          |
| ScaleEntity            | Lineweight             |          |
| SetControlPoint        | Material               |          |
| SetFitPoint            | NumberOfControlPoints  |          |
| SetWeight              | NumberOfFitPoints      |          |
| SetXData               | ObjectID               |          |
| TransformBy            | ObjectName             |          |
| Update                 | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | SplineFrame            |          |
|                        | SplineMethod           |          |
|                        | StartTangent           |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
|                        | Weights                |          |
*** Remarks

A spline is a smooth curve passing through a given set of points. AutoCAD uses a particular type of spline known as a nonuniform rational B-spline (NURBS) curve. A NURBS curve produces a smooth curve between control points. Splines are useful for creating irregular-shaped curves, for example, drawing contour lines for geographic information system (GIS) applications or automobile design.

You create splines by specifying coordinate points. You can close the spline so the start point and endpoint are coincident and tangent. You can also change the spline-fitting tolerance. Fit tolerance refers to how closely the spline fits the set of fit points you specify. The lower the tolerance, the more closely the spline fits the points. At zero tolerance, the spline passes through the points.

To create a spline, use the AddSpline method.
*** Code
#+name:AcadSpline
#+header: :var m-p=m-p-AcadSpline
#+header: :var o-i=o-i-AcadSpline
#+header: :var des=des-AcadSpline
#+header: :var code=code
#+header: :results output file
#+header: :file AcadSpline.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadSpline
[[file:AcadSpline.lisp]]

** Surface Object (ActiveX)
#+name: des-AcadSurface
| Description       |
|-------------------|
| A surface entity. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadSurface
| cl-nm       |
|-------------|
| AcadSurface |
**** Object Inheritance
#+name: o-i-AcadSurface
| Object      |
| AcadObject  |
| AcadEntity  |
| AcadSurface |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadSurface
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Document               |          |
| Copy                   | EdgeExtensionDistances |          |
| Delete                 | EntityTransparency     |          |
| GetBoundingBox         | Handle                 |          |
| GetExtensionDictionary | HasExtensionDictionary |          |
| GetXData               | Hyperlinks             |          |
| Highlight              | Layer                  |          |
| IntersectWith          | Linetype               |          |
| Mirror                 | LinetypeScale          |          |
| Mirror3D               | Lineweight             |          |
| Move                   | MaintainAssociativity  |          |
| Rotate                 | Material               |          |
| Rotate3D               | ObjectID               |          |
| ScaleEntity            | ObjectName             |          |
| SetXData               | OwnerID                |          |
| TransformBy            | PlotStyleName          |          |
| Update                 | ShowAssociativity      |          |
|                        | SurfaceType            |          |
|                        | SurfTrimAssociativity  |          |
|                        | TrueColor              |          |
|                        | UIsolineDensity        |          |
|                        | Visible                |          |
|                        | VIsolineDensity        |          |
|                        | WireframeType          |          |
*** Remarks

This object provides access to surfaces in AutoCAD. It lets you manipulate properties of the surface. You cannot create a surface entity via ActiveX.
*** Code
#+name:AcadSurface
#+header: :var m-p=m-p-AcadSurface
#+header: :var o-i=o-i-AcadSurface
#+header: :var des=des-AcadSurface
#+header: :var code=code
#+header: :results output file
#+header: :file AcadSurface.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadSurface
[[file:AcadSurface.lisp]]

** ExtrudedSurface Object (ActiveX)
#+name: des-AcadExtrudedSurface
| Description                                                                                   |
|-----------------------------------------------------------------------------------------------|
| A surface created by extruding an object or a planar face a specified distance and direction. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadExtrudedSurface
| cl-nm               |
|---------------------|
| AcadExtrudedSurface |
**** Object Inheritance
#+name: o-i-AcadExtrudedSurface
| Object              |
| AcadObject          |
| AcadEntity          |
| AcadSurface         |
| AcadExtrudedSurface |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadExtrudedSurface
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Direction              |          |
| Copy                   | Document               |          |
| Delete                 | EdgeExtensionDistances |          |
| GetBoundingBox         | EntityTransparency     |          |
| GetExtensionDictionary | Handle                 |          |
| GetXData               | HasExtensionDictionary |          |
| Highlight              | Height                 |          |
| IntersectWith          | Hyperlinks             |          |
| Mirror                 | Layer                  |          |
| Mirror3D               | Linetype               |          |
| Move                   | LinetypeScale          |          |
| Rotate                 | Lineweight             |          |
| Rotate3D               | MaintainAssociativity  |          |
| ScaleEntity            | Material               |          |
| SetXData               | ObjectID               |          |
| TransformBy            | ObjectName             |          |
| Update                 | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | ShowAssociativity      |          |
|                        | SurfaceType            |          |
|                        | SurfTrimAssociativity  |          |
|                        | TaperAngle             |          |
|                        | TrueColor              |          |
|                        | UIsolineDensity        |          |
|                        | Visible                |          |
|                        | VIsolineDensity        |          |
|                        | WireframeType          |          |
*** Remarks

This object provides access to extruded surfaces in AutoCAD. It lets you manipulate properties of the surface. You cannot create a surface entity via ActiveX.
*** Code
#+name:AcadExtrudedSurface
#+header: :var m-p=m-p-AcadExtrudedSurface
#+header: :var o-i=o-i-AcadExtrudedSurface
#+header: :var des=des-AcadExtrudedSurface
#+header: :var code=code
#+header: :results output file
#+header: :file AcadExtrudedSurface.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadExtrudedSurface
[[file:AcadExtrudedSurface.lisp]]

** LoftedSurface Object (ActiveX)
#+name: des-AcadLoftedSurface
| Description                                                       |
|-------------------------------------------------------------------|
| A surface created by lofting through a set of two or more curves. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadLoftedSurface
| cl-nm             |
|-------------------|
| AcadLoftedSurface |
**** Object Inheritance
#+name: o-i-AcadLoftedSurface
| Object            |
| AcadObject        |
| AcadEntity        |
| AcadLoftedSurface |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadLoftedSurface
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Closed                 |          |
| Copy                   | Document               |          |
| Delete                 | EdgeExtensionDistances |          |
| GetBoundingBox         | EndDraftAngle          |          |
| GetExtensionDictionary | EndDraftMagnitude      |          |
| GetXData               | EndSmoothContinuity    |          |
| Highlight              | EndSmoothMagnitude     |          |
| IntersectWith          | EntityTransparency     |          |
| Mirror                 | Handle                 |          |
| Mirror3D               | HasExtensionDictionary |          |
| Move                   | Hyperlinks             |          |
| Rotate                 | Layer                  |          |
| Rotate3D               | Linetype               |          |
| ScaleEntity            | LinetypeScale          |          |
| SetXData               | Lineweight             |          |
| TransformBy            | MaintainAssociativity  |          |
| Update                 | Material               |          |
|                        | NumCrossSections       |          |
|                        | NumGuidePaths          |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
|                        | Periodic               |          |
|                        | PlotStyleName          |          |
|                        | ShowAssociativity      |          |
|                        | StartDraftAngle        |          |
|                        | StartDraftMagnitude    |          |
|                        | StartSmoothContinuity  |          |
|                        | StartSmoothMagnitude   |          |
|                        | SurfaceNormals         |          |
|                        | SurfaceType            |          |
|                        | SurfTrimAssociativity  |          |
|                        | TrueColor              |          |
|                        | UIsolineDensity        |          |
|                        | Visible                |          |
|                        | VIsolineDensity        |          |
|                        | WireframeType          |          |
*** Remarks

You can use ActiveX to query and edit LoftedSurface entities in AutoCAD drawings. You cannot create a LoftedSurface object with ActiveX. A lofted surface is created in AutoCAD by drawing a solid or surface through a set of two or more cross-section curves. The cross sections define the profile (shape) of the resulting solid or surface. Cross sections (generally, curves or lines) can be open (for example, an arc) or closed (for example, a circle).
*** Code
#+name:AcadLoftedSurface
#+header: :var m-p=m-p-AcadLoftedSurface
#+header: :var o-i=o-i-AcadLoftedSurface
#+header: :var des=des-AcadLoftedSurface
#+header: :var code=code
#+header: :results output file
#+header: :file AcadLoftedSurface.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadLoftedSurface
[[file:AcadLoftedSurface.lisp]]

** NurbSurface Object (ActiveX)
#+name: des-AcadNurbSurface
| Description                                                                                                                            |
|----------------------------------------------------------------------------------------------------------------------------------------|
| A surface created when NURBS creation is enabled while creating procedural or complex 3D surfaces, or by converting existing surfaces. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadNurbSurface
| cl-nm           |
|-----------------|
| AcadNurbSurface |
**** Object Inheritance
#+name: o-i-AcadNurbSurface
| Object          |
| AcadObject      |
| AcadEntity      |
| AcadSurface     |
| AcadNurbSurface |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadNurbSurface
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | CvHullDisplay          |          |
| Copy                   | Document               |          |
| Delete                 | EdgeExtensionDistances |          |
| GetBoundingBox         | EntityTransparency     |          |
| GetExtensionDictionary | Handle                 |          |
| GetXData               | HasExtensionDictionary |          |
| Highlight              | Height                 |          |
| IntersectWith          | Hyperlinks             |          |
| Mirror                 | Layer                  |          |
| Mirror3D               | Linetype               |          |
| Move                   | LinetypeScale          |          |
| Rotate                 | Lineweight             |          |
| Rotate3D               | MaintainAssociativity  |          |
| ScaleEntity            | Material               |          |
| SetXData               | ObjectID               |          |
| TransformBy            | ObjectName             |          |
| Update                 | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | ShowAssociativity      |          |
|                        | SurfaceType            |          |
|                        | SurfTrimAssociativity  |          |
|                        | TrueColor              |          |
|                        | UIsolineDensity        |          |
|                        | Visible                |          |
|                        | VIsolineDensity        |          |
|                        | WireframeType          |          |
*** Remarks

This object provides access to NURBS surfaces in AutoCAD. It lets you manipulate properties of the surface. You cannot create a NURBS surface entity via ActiveX.

NURBS surfaces can be created with the LOFT, SWEEP, EXTRUDE, REVOLVE, SURFPATH, SURFBLEND, SURFOFFSET, and several other commands.
*** Code
#+name:AcadNurbSurface
#+header: :var m-p=m-p-AcadNurbSurface
#+header: :var o-i=o-i-AcadNurbSurface
#+header: :var des=des-AcadNurbSurface
#+header: :var code=code
#+header: :results output file
#+header: :file AcadNurbSurface.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadNurbSurface
[[file:AcadNurbSurface.lisp]]

** PlaneSurface Object (ActiveX)
#+name: des-AcadPlaneSurface
| Description       |
|-------------------|
| A planar surface. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadPlaneSurface
| cl-nm            |
|------------------|
| AcadPlaneSurface |
**** Object Inheritance
#+name: o-i-AcadPlaneSurface
| Object           |
| AcadObject       |
| AcadEntity       |
| AcadSurface      |
| AcadPlaneSurface |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadPlaneSurface
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Document               |          |
| Copy                   | EdgeExtensionDistances |          |
| Delete                 | EntityTransparency     |          |
| GetBoundingBox         | Handle                 |          |
| GetExtensionDictionary | HasExtensionDictionary |          |
| GetXData               | Hyperlinks             |          |
| Highlight              | Layer                  |          |
| IntersectWith          | Linetype               |          |
| Mirror                 | LinetypeScale          |          |
| Mirror3D               | Lineweight             |          |
| Move                   | MaintainAssociativity  |          |
| Rotate                 | Material               |          |
| Rotate3D               | ObjectID               |          |
| ScaleEntity            | ObjectName             |          |
| SetXData               | OwnerID                |          |
| TransformBy            | PlotStyleName          |          |
| Update                 | ShowAssociativity      |          |
|                        | SurfaceType            |          |
|                        | SurfTrimAssociativity  |          |
|                        | TrueColor              |          |
|                        | UIsolineDensity        |          |
|                        | Visible                |          |
|                        | VIsolineDensity        |          |
|                        | WireframeType          |          |
*** Remarks

This object provides access to planar surfaces in AutoCAD. You cannot create a surface entity via ActiveX.
*** Code
#+name:AcadPlaneSurface
#+header: :var m-p=m-p-AcadPlaneSurface
#+header: :var o-i=o-i-AcadPlaneSurface
#+header: :var des=des-AcadPlaneSurface
#+header: :var code=code
#+header: :results output file
#+header: :file AcadPlaneSurface.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadPlaneSurface
[[file:AcadPlaneSurface.lisp]]

** RevolvedSurface Object (ActiveX)
#+name: des-AcadRevolvedSurface
| Description                                                          |
|----------------------------------------------------------------------|
| A surface created by revolving one or more 2D objects about an axis. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadRevolvedSurface
| cl-nm               |
|---------------------|
| AcadRevolvedSurface |
**** Object Inheritance
#+name: o-i-AcadRevolvedSurface
| Object              |
| AcadObject          |
| AcadEntity          |
| AcadSurface         |
| AcadRevolvedSurface |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadRevolvedSurface
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | AxisDirection          |          |
| Copy                   | AxisPosition           |          |
| Delete                 | Document               |          |
| GetBoundingBox         | EdgeExtensionDistances |          |
| GetExtensionDictionary | EntityTransparency     |          |
| GetXData               | Handle                 |          |
| Highlight              | HasExtensionDictionary |          |
| IntersectWith          | Hyperlinks             |          |
| Mirror                 | Layer                  |          |
| Mirror3D               | Linetype               |          |
| Move                   | LinetypeScale          |          |
| Rotate                 | Lineweight             |          |
| Rotate3D               | MaintainAssociativity  |          |
| ScaleEntity            | Material               |          |
| SetXData               | ObjectID               |          |
| TransformBy            | ObjectName             |          |
| Update                 | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | RevolutionAngle        |          |
|                        | ShowAssociativity      |          |
|                        | SurfaceType            |          |
|                        | SurfTrimAssociativity  |          |
|                        | TrueColor              |          |
|                        | UIsolineDensity        |          |
|                        | Visible                |          |
|                        | VIsolineDensity        |          |
|                        | WireframeType          |          |
*** Remarks

This object provides access to revolved surfaces in AutoCAD. It lets you manipulate the properties of the surface. You cannot create a surface entity via ActiveX.
*** Code
#+name:AcadRevolvedSurface
#+header: :var m-p=m-p-AcadRevolvedSurface
#+header: :var o-i=o-i-AcadRevolvedSurface
#+header: :var des=des-AcadRevolvedSurface
#+header: :var code=code
#+header: :results output file
#+header: :file AcadRevolvedSurface.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadRevolvedSurface
[[file:AcadRevolvedSurface.lisp]]

** SweptSurface Object (ActiveX)
#+name: des-AcadSweptSurface
| Description                                            |
|--------------------------------------------------------|
| A surface created by sweeping a 2D curve along a path. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadSweptSurface
| cl-nm            |
|------------------|
| AcadSweptSurface |
**** Object Inheritance
#+name: o-i-AcadSweptSurface
| Object           |
| AcadObject       |
| AcadEntity       |
| AcadSurface      |
| AcadSweptSurface |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadSweptSurface
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Bank                   |          |
| Copy                   | Document               |          |
| Delete                 | EdgeExtensionDistances |          |
| GetBoundingBox         | EntityTransparency     |          |
| GetExtensionDictionary | Handle                 |          |
| GetXData               | HasExtensionDictionary |          |
| Highlight              | Hyperlinks             |          |
| IntersectWith          | Layer                  |          |
| Mirror                 | Length                 |          |
| Mirror3D               | Linetype               |          |
| Move                   | LinetypeScale          |          |
| Rotate                 | Lineweight             |          |
| Rotate3D               | MaintainAssociativity  |          |
| ScaleEntity            | Material               |          |
| SetXData               | ObjectID               |          |
| TransformBy            | ObjectName             |          |
| Update                 | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | ProfileRotation        |          |
|                        | Scale                  |          |
|                        | ShowAssociativity      |          |
|                        | SurfaceType            |          |
|                        | SurfTrimAssociativity  |          |
|                        | TrueColor              |          |
|                        | Twist                  |          |
|                        | UIsolineDensity        |          |
|                        | Visible                |          |
|                        | VIsolineDensity        |          |
|                        | WireframeType          |          |
*** Remarks

This object provides access to swept surfaces in AutoCAD. It lets you manipulate properties of the surface. You cannot create a surface entity via ActiveX.
*** Code
#+name:AcadSweptSurface
#+header: :var m-p=m-p-AcadSweptSurface
#+header: :var o-i=o-i-AcadSweptSurface
#+header: :var des=des-AcadSweptSurface
#+header: :var code=code
#+header: :results output file
#+header: :file AcadSweptSurface.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadSweptSurface
[[file:AcadSweptSurface.lisp]]

** Table Object (ActiveX)
#+name: des-AcadTable
| Description           |
|-----------------------|
| AutoCAD table object. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadTable
| cl-nm     |
|-----------|
| AcadTable |
**** Object Inheritance
#+name: o-i-AcadTable
| Object     |
| AcadObject |
| AcadEntity |
| AcadTable  |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddTable
    PaperSpace.AddTable
    Block.AddTable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadTable
| Methods                    | Properties                | Events   |
|----------------------------+---------------------------+----------|
| ArrayPolar                 | AllowManualHeights        | Modified |
| ArrayRectangular           | AllowManualPositions      |          |
| ClearSubSelection          | Application               |          |
| ClearTableStyleOverrides   | BreaksEnabled             |          |
| Copy                       | BreakSpacing              |          |
| CreateContent              | Columns                   |          |
| Delete                     | ColumnWidth               |          |
| DeleteCellContent          | Direction                 |          |
| DeleteColumns              | Document                  |          |
| DeleteContent              | EnableBreak               |          |
| DeleteRows                 | EntityTransparency        |          |
| EnableMergeAll             | FlowDirection             |          |
| FormatValue                | Handle                    |          |
| GenerateLayout             | HasExtensionDictionary    |          |
| GetAlignment               | HasSubSelection           |          |
| GetAttachmentPoint         | HeaderSuppressed          |          |
| GetAutoScale               | Height                    |          |
| GetAutoScale2              | HorzCellMargin            |          |
| GetBackgroundColor         | Hyperlinks                |          |
| GetBackgroundColorNone     | InsertionPoint            |          |
| GetBlockAttributeValue     | Layer                     |          |
| GetBlockAttributeValue2    | Linetype                  |          |
| GetBlockRotation           | LinetypeScale             |          |
| GetBlockScale              | Lineweight                |          |
| GetBlockTableRecordId      | Material                  |          |
| GetBlockTableRecordId2     | MinimumTableHeight        |          |
| GetBoundingBox             | MinimumTableWidth         |          |
| GetBreakHeight             | ObjectID                  |          |
| GetCellAlignment           | ObjectName                |          |
| GetCellBackgroundColor     | OwnerID                   |          |
| GetCellBackgroundColorNone | PlotStyleName             |          |
| GetCellContentColor        | RegenerateTableSuppressed |          |
| GetCellDataType            | RepeatBottomLabels        |          |
| GetCellExtents             | RepeatTopLabels           |          |
| GetCellFormat              | RowHeight                 |          |
| GetCellGridColor           | Rows                      |          |
| GetCellGridLineWeight      | StyleName                 |          |
| GetCellGridVisibility      | TableBreakFlowDirection   |          |
| GetCellState               | TableBreakHeight          |          |
| GetCellStyle               | TableStyleOverrides       |          |
| GetCellStyleOverrides      | TitleSuppressed           |          |
| GetCellTextHeight          | TrueColor                 |          |
| GetCellTextStyle           | VertCellMargin            |          |
| GetCellType                | Visible                   |          |
| GetCellValue               | Width                     |          |
| GetColumnName              |                           |          |
| GetColumnWidth             |                           |          |
| GetContentColor            |                           |          |
| GetContentColor2           |                           |          |
| GetContentLayout           |                           |          |
| GetContentType             |                           |          |
| GetCustomData              |                           |          |
| GetDataFormat              |                           |          |
| GetDataType                |                           |          |
| GetDataType2               |                           |          |
| GetExtensionDictionary     |                           |          |
| GetFieldId                 |                           |          |
| GetFieldId2                |                           |          |
| GetFormat                  |                           |          |
| GetFormula                 |                           |          |
| GetGridColor               |                           |          |
| GetGridColor2              |                           |          |
| GetGridDoubleLineSpacing   |                           |          |
| GetGridLineStyle           |                           |          |
| GetGridLinetype            |                           |          |
| GetGridLineWeight          |                           |          |
| GetGridLineWeight2         |                           |          |
| GetGridVisibility          |                           |          |
| GetGridVisibility2         |                           |          |
| GetHasFormula              |                           |          |
| GetMargin                  |                           |          |
| GetMinimumColumnWidth      |                           |          |
| GetMinimumRowHeight        |                           |          |
| GetOverride                |                           |          |
| GetRotation                |                           |          |
| GetRowHeight               |                           |          |
| GetRowType                 |                           |          |
| GetScale                   |                           |          |
| GetSubSelection            |                           |          |
| GetText                    |                           |          |
| GetTextHeight              |                           |          |
| GetTextHeight2             |                           |          |
| GetTextRotation            |                           |          |
| GetTextString              |                           |          |
| GetTextStyle               |                           |          |
| GetTextStyle2              |                           |          |
| GetValue                   |                           |          |
| GetXData                   |                           |          |
| Highlight                  |                           |          |
| HitTest                    |                           |          |
| InsertColumns              |                           |          |
| InsertColumnsAndInherit    |                           |          |
| InsertRows                 |                           |          |
| InsertRowsAndInherit       |                           |          |
| IntersectWith              |                           |          |
| IsContentEditable          |                           |          |
| IsEmpty                    |                           |          |
| IsFormatEditable           |                           |          |
| IsMergeAllEnabled          |                           |          |
| IsMergedCell               |                           |          |
| MergeCells                 |                           |          |
| Mirror                     |                           |          |
| Mirror3D                   |                           |          |
| Move                       |                           |          |
| MoveContent                |                           |          |
| RecomputeTableBlock        |                           |          |
| RemoveAllOverrides         |                           |          |
| ReselectSubRegion          |                           |          |
| ResetCellValue             |                           |          |
| Rotate                     |                           |          |
| Rotate3D                   |                           |          |
| ScaleEntity                |                           |          |
| Select                     |                           |          |
| SelectSubRegion            |                           |          |
| SetAlignment               |                           |          |
| SetAutoScale               |                           |          |
| SetAutoScale2              |                           |          |
| SetBackgroundColor         |                           |          |
| SetBackgroundColorNone     |                           |          |
| SetBlockAttributeValue     |                           |          |
| SetBlockAttributeValue2    |                           |          |
| SetBlockRotation           |                           |          |
| SetBlockScale              |                           |          |
| SetBlockTableRecordId      |                           |          |
| SetBlockTableRecordId2     |                           |          |
| SetBreakHeight             |                           |          |
| SetCellAlignment           |                           |          |
| SetCellBackgroundColor     |                           |          |
| SetCellBackgroundColorNone |                           |          |
| SetCellContentColor        |                           |          |
| SetCellDataType            |                           |          |
| SetCellFormat              |                           |          |
| SetCellGridColor           |                           |          |
| SetCellGridLineWeight      |                           |          |
| SetCellGridVisibility      |                           |          |
| SetCellState               |                           |          |
| SetCellStyle               |                           |          |
| SetCellTextHeight          |                           |          |
| SetCellTextStyle           |                           |          |
| SetCellType                |                           |          |
| SetCellValue               |                           |          |
| SetCellValueFromText       |                           |          |
| SetColumnName              |                           |          |
| SetColumnWidth             |                           |          |
| SetContentColor            |                           |          |
| SetContentColor2           |                           |          |
| SetContentLayout           |                           |          |
| SetCustomData              |                           |          |
| SetDataFormat              |                           |          |
| SetDataType                |                           |          |
| SetDataType2               |                           |          |
| SetFieldId                 |                           |          |
| SetFieldId2                |                           |          |
| SetFormat                  |                           |          |
| SetFormula                 |                           |          |
| SetGridColor               |                           |          |
| SetGridColor2              |                           |          |
| SetGridDoubleLineSpacing   |                           |          |
| SetGridLineStyle           |                           |          |
| SetGridLinetype            |                           |          |
| SetGridLineWeight          |                           |          |
| SetGridLineWeight2         |                           |          |
| SetGridVisibility          |                           |          |
| SetGridVisibility2         |                           |          |
| SetMargin                  |                           |          |
| SetOverride                |                           |          |
| SetRotation                |                           |          |
| SetRowHeight               |                           |          |
| SetScale                   |                           |          |
| SetSubSelection            |                           |          |
| SetText                    |                           |          |
| SetTextHeight              |                           |          |
| SetTextHeight2             |                           |          |
| SetTextRotation            |                           |          |
| SetTextString              |                           |          |
| SetTextStyle               |                           |          |
| SetTextStyle2              |                           |          |
| SetToolTip                 |                           |          |
| SetValue                   |                           |          |
| SetValueFromText           |                           |          |
| SetXData                   |                           |          |
| TransformBy                |                           |          |
| UnmergeCells               |                           |          |
| Update                     |                           |          |
*** Remarks

A table contains data in rows and columns. You can use the Table object to add and modify tables in a drawing.

To add a table to a drawing, use the AddTable method. After you add a table, you can modify the number of columns, the number of rows, and other settings.

All methods that change the Table object do the following:

    Open the Table object in write mode
    Modify the Table object based on the input parameters
    Close the Table object, which recomputes the Table

Recomputing large tables consumes a lot of time and memory because the Table object is reconstructed from scratch. If you are making multiple calls to update a table, you can improve performance by setting RegenerateTableSuppressed before and after making the modifications.
*** Code
#+name:AcadTable
#+header: :var m-p=m-p-AcadTable
#+header: :var o-i=o-i-AcadTable
#+header: :var des=des-AcadTable
#+header: :var code=code
#+header: :results output file
#+header: :file AcadTable.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadTable
[[file:AcadTable.lisp]]

** Text Object (ActiveX)
#+name: des-AcadText
| Description                               |
|-------------------------------------------|
| A single line of alphanumeric characters. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadText
| cl-nm    |
|----------|
| AcadText |
**** Object Inheritance
#+name: o-i-AcadText
| Object     |
| AcadObject |
| AcadEntity |
| AcadText   |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddText
    PaperSpace.AddText
    Block.AddText
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadText
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Alignment              | Modified |
| ArrayRectangular       | Application            |          |
| Copy                   | Backward               |          |
| Delete                 | Document               |          |
| FieldCode              | EntityTransparency     |          |
| GetBoundingBox         | Handle                 |          |
| GetExtensionDictionary | HasExtensionDictionary |          |
| GetXData               | Height                 |          |
| Highlight              | Hyperlinks             |          |
| IntersectWith          | InsertionPoint         |          |
| Mirror                 | Layer                  |          |
| Mirror3D               | Linetype               |          |
| Move                   | LinetypeScale          |          |
| Rotate                 | Lineweight             |          |
| Rotate3D               | Material               |          |
| ScaleEntity            | Normal                 |          |
| SetXData               | ObjectID               |          |
| TransformBy            | ObjectName             |          |
| Update                 | ObliqueAngle           |          |
|                        | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | Rotation               |          |
|                        | ScaleFactor            |          |
|                        | StyleName              |          |
|                        | TextAlignmentPoint     |          |
|                        | TextGenerationFlag     |          |
|                        | TextString             |          |
|                        | Thickness              |          |
|                        | TrueColor              |          |
|                        | UpsideDown             |          |
|                        | Visible                |          |
*** Remarks

This object differs from the MText object in that it creates only a single line of text. The MText object creates a paragraph of text.

Note that RTF text is not recognized. Text from other programs with embedded formatting will lose formatting when imported into an multiline text paragraph.

To create a Text object, use the AddText method.
*** Code
#+name:AcadText
#+header: :var m-p=m-p-AcadText
#+header: :var o-i=o-i-AcadText
#+header: :var des=des-AcadText
#+header: :var code=code
#+header: :results output file
#+header: :file AcadText.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadText
[[file:AcadText.lisp]]

** Tolerance Object (ActiveX)
#+name: des-AcadTolerance
| Description                                                 |
|-------------------------------------------------------------|
| A geometric tolerance contained in a feature control frame. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadTolerance
| cl-nm         |
|---------------|
| AcadTolerance |
**** Object Inheritance
#+name: o-i-AcadTolerance
| Object        |
| AcadObject    |
| AcadEntity    |
| AcadTolerance |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddTolerance
    PaperSpace.AddTolerance
    Block.AddTolerance
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadTolerance
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | DimensionLineColor     |          |
| Copy                   | DirectionVector        |          |
| Delete                 | Document               |          |
| GetBoundingBox         | EntityTransparency     |          |
| GetExtensionDictionary | Handle                 |          |
| GetXData               | HasExtensionDictionary |          |
| Highlight              | Hyperlinks             |          |
| IntersectWith          | InsertionPoint         |          |
| Mirror                 | Layer                  |          |
| Mirror3D               | Linetype               |          |
| Move                   | LinetypeScale          |          |
| Rotate                 | Lineweight             |          |
| Rotate3D               | Material               |          |
| ScaleEntity            | Normal                 |          |
| SetXData               | ObjectID               |          |
| TransformBy            | ObjectName             |          |
| Update                 | OwnerID                |          |
|                        | PlotStyleName          |          |
|                        | ScaleFactor            |          |
|                        | StyleName              |          |
|                        | TextColor              |          |
|                        | TextHeight             |          |
|                        | TextString             |          |
|                        | TextStyle              |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
*** Remarks

Tolerances are influenced by several system variables: DIMCLRD controls the color of the feature control frame; DIMCLRT controls the color of the tolerance text; DIMGAP controls the gap between the feature control frame and the text; DIMTXT controls the size of the tolerance text; and DIMTXSTY controls the style of the tolerance text.

System variables can be set and queried using the SetVariable and GetVariable methods.

To create a tolerance, use the AddTolerance method.
*** Code
#+name:AcadTolerance
#+header: :var m-p=m-p-AcadTolerance
#+header: :var o-i=o-i-AcadTolerance
#+header: :var des=des-AcadTolerance
#+header: :var code=code
#+header: :results output file
#+header: :file AcadTolerance.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadTolerance
[[file:AcadTolerance.lisp]]

** Trace Object (ActiveX)
#+name: des-AcadTrace
| Description                         |
|-------------------------------------|
| A 2D solid line of specified width. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadTrace
| cl-nm     |
|-----------|
| AcadTrace |
**** Object Inheritance
#+name: o-i-AcadTrace
| Object     |
| AcadObject |
| AcadEntity |
| AcadTrace  |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddTrace
    PaperSpace.AddTrace
    Block.AddTrace 
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadTrace
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Coordinate             |          |
| Copy                   | Coordinates            |          |
| Delete                 | Document               |          |
| GetBoundingBox         | EntityTransparency     |          |
| GetExtensionDictionary | Handle                 |          |
| GetXData               | HasExtensionDictionary |          |
| Highlight              | Hyperlinks             |          |
| IntersectWith          | Layer                  |          |
| Mirror                 | Linetype               |          |
| Mirror3D               | LinetypeScale          |          |
| Move                   | Lineweight             |          |
| Rotate                 | Material               |          |
| Rotate3D               | Normal                 |          |
| ScaleEntity            | ObjectID               |          |
| SetXData               | ObjectName             |          |
| TransformBy            | OwnerID                |          |
| Update                 | PlotStyleName          |          |
|                        | Thickness              |          |
|                        | TrueColor              |          |
|                        | Visible                |          |
*** Remarks

The endpoints of a trace are always on the centerline and are always cut square. AutoCAD automatically calculates the correct bevels for connection to adjacent trace segments.

Traces are solid-filled when the Fill mode is on. When the Fill mode is off, only the outline of a trace appears. To set the Fill mode, use the system variable FILLMODE. The system variable TRACEWID stores the current width used for a Trace object. To query a system variable, use the GetVariable method. To set a system variable, use the SetVariable method.

To create a trace, use the AddTrace method.
*** Code
#+name:AcadTrace
#+header: :var m-p=m-p-AcadTrace
#+header: :var o-i=o-i-AcadTrace
#+header: :var des=des-AcadTrace
#+header: :var code=code
#+header: :results output file
#+header: :file AcadTrace.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadTrace
[[file:AcadTrace.lisp]]

** DwfUnderlay Object (ActiveX)
#+name: des-AcadDwfUnderlay
| Description                            |
|----------------------------------------|
| A source of DWF/DWFx underlay content. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDwfUnderlay
| cl-nm           |
|-----------------|
| AcadDwfUnderlay |
**** Object Inheritance
#+name: o-i-AcadDwfUnderlay
| Object          |
| AcadObject      |
| AcadEntity      |
| AcadUnderlay    |
| AcadDwfUnderlay |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDwfUnderlay
| Methods                | Properties                   | Events   |
|------------------------+------------------------------+----------|
| ArrayPolar             | AdjustForBackground          | Modified |
| ArrayRectangular       | Application                  |          |
| ClipBoundary           | ClippingEnabled              |          |
| Copy                   | Contrast                     |          |
| Delete                 | Document                     |          |
| GetBoundingBox         | EntityTransparency           |          |
| GetExtensionDictionary | Fade                         |          |
| GetXData               | File                         |          |
| Highlight              | Handle                       |          |
| IntersectWith          | HasExtensionDictionary       |          |
| Mirror                 | Height                       |          |
| Mirror3D               | Hyperlinks                   |          |
| Move                   | ItemName                     |          |
| Rotate                 | Layer                        |          |
| Rotate3D               | Linetype                     |          |
| ScaleEntity            | LinetypeScale                |          |
| SetXData               | Lineweight                   |          |
| TransformBy            | Material                     |          |
| Update                 | Monochrome                   |          |
|                        | ObjectID                     |          |
|                        | ObjectName                   |          |
|                        | OwnerID                      |          |
|                        | PlotStyleName                |          |
|                        | Position                     |          |
|                        | Rotation                     |          |
|                        | ScaleFactor                  |          |
|                        | TrueColor                    |          |
|                        | UnderlayLayerOverrideApplied |          |
|                        | UnderlayName                 |          |
|                        | UnderlayVisibility           |          |
|                        | Visible                      |          |
|                        | Width                        |          |
*** Remarks

Underlays are similar to raster images, except that users can snap to the content of an underlay. The AcadDwfUnderlay class supports DWF/DWFx files as underlays to AutoCAD drawings.
*** Code
#+name:AcadDwfUnderlay
#+header: :var m-p=m-p-AcadDwfUnderlay
#+header: :var o-i=o-i-AcadDwfUnderlay
#+header: :var des=des-AcadDwfUnderlay
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDwfUnderlay.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDwfUnderlay
[[file:AcadDwfUnderlay.lisp]]

** DgnUnderlay Object (ActiveX)
#+name: des-AcadDgnUnderlay
| Description                       |
|-----------------------------------|
| A source of DGN underlay content. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDgnUnderlay
| cl-nm           |
|-----------------|
| AcadDgnUnderlay |
**** Object Inheritance
#+name: o-i-AcadDgnUnderlay
| Object          |
| AcadObject      |
| AcadEntity      |
| AcadUnderlay    |
| AcadDgnUnderlay |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDgnUnderlay
| Methods                | Properties                   | Events   |
|------------------------+------------------------------+----------|
| ArrayPolar             | AdjustForBackground          | Modified |
| ArrayRectangular       | Application                  |          |
| ClipBoundary           | ClippingEnabled              |          |
| Copy                   | Contrast                     |          |
| Delete                 | Document                     |          |
| GetBoundingBox         | EntityTransparency           |          |
| GetExtensionDictionary | Fade                         |          |
| GetXData               | File                         |          |
| Highlight              | Handle                       |          |
| IntersectWith          | HasExtensionDictionary       |          |
| Mirror                 | Height                       |          |
| Mirror3D               | Hyperlinks                   |          |
| Move                   | ItemName                     |          |
| Rotate                 | Layer                        |          |
| Rotate3D               | Linetype                     |          |
| ScaleEntity            | LinetypeScale                |          |
| SetXData               | Lineweight                   |          |
| TransformBy            | Material                     |          |
| Update                 | Monochrome                   |          |
|                        | ObjectID                     |          |
|                        | ObjectName                   |          |
|                        | OwnerID                      |          |
|                        | PlotStyleName                |          |
|                        | Position                     |          |
|                        | Rotation                     |          |
|                        | ScaleFactor                  |          |
|                        | TrueColor                    |          |
|                        | UnderlayLayerOverrideApplied |          |
|                        | UnderlayName                 |          |
|                        | UnderlayVisibility           |          |
|                        | Visible                      |          |
|                        | Width                        |          |
*** Remarks

Underlays are similar to raster images, except that users can snap to the content of an underlay. The AcadDgnUnderlay class supports DGN files as underlays to AutoCAD drawings.
*** Code
#+name:AcadDgnUnderlay
#+header: :var m-p=m-p-AcadDgnUnderlay
#+header: :var o-i=o-i-AcadDgnUnderlay
#+header: :var des=des-AcadDgnUnderlay
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDgnUnderlay.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadDgnUnderlay
[[file:AcadDgnUnderlay.lisp]]

** DwfUnderlay Object (ActiveX)
#+name: des-AcadDwfUnderlay
| Description                            |
|----------------------------------------|
| A source of DWF/DWFx underlay content. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadDwfUnderlay
| cl-nm           |
|-----------------|
| AcadDwfUnderlay |
**** Object Inheritance
#+name: o-i-AcadDwfUnderlay
| Object          |
| AcadObject      |
| AcadEntity      |
| AcadUnderlay    |
| AcadDwfUnderlay |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadDwfUnderlay
| Methods                | Properties                   | Events   |
|------------------------+------------------------------+----------|
| ArrayPolar             | AdjustForBackground          | Modified |
| ArrayRectangular       | Application                  |          |
| ClipBoundary           | ClippingEnabled              |          |
| Copy                   | Contrast                     |          |
| Delete                 | Document                     |          |
| GetBoundingBox         | EntityTransparency           |          |
| GetExtensionDictionary | Fade                         |          |
| GetXData               | File                         |          |
| Highlight              | Handle                       |          |
| IntersectWith          | HasExtensionDictionary       |          |
| Mirror                 | Height                       |          |
| Mirror3D               | Hyperlinks                   |          |
| Move                   | ItemName                     |          |
| Rotate                 | Layer                        |          |
| Rotate3D               | Linetype                     |          |
| ScaleEntity            | LinetypeScale                |          |
| SetXData               | Lineweight                   |          |
| TransformBy            | Material                     |          |
| Update                 | Monochrome                   |          |
|                        | ObjectID                     |          |
|                        | ObjectName                   |          |
|                        | OwnerID                      |          |
|                        | PlotStyleName                |          |
|                        | Position                     |          |
|                        | Rotation                     |          |
|                        | ScaleFactor                  |          |
|                        | TrueColor                    |          |
|                        | UnderlayLayerOverrideApplied |          |
|                        | UnderlayName                 |          |
|                        | UnderlayVisibility           |          |
|                        | Visible                      |          |
|                        | Width                        |          |
*** Remarks

Underlays are similar to raster images, except that users can snap to the content of an underlay. The AcadDwfUnderlay class supports DWF/DWFx files as underlays to AutoCAD drawings.
*** Code
#+name:AcadDwfUnderlay
#+header: :var m-p=m-p-AcadDwfUnderlay
#+header: :var o-i=o-i-AcadDwfUnderlay
#+header: :var des=des-AcadDwfUnderlay
#+header: :var code=code
#+header: :results output file
#+header: :file AcadDwfUnderlay.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src
** PdfUnderlay Object (ActiveX)
#+name: des-AcadPdfUnderlay
| Description                       |
|-----------------------------------|
| A source of PDF underlay content. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadPdfUnderlay
| cl-nm           |
|-----------------|
| AcadPdfUnderlay |
**** Object Inheritance
#+name: o-i-AcadPdfUnderlay
| Object          |
| AcadObject      |
| AcadEntity      |
| AcadUnderlay    |
| AcadPdfUnderlay |
**** Create Using

#+BEGIN_SRC VBA
    Not applicable
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadPdfUnderlay
| Methods                | Properties                   | Events   |
|------------------------+------------------------------+----------|
| ArrayPolar             | AdjustForBackground          | Modified |
| ArrayRectangular       | Application                  |          |
| ClipBoundary           | ClippingEnabled              |          |
| Copy                   | Contrast                     |          |
| Delete                 | Document                     |          |
| GetBoundingBox         | EntityTransparency           |          |
| GetExtensionDictionary | Fade                         |          |
| GetXData               | File                         |          |
| Highlight              | Handle                       |          |
| IntersectWith          | HasExtensionDictionary       |          |
| Mirror                 | Height                       |          |
| Mirror3D               | Hyperlinks                   |          |
| Move                   | ItemName                     |          |
| Rotate                 | Layer                        |          |
| Rotate3D               | Linetype                     |          |
| ScaleEntity            | LinetypeScale                |          |
| SetXData               | Lineweight                   |          |
| TransformBy            | Material                     |          |
| Update                 | Monochrome                   |          |
|                        | ObjectID                     |          |
|                        | ObjectName                   |          |
|                        | OwnerID                      |          |
|                        | PlotStyleName                |          |
|                        | Position                     |          |
|                        | Rotation                     |          |
|                        | ScaleFactor                  |          |
|                        | TrueColor                    |          |
|                        | UnderlayLayerOverrideApplied |          |
|                        | UnderlayName                 |          |
|                        | UnderlayVisibility           |          |
|                        | Visible                      |          |
|                        | Width                        |          |
*** Remarks

Underlays are similar to raster images, except that users can snap to the content of an underlay. The AcadPdfUnderlay class supports PDF files as underlays to AutoCAD drawings.
*** Code
#+name:AcadPdfUnderlay
#+header: :var m-p=m-p-AcadPdfUnderlay
#+header: :var o-i=o-i-AcadPdfUnderlay
#+header: :var des=des-AcadPdfUnderlay
#+header: :var code=code
#+header: :results output file
#+header: :file AcadPdfUnderlay.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadPdfUnderlay
[[file:AcadPdfUnderlay.lisp]]

** XLine Object (ActiveX)
#+name: des-AcadXline
| Description                                              |
|----------------------------------------------------------|
| A construction line that is infinite in both directions. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadXline
| cl-nm     |
|-----------|
| AcadXline |
**** Object Inheritance
#+name: o-i-AcadXline
| Object     |
| AcadObject |
| AcadEntity |
| AcadXline  |
**** Create Using

#+BEGIN_SRC VBA
    ModelSpace.AddXline
    PaperSpace.AddXline
    Block.AddXline
#END_SRC
**** Access Via

#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#END_SRC
*** Members

These members are part of this object:

#+name: m-p-AcadXline
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | BasePoint              |          |
| Copy                   | DirectionVector        |          |
| Delete                 | Document               |          |
| GetBoundingBox         | EntityTransparency     |          |
| GetExtensionDictionary | Handle                 |          |
| GetXData               | HasExtensionDictionary |          |
| Highlight              | Hyperlinks             |          |
| IntersectWith          | Layer                  |          |
| Mirror                 | Linetype               |          |
| Mirror3D               | LinetypeScale          |          |
| Move                   | Lineweight             |          |
| Offset                 | Material               |          |
| Rotate                 | ObjectID               |          |
| Rotate3D               | ObjectName             |          |
| ScaleEntity            | OwnerID                |          |
| SetXData               | PlotStyleName          |          |
| TransformBy            | SecondPoint            |          |
| Update                 | TrueColor              |          |
|                        | Visible                |          |
*** Remarks

    To create an XLine, use the AddXLine method.
*** Code
#+name:AcadXline
#+header: :var m-p=m-p-AcadXline
#+header: :var o-i=o-i-AcadXline
#+header: :var des=des-AcadXline
#+header: :var code=code
#+header: :results output file
#+header: :file AcadXline.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadXline
[[file:AcadXline.lisp]]

** IAcadEntity Interface (ActiveX)
#+name: des-AcadEntity
| Description                                        |
|----------------------------------------------------|
| The standard interface for a basic AutoCAD entity. |

Supported Platforms: Windows only
*** Class Information
**** Class Name
#+name: cl-AcadXline
| cl-nm      |
|------------|
| AcadEntity |
**** Object Inheritance
#+name: o-i-AcadEntity
| Object     |
| AcadObject |
| AcadEntity |

**** Create Using
#+BEGIN_SRC VBA
    ModelSpace.Add<object>
    PaperSpace.Add<object>
    Block.Add<object>
    ModelSpace.AttachExternalReference
    PaperSpace.AttachExternalReference
    Block.AttachExternalReference
    ModelSpace.InsertBlock
    PaperSpace.InsertBlock
    Block.InsertBlock
#+END_SRC
**** Access Via
#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#+END_SRC
*** Members

These members are part of this object:
#+name: m-p-AcadEntity
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| ArrayPolar             | Application            | Modified |
| ArrayRectangular       | Document               |          |
| Copy                   | EntityTransparency     |          |
| Delete                 | Handle                 |          |
| GetBoundingBox         | HasExtensionDictionary |          |
| GetExtensionDictionary | Hyperlinks             |          |
| GetXData               | Layer                  |          |
| Highlight              | Linetype               |          |
| IntersectWith          | LinetypeScale          |          |
| Mirror                 | Lineweight             |          |
| Mirror3D               | Material               |          |
| Move                   | ObjectID               |          |
| Rotate                 | ObjectName             |          |
| Rotate3D               | OwnerID                |          |
| ScaleEntity            | PlotStyleName          |          |
| SetXData               | TrueColor              |          |
| TransformBy            | Visible                |          |
| Update                 |                        |          |
*** Remarks

IAcadEntity interface represents the default interface for AutoCAD entities.

If you are familiar with the ObjectARX environment you will see that IAcadEntity exposes AcDbEntity functionality.

*** Code
#+name:AcadEntity
#+header: :var m-p=m-p-AcadEntity
#+header: :var o-i=o-i-AcadEntity
#+header: :var des=des-AcadEntity
#+header: :var code=code
#+header: :results output file
#+header: :file AcadEntity.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadEntity
[[file:AcadEntity.lisp]]

** IAcadObject Interface (ActiveX)
#+name: des-AcadObject
| Description                                        |
|----------------------------------------------------|
| The standard interface for a basic AutoCAD object. |

Supported Platforms: Windows only
*** Class Information

**** Class Name
#+name: cl-AcadObject
| cl-nm      |
|------------|
| AcadObject |
**** Object Inheritance
#+name: o-i-AcadObject
| Object     |
| AcadObject |

**** Create Using
#+BEGIN_SRC VBA
    ModelSpace.Add<object>
    PaperSpace.Add<object>
    Block.Add<object>
    ModelSpace.AttachExternalReference
    PaperSpace.AttachExternalReference
    Block.AttachExternalReference
    ModelSpace.InsertBlock
    PaperSpace.InsertBlock
    Block.InsertBlock
#+END_SRC

**** Access Via
#+BEGIN_SRC VBA
    ModelSpace.Item
    PaperSpace.Item
    Block.Item
    SelectionSet.Item
    Group.Item
#+END_SRC

*** Members

These members are part of this object:
#+name: m-p-AcadObject
| Methods                | Properties             | Events   |
|------------------------+------------------------+----------|
| Delete                 | Application            | Modified |
| GetExtensionDictionary | Document               |          |
| GetXData               | Handle                 |          |
| SetXData               | HasExtensionDictionary |          |
|                        | ObjectID               |          |
|                        | ObjectName             |          |
|                        | OwnerID                |          |
*** Remarks

IAcadObject interface represents the default interface for most AutoCAD objects.

If you are familiar with the ObjectARX environment, you will see that IAcadObject exposes AcDbObject functionality.
*** Code
#+name:AcadObject
#+header: :var m-p=m-p-AcadObject
#+header: :var o-i=o-i-AcadObject
#+header: :var des=des-AcadObject
#+header: :var code=code
#+header: :results output file
#+header: :file AcadObject.lisp
#+begin_src lisp 
 (make-defclass m-p o-i des)
#+end_src

#+RESULTS: AcadObject
[[file:AcadObject.lisp]]
* Properties
** Application Property (ActiveX)

Gets the Application object.

Supported platforms: Windows only
Signature

VBA:

object.Application

object

    Type: All objects

    The object this property applies to.

Property Value

Read-only: Yes

Type: Application

The Application object that is the owner of the object.
Remarks

The Application object represents the application's frame controls and path settings, and provides the means to navigate down the object hierarchy.
Release Information

Releases: AutoCAD 2000 through AutoCAD 2017

    This property is no longer supported for use with the FileDependency and FileDependencies objects.

Examples

VBA:

Sub Example_Application()
    ' This example creates a line and then uses the
    ' Application property of the line to return the
    ' application name.
    Dim lineObj As AcadLine
    Dim startPoint(0 To 2) As Double
    Dim endPoint(0 To 2) As Double
    Dim myApp As AcadApplication
    
    ' Create a new line reference
    startPoint(0) = 0: startPoint(1) = 0: startPoint(2) = 0
    endPoint(0) = 2: endPoint(1) = 2: endPoint(2) = 0
    Set lineObj = ThisDrawing.ModelSpace.AddLine(startPoint, endPoint)
    lineObj.Update

    ' Return the application for the object
    Set myApp = lineObj.Application
    
    ' Display the name of the application
    MsgBox "The application name is: " & myApp.name, vbInformation, "Application Example"
End Sub

Visual LISP:

(vl-load-com)
(defun c:Example_Application()
    ;; This example creates a line and then uses the
    ;; Application property of the line to return the
    ;; application name.
    (setq acadObj (vlax-get-acad-object))
    (setq doc (vla-get-ActiveDocument acadObj))
  
    ;; Create a new line reference
    (setq startPoint (vlax-3d-point 0 0 0)
          endPoint (vlax-3d-point 2 2 0))

    (setq modelSpace (vla-get-ModelSpace doc))  
    (setq lineObj (vla-AddLine modelSpace startPoint endPoint))
    (vla-Update lineObj)

    ;; Return the application for the object
    (setq myApp (vla-get-Application lineObj))
    
    ;; Display the name of the application
    (alert (strcat "The application name is: " (vla-get-Name myApp)))
)


