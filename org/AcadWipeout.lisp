(defclass <acad-wipeout> (<acad-raster-image>)
  (
  (ac-application              :accessor ac-application              :initarg :ac-application              :initform nil :documentation "ac-application")
  (ac-brightness               :accessor ac-brightness               :initarg :ac-brightness               :initform nil :documentation "ac-brightness")
  (ac-clipping-enabled         :accessor ac-clipping-enabled         :initarg :ac-clipping-enabled         :initform nil :documentation "ac-clipping-enabled")
  (ac-contrast                 :accessor ac-contrast                 :initarg :ac-contrast                 :initform nil :documentation "ac-contrast")
  (ac-document                 :accessor ac-document                 :initarg :ac-document                 :initform nil :documentation "ac-document")
  (ac-entity-transparency      :accessor ac-entity-transparency      :initarg :ac-entity-transparency      :initform nil :documentation "ac-entity-transparency")
  (ac-fade                     :accessor ac-fade                     :initarg :ac-fade                     :initform nil :documentation "ac-fade")
  (ac-handle                   :accessor ac-handle                   :initarg :ac-handle                   :initform nil :documentation "ac-handle")
  (ac-has-extension-dictionary :accessor ac-has-extension-dictionary :initarg :ac-has-extension-dictionary :initform nil :documentation "ac-has-extension-dictionary")
  (ac-height                   :accessor ac-height                   :initarg :ac-height                   :initform nil :documentation "ac-height")
  (ac-hyperlinks               :accessor ac-hyperlinks               :initarg :ac-hyperlinks               :initform nil :documentation "ac-hyperlinks")
  (ac-image-file               :accessor ac-image-file               :initarg :ac-image-file               :initform nil :documentation "ac-image-file")
  (ac-image-height             :accessor ac-image-height             :initarg :ac-image-height             :initform nil :documentation "ac-image-height")
  (ac-image-visibility         :accessor ac-image-visibility         :initarg :ac-image-visibility         :initform nil :documentation "ac-image-visibility")
  (ac-image-width              :accessor ac-image-width              :initarg :ac-image-width              :initform nil :documentation "ac-image-width")
  (ac-layer                    :accessor ac-layer                    :initarg :ac-layer                    :initform nil :documentation "ac-layer")
  (ac-linetype                 :accessor ac-linetype                 :initarg :ac-linetype                 :initform nil :documentation "ac-linetype")
  (ac-linetype-scale           :accessor ac-linetype-scale           :initarg :ac-linetype-scale           :initform nil :documentation "ac-linetype-scale")
  (ac-lineweight               :accessor ac-lineweight               :initarg :ac-lineweight               :initform nil :documentation "ac-lineweight")
  (ac-material                 :accessor ac-material                 :initarg :ac-material                 :initform nil :documentation "ac-material")
  (ac-name                     :accessor ac-name                     :initarg :ac-name                     :initform nil :documentation "ac-name")
  (ac-object-id                :accessor ac-object-id                :initarg :ac-object-id                :initform nil :documentation "ac-object-id")
  (ac-object-name              :accessor ac-object-name              :initarg :ac-object-name              :initform nil :documentation "ac-object-name")
  (ac-origin                   :accessor ac-origin                   :initarg :ac-origin                   :initform nil :documentation "ac-origin")
  (ac-owner-id                 :accessor ac-owner-id                 :initarg :ac-owner-id                 :initform nil :documentation "ac-owner-id")
  (ac-plot-style-name          :accessor ac-plot-style-name          :initarg :ac-plot-style-name          :initform nil :documentation "ac-plot-style-name")
  (ac-rotation                 :accessor ac-rotation                 :initarg :ac-rotation                 :initform nil :documentation "ac-rotation")
  (ac-scale-factor             :accessor ac-scale-factor             :initarg :ac-scale-factor             :initform nil :documentation "ac-scale-factor")
  (ac-show-rotation            :accessor ac-show-rotation            :initarg :ac-show-rotation            :initform nil :documentation "ac-show-rotation")
  (ac-transparency             :accessor ac-transparency             :initarg :ac-transparency             :initform nil :documentation "ac-transparency")
  (ac-true-color               :accessor ac-true-color               :initarg :ac-true-color               :initform nil :documentation "ac-true-color")
  (ac-visible                  :accessor ac-visible                  :initarg :ac-visible                  :initform nil :documentation "ac-visible")
  (ac-width                    :accessor ac-width                    :initarg :ac-width                    :initform nil :documentation "ac-width")
  )
  (:documentation "Masking object that hides the objects below it in the current draw order."))

(defparameter *acad-wipeout-properties* '(ac-application ac-brightness ac-clipping-enabled ac-contrast ac-document ac-entity-transparency ac-fade ac-handle ac-has-extension-dictionary ac-height ac-hyperlinks ac-image-file ac-image-height ac-image-visibility ac-image-width ac-layer ac-linetype ac-linetype-scale ac-lineweight ac-material ac-name ac-object-id ac-object-name ac-origin ac-owner-id ac-plot-style-name ac-rotation ac-scale-factor ac-show-rotation ac-transparency ac-true-color ac-visible ac-width))

(mapcar #'dxf/utils:make-slot (set-difference *acad-wipeout-properties* *acad-raster-image-properties*))
